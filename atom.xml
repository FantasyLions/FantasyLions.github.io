<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Serio&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://locahost:4000/"/>
  <updated>2020-01-07T08:03:58.000Z</updated>
  <id>http://locahost:4000/</id>
  
  <author>
    <name>Serio</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Airflow 使用 Celery 时，如何添加 Celery 配置</title>
    <link href="http://locahost:4000/2020/03/11/2020-01-07-adding-extra-celery-configs-to-airflow/"/>
    <id>http://locahost:4000/2020/03/11/2020-01-07-adding-extra-celery-configs-to-airflow/</id>
    <published>2020-03-11T14:46:32.070Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>前段时间我选用了 <code>Airflow</code> 对 <code>wms</code> 进行数据归档，在运行一段时间后，经常发现会报以下错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">[2020-01-07 14:41:34,465: WARNING&#x2F;ForkPoolWorker-5] Failed operation _store_result.  Retrying 2 more times.</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;sqlalchemy&#x2F;engine&#x2F;base.py&quot;, line 1245, in _execute_context</span><br><span class="line">    self.dialect.do_execute(</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;sqlalchemy&#x2F;engine&#x2F;default.py&quot;, line 581, in do_execute</span><br><span class="line">    cursor.execute(statement, parameters)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;MySQLdb&#x2F;cursors.py&quot;, line 255, in execute</span><br><span class="line">    self.errorhandler(self, exc, value)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;MySQLdb&#x2F;connections.py&quot;, line 50, in defaulterrorhandler</span><br><span class="line">    raise errorvalue</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;MySQLdb&#x2F;cursors.py&quot;, line 252, in execute</span><br><span class="line">    res &#x3D; self._query(query)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;MySQLdb&#x2F;cursors.py&quot;, line 378, in _query</span><br><span class="line">    db.query(q)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;MySQLdb&#x2F;connections.py&quot;, line 280, in query</span><br><span class="line">    _mysql.connection.query(self, query)</span><br><span class="line">_mysql_exceptions.OperationalError: (2006, &#39;MySQL server has gone away&#39;)</span><br><span class="line"></span><br><span class="line">The above exception was the direct cause of the following exception:</span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;celery&#x2F;backends&#x2F;database&#x2F;__init__.py&quot;, line 53, in _inner</span><br><span class="line">    return fun(*args, **kwargs)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;celery&#x2F;backends&#x2F;database&#x2F;__init__.py&quot;, line 107, in _store_result</span><br><span class="line">    task &#x3D; list(session.query(Task).filter(Task.task_id &#x3D;&#x3D; task_id))</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;sqlalchemy&#x2F;orm&#x2F;query.py&quot;, line 3367, in __iter__</span><br><span class="line">    return self._execute_and_instances(context)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;sqlalchemy&#x2F;orm&#x2F;query.py&quot;, line 3392, in _execute_and_instances</span><br><span class="line">    result &#x3D; conn.execute(querycontext.statement, self._params)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;sqlalchemy&#x2F;engine&#x2F;base.py&quot;, line 982, in execute</span><br><span class="line">    return meth(self, multiparams, params)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;sqlalchemy&#x2F;sql&#x2F;elements.py&quot;, line 287, in _execute_on_connection</span><br><span class="line">    return connection._execute_clauseelement(self, multiparams, params)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;sqlalchemy&#x2F;engine&#x2F;base.py&quot;, line 1095, in _execute_clauseelement</span><br><span class="line">    ret &#x3D; self._execute_context(</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;sqlalchemy&#x2F;engine&#x2F;base.py&quot;, line 1249, in _execute_context</span><br><span class="line">    self._handle_dbapi_exception(</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;sqlalchemy&#x2F;engine&#x2F;base.py&quot;, line 1476, in _handle_dbapi_exception</span><br><span class="line">    util.raise_from_cause(sqlalchemy_exception, exc_info)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;sqlalchemy&#x2F;util&#x2F;compat.py&quot;, line 398, in raise_from_cause</span><br><span class="line">    reraise(type(exception), exception, tb&#x3D;exc_tb, cause&#x3D;cause)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;sqlalchemy&#x2F;util&#x2F;compat.py&quot;, line 152, in reraise</span><br><span class="line">    raise value.with_traceback(tb)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;sqlalchemy&#x2F;engine&#x2F;base.py&quot;, line 1245, in _execute_context</span><br><span class="line">    self.dialect.do_execute(</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;sqlalchemy&#x2F;engine&#x2F;default.py&quot;, line 581, in do_execute</span><br><span class="line">    cursor.execute(statement, parameters)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;MySQLdb&#x2F;cursors.py&quot;, line 255, in execute</span><br><span class="line">    self.errorhandler(self, exc, value)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;MySQLdb&#x2F;connections.py&quot;, line 50, in defaulterrorhandler</span><br><span class="line">    raise errorvalue</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;MySQLdb&#x2F;cursors.py&quot;, line 252, in execute</span><br><span class="line">    res &#x3D; self._query(query)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;MySQLdb&#x2F;cursors.py&quot;, line 378, in _query</span><br><span class="line">    db.query(q)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;MySQLdb&#x2F;connections.py&quot;, line 280, in query</span><br><span class="line">    _mysql.connection.query(self, query)</span><br><span class="line">sqlalchemy.exc.OperationalError: (_mysql_exceptions.OperationalError) (2006, &#39;MySQL server has gone away&#39;)</span><br><span class="line">[SQL: SELECT celery_taskmeta.id AS celery_taskmeta_id, celery_taskmeta.task_id AS celery_taskmeta_task_id, celery_taskmeta.status AS celery_taskmeta_status, celery_tas</span><br><span class="line">kmeta.result AS celery_taskmeta_result, celery_taskmeta.date_done AS celery_taskmeta_date_done, celery_taskmeta.traceback AS celery_taskmeta_traceback </span><br><span class="line">FROM celery_taskmeta </span><br><span class="line">WHERE celery_taskmeta.task_id &#x3D; %s]</span><br><span class="line">[parameters: (&#39;e909b916-4284-47c4-bc5b-321bc32eb9f9&#39;,)]</span><br><span class="line">(Background on this error at: http:&#x2F;&#x2F;sqlalche.me&#x2F;e&#x2F;e3q8)</span><br></pre></td></tr></table></figure><h3 id="解决过程"><a href="#解决过程" class="headerlink" title="解决过程"></a>解决过程</h3><p>查了下资料一般情况下数据库服务器断开连接后，被连接池未收回将会导致以下错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MySQL server has gone away</span><br></pre></td></tr></table></figure><p>所以看了下 <code>sqlalchemy</code> 的配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">sql_alchemy_pool_enabled &#x3D; True</span><br><span class="line"></span><br><span class="line"># The SqlAlchemy pool size is the maximum number of database connections</span><br><span class="line"># in the pool. 0 indicates no limit.</span><br><span class="line">sql_alchemy_pool_size &#x3D; 5</span><br><span class="line"></span><br><span class="line"># The maximum overflow size of the pool.</span><br><span class="line"># When the number of checked-out connections reaches the size set in pool_size,</span><br><span class="line"># additional connections will be returned up to this limit.</span><br><span class="line"># When those additional connections are returned to the pool, they are disconnected and discarded.</span><br><span class="line"># It follows then that the total number of simultaneous connections the pool will allow is pool_size + max_overflow,</span><br><span class="line"># and the total number of &quot;sleeping&quot; connections the pool will allow is pool_size.</span><br><span class="line"># max_overflow can be set to -1 to indicate no overflow limit;</span><br><span class="line"># no limit will be placed on the total number of concurrent connections. Defaults to 10.</span><br><span class="line">sql_alchemy_max_overflow &#x3D; 10</span><br><span class="line"></span><br><span class="line"># The SqlAlchemy pool recycle is the number of seconds a connection</span><br><span class="line"># can be idle in the pool before it is invalidated. This config does</span><br><span class="line"># not apply to sqlite. If the number of DB connections is ever exceeded,</span><br><span class="line"># a lower config value will allow the system to recover faster.</span><br><span class="line">sql_alchemy_pool_recycle &#x3D; 1800</span><br><span class="line"></span><br><span class="line"># Check connection at the start of each connection pool checkout.</span><br><span class="line"># Typically, this is a simple statement like “SELECT 1”.</span><br><span class="line"># More information here: https:&#x2F;&#x2F;docs.sqlalchemy.org&#x2F;en&#x2F;13&#x2F;core&#x2F;pooling.html#disconnect-handling-pessimistic</span><br><span class="line">sql_alchemy_pool_pre_ping &#x3D; True</span><br><span class="line"></span><br><span class="line">sql_alchemy_pool_size &#x3D; 5</span><br><span class="line"></span><br><span class="line"># The maximum overflow size of the pool.</span><br><span class="line"># When the number of checked-out connections reaches the size set in pool_size,</span><br><span class="line"># additional connections will be returned up to this limit.</span><br><span class="line"># When those additional connections are returned to the pool, they are disconnected and discarded.</span><br><span class="line"># It follows then that the total number of simultaneous connections the pool will allow is pool_size + max_overflow,</span><br><span class="line"># and the total number of &quot;sleeping&quot; connections the pool will allow is pool_size.</span><br><span class="line"># max_overflow can be set to -1 to indicate no overflow limit;</span><br><span class="line"># no limit will be placed on the total number of concurrent connections. Defaults to 10.</span><br><span class="line">sql_alchemy_max_overflow &#x3D; 10</span><br><span class="line"></span><br><span class="line"># The SqlAlchemy pool recycle is the number of seconds a connection</span><br><span class="line"># can be idle in the pool before it is invalidated. This config does</span><br><span class="line"># not apply to sqlite. If the number of DB connections is ever exceeded,</span><br><span class="line"># a lower config value will allow the system to recover faster.</span><br><span class="line">sql_alchemy_pool_recycle &#x3D; 1800</span><br><span class="line"></span><br><span class="line"># Check connection at the start of each connection pool checkout.</span><br><span class="line"># Typically, this is a simple statement like “SELECT 1”.</span><br><span class="line"># More information here: https:&#x2F;&#x2F;docs.sqlalchemy.org&#x2F;en&#x2F;13&#x2F;core&#x2F;pooling.html#disconnect-handling-pessimistic</span><br><span class="line">sql_alchemy_pool_pre_ping &#x3D; True</span><br></pre></td></tr></table></figure><p>该配的都配置上了，因为我们的任务是一天跑一次，查了下数据库变量 <code>waits_timeout</code> 是 <code>28800</code> ，所以直接改成25个小时。</p><p>到了第二天发现还是报这个错，很奇怪该配的都配上了，到底是哪里的问题？</p><p>仔细翻下报错日志：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">File &quot;&#x2F;usr&#x2F;local&#x2F;python38&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;celery&#x2F;backends&#x2F;database&#x2F;__init__.py&quot;, line 107, in _store_result</span><br><span class="line">    task &#x3D; list(session.query(Task).filter(Task.task_id &#x3D;&#x3D; task_id))</span><br></pre></td></tr></table></figure><p>难道 <code>Airflow</code> 的 <code>sqlalchemy</code> 配置对 <code>celery</code> 不生效？</p><p>翻阅下源码发现果然 <code>Airflow</code> 配置的 <code>sqlalchemy</code> 只对 <code>Airflow</code> 生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app &#x3D; Celery(</span><br><span class="line">    conf.get(&#39;celery&#39;, &#39;CELERY_APP_NAME&#39;),</span><br><span class="line">    config_source&#x3D;celery_configuration)</span><br></pre></td></tr></table></figure><p>在继续翻阅 <code>Celery</code> 文档看有没有办法配置</p><blockquote><p>database_short_lived_sessions<br>Default: Disabled by default.</p><p>Short lived sessions are disabled by default. If enabled they can drastically reduce performance, especially on systems processing lots of tasks. This option is useful on low-traffic workers that experience errors as a result of cached database connections going stale through inactivity. For example, intermittent errors like (OperationalError) (2006, ‘MySQL server has gone away’) can be fixed by enabling short lived sessions. This option only affects the database backend.</p></blockquote><p>文档告知通过<code>database_short_lived_sessions</code> 参数就可以避免这个问题，但是新的问题又来了，如何在 <code>Airflow</code> 中配置额外的 <code>Celery</code> 配置呢？</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>找到以下文件拷贝到 <code>DAGS</code> 目录下，重新命名为 <code>my_celery_config</code> 随便起</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Python&#x2F;Python37&#x2F;site-packages&#x2F;airflow&#x2F;config_templates&#x2F;default_celery.py</span><br></pre></td></tr></table></figure><p>修改 <code>Airflow.cfg</code> 配置<br>找到 <code>celery_config_options</code> 将配置改为<br>刚才起的名字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">celery_config_options &#x3D; my_celery_config.DEFAULT_CELERY_CONFIG</span><br></pre></td></tr></table></figure><p>在 <code>my_celery_config</code> 文件中的 <code>DEFAULT_CELERY_CONFIG</code> dict 中就可以随便加自己需要的 <code>Celery</code> 配置</p>]]></content>
    
    <summary type="html">
    
      Airflow 使用 Celery 时，如何添加 Celery 配置
    
    </summary>
    
    
      <category term="tool" scheme="http://locahost:4000/categories/tool/"/>
    
    
      <category term="tool" scheme="http://locahost:4000/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>如何使用 Enterprise Architect 画 UML</title>
    <link href="http://locahost:4000/2020/03/11/2019-01-17-How-to-use-EA/"/>
    <id>http://locahost:4000/2020/03/11/2019-01-17-How-to-use-EA/</id>
    <published>2020-03-11T14:46:32.067Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="重识-EA-Enterprise-Architect"><a href="#重识-EA-Enterprise-Architect" class="headerlink" title="重识 EA (Enterprise Architect)"></a>重识 EA (Enterprise Architect)</h3><p>公司使用的 OMS 是从外面买过来后进行二次开发的，而对方给到的技术文档不够全面，有很大部分的业务细节需要自己看代码梳理。想起来之前 IBM Developer 看过一篇关于<a href="https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/index.html" target="_blank" rel="noopener"> Tomcat 原理</a>的文章，文章里面用到了很多建模语言（UML）去描述代码逻辑结构。这不仅看起来高大上而且逻辑清晰易懂，就想着将上学那会学的 UML 重新捡起来，学着用 UML 去梳理代码逻辑。</p><p>记得上学那会写 UML 的工具叫 EA ，这两天我就给扒拉出来重新装上又学了一遍。下面就讲下 EA 的使用</p><h3 id="EA-简介"><a href="#EA-简介" class="headerlink" title="EA 简介"></a>EA 简介</h3><p>EA 的英文全称叫 Enterprise Architect，是由澳大利亚公司 Sparx Systems 开发的一款基于 OMG UML 的可视化模型与设计工具，提供了对软件系统的设计和构建、业务流程建模和基于领域建模的支持，被企业和组织不仅应用于对系统的建模，还用于推进模型在整个应用程序开发周期中实现。不是我们玩游戏的那个 EA 哦！在官网的文档中还有看到 EA 可以跟 Eclipse 做无缝的对接，很可惜的是没有找到有跟 IDEA 相关的。</p><h3 id="EA-安装下载"><a href="#EA-安装下载" class="headerlink" title="EA 安装下载"></a>EA 安装下载</h3><p>安装 EA 其实很简单，Windows 系统在<a href="https://sparxsystems.com/products/ea/trial/request.html" target="_blank" rel="noopener">官网下载</a>下来后直接下一步下一步即可。但是 EA 是需要付费的，当然你也可以选择教学版的或者免费试用30天，这里我给大家提供一个密钥：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">834735814236</span><br></pre></td></tr></table></figure><p>这个 Key 目前本人在使用，我的 EA 版本是 14.0.1422。</p><p>我之前安装的时候被我不小心跳过了输入密钥的环节，因为英文不好后来找输入密钥的窗口找了很久，这里记录下方便遇到跟我一样问题的朋友参考。</p><p>点击左上角Start –&gt; Help –&gt; Register and Manage Your License Keys –&gt; 在输入框中输入 key。<br><img src="https://raw.githubusercontent.com/fantasylion/fantasylion.github.io/master/images/find_register_key_step1.jpg" alt=""></p><p>在弹出的输入框中输入key，我这里窗口 title 显示 Upgrade Key 应该是因为我已经注册过 key 的原因<br><img src="https://raw.githubusercontent.com/fantasylion/fantasylion.github.io/master/images/find_register_key_step2.jpg" alt=""></p><h3 id="EA-的使用"><a href="#EA-的使用" class="headerlink" title="EA 的使用"></a>EA 的使用</h3><p>既然 EA 是 UML 的可视化模型与设计工具，当然是支持 UML 常见的模型，但是目前我也是刚开始使用 UML 这里只记录下怎么画用例模型中的时序图。</p><p>常见 UML 模型</p><ul><li>业务过程模型</li><li>用例模型</li><li>动态模型</li><li>逻辑模型</li><li>组件模型</li><li>物理模型</li></ul><p>在 EA 安装完成后运行 EA，首先看到的应该是一张 Start Page。<br><img src="https://raw.githubusercontent.com/fantasylion/fantasylion.github.io/master/images/EA_start_page.png" alt=""></p><p>如上图所示，正常打开后分这么几个区域，最上方显示的是各种功能选项下方一般有多个区域可以通过拖动自定义摆放位置。 图中最左边的 Toolbox 是模型的工具栏主要放置当前编辑模型的组件，中间大块的是编辑区以选项卡的方式呈现可以在最下方点击不同选项卡切换编辑区，右边数来第二个区域显示了三个模块 Diagram Properties 、 Resources 、 Project Browser 也是通过选项卡的方式呈现，最后一个 Portals 可以显示指南书、学习、状态查询……</p><h4 id="创建一个项目"><a href="#创建一个项目" class="headerlink" title="创建一个项目"></a>创建一个项目</h4><p>点击编辑区 Start Page 选项卡中的 New File 选项，在选择项目目录输入文件名点击保存。或者在最上方区域的左上角点击 EA 图标后点击 New Project 创建一个新的项目。</p><p>在项目创建成功后开始创建 Model ，点击最上方区域右下角栅格式的图标 -&gt; 点击 Add Model 后 -&gt; 在编辑区选择 UML 并选择相应模型（这演示我选择的是时序图 Sequence Diagrams -&gt; Starter Sequence Diagram） -&gt; 点击 Create Pattern(s)</p><p>步骤如下图所示<br><img src="https://raw.githubusercontent.com/fantasylion/fantasylion.github.io/master/images/create_model_step1.jpg" alt=""></p><p>下图为编辑区操作，这里 Create Pattern(s) 按钮在图的左下角忘记圈出来了<br><img src="https://raw.githubusercontent.com/fantasylion/fantasylion.github.io/master/images/create_model_step2.jpg" alt=""></p><p>创建 Model 成功后在 Project Browser 中可以看到已经成功创建了一个 Model (Starter Sequence Diagram)，第三级的为当前包含的组件，点击下图中画红圈选项在编辑区中将会打开 Starter Sequence Diagram 开始编辑<br><img src="https://raw.githubusercontent.com/fantasylion/fantasylion.github.io/master/images/edit_model_step1.jpg" alt=""></p><p>编辑区如下图所示<br><img src="https://raw.githubusercontent.com/fantasylion/fantasylion.github.io/master/images/edit_model_step_2.jpg" alt=""></p><h4 id="如何编辑设计模型"><a href="#如何编辑设计模型" class="headerlink" title="如何编辑设计模型"></a>如何编辑设计模型</h4><p>将 ToolBox 中的相应的组件拖拽到编辑区中即可生成，在编辑区双击相应的主键将会弹出组件的属性框，在属性框可以修改组件名称、类型、结构等属性，这里就不做详细的记录。</p><h4 id="如何将编辑完的模型导出图片"><a href="#如何将编辑完的模型导出图片" class="headerlink" title="如何将编辑完的模型导出图片"></a>如何将编辑完的模型导出图片</h4><p>点击最上方区域的 Publish 选项 -&gt; Image -&gt; Save to File 写好图片名和格式保存到相应目录中，或者选择 Save to clipboard 保存到粘贴板中。</p><p>如下图：</p><p><img src="https://raw.githubusercontent.com/fantasylion/fantasylion.github.io/master/images/pubish_step1.jpg" alt=""></p><h3 id="最后展示下最终的成果"><a href="#最后展示下最终的成果" class="headerlink" title="最后展示下最终的成果"></a>最后展示下最终的成果</h3><p><img src="https://raw.githubusercontent.com/fantasylion/fantasylion.github.io/master/images/publish_step2.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      EA 的英文全称叫 Enterprise Architect，是由澳大利亚公司 Sparx Systems 开发的一款基于 OMG UML 的可视化模型与设计工具，提供了对软件系统的设计和构建、业务流程建模和基于领域建模的支持，被企业和组织不仅应用于对系统的建模，还用于推进模型在整个应用程序开发周期中实现。
    
    </summary>
    
    
      <category term="Tools" scheme="http://locahost:4000/categories/Tools/"/>
    
    
      <category term="uml" scheme="http://locahost:4000/tags/uml/"/>
    
  </entry>
  
  <entry>
    <title>zookeeper 应用指南中文版</title>
    <link href="http://locahost:4000/2020/03/11/2018-03-20-zookeeper-guide-chinese/"/>
    <id>http://locahost:4000/2020/03/11/2018-03-20-zookeeper-guide-chinese/</id>
    <published>2020-03-11T14:46:32.065Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本文档适合于希望利用ZooKeeper创建协调服务分布式应用程序的开发人员。本文包含了概念和实例。</p><p>文档的前四部分对各种ZooKeeper概念进行了深入的讨论。它可以让你更深入的了解ZooKeeper是怎么运行的和怎么去使用它。这里不包含ZooKeeper的源码，但是这里详细描述了分布式计算相关的问题。这四部分分别为：</p><ul><li>ZooKeeper 数据模型</li><li>ZooKeeper 会话</li><li>ZooKeeper 观察者（订阅者）</li><li>一致性保证  </li></ul><p>以下为后四部分描述了编程设计的信息：</p><ul><li>构建模块：ZooKeeper 操作指南</li><li>绑定</li><li>程序结构和一些简单的案例</li><li>陷阱：常见的问题和故障排除 </li></ul><p>本文后提供一份附件包含了一些其他关于 ZooKeeper 的信息。</p><p>本文中大部分信息都是作为独立参考资料编写的。在你开始写第一个ZooKeeper应用之前，你最好先阅读下这两部分文章，<code>ZooKeeper 数据模型</code>和 <code>ZooKeeper 基础操作</code>。当然<code>简单示例</code>对你理解 ZooKeeper 客户端应用也有很大帮助。</p><h2 id="ZooKeeper-数据模型"><a href="#ZooKeeper-数据模型" class="headerlink" title="ZooKeeper 数据模型"></a>ZooKeeper 数据模型</h2><p>ZooKeeper 使用分级命名规则，看起来就像一个分布式文件系统。它们唯一的区别是 ZooKeeper 命名空间中的每个节点都可以拥有相关数据和子节点。就像是一个文件系统它允许一个文件可以当做目录来用。节点的路径可以用 canonical、绝对路径、斜线路径表示；这里不可以使用相对路径。任何unicode字符都可以在路径中被使用但是需要遵从一下规则：</p><ul><li><code>null</code> 字符(<code>\u0000</code>)不能被用在路径名上。（这是因为使用 C 编译导致的）</li><li>以下几个字符不允许使用：<code>\ud800 -uF8FFF</code>, <code>\uFFF0 - uFFFF</code>。</li><li><code>“.”</code> 字符可以被用在路径名上，但是 <code>“.”</code> 和 <code>“..”</code> 不能用于单独指示一个节点，因为ZooKeeper不能使用相对路径。后面这几个路径被认为是无效的：<code>&quot;/a/b/./c&quot;</code> or <code>&quot;/a/b/../c&quot;</code>。</li><li>zookeeper 是系统保留字符，不允许被使用。</li></ul><h3 id="ZNodes"><a href="#ZNodes" class="headerlink" title="ZNodes"></a>ZNodes</h3><p>ZooKeeper 树中的任何一个节点都依赖于 <code>ZNode</code>。<code>ZNode</code> 维护一个统计结构，这个结构包含了修改数据和修改ACL的版本号。当然这个统计结构也有一个时间戳。这个版本号和时间戳一起使用可以用来 ZooKeeper 去验证缓存和定位更新。每当有一个znode的数据被修改，这个版本号就会增加一个值。比如：当客户端检索数据的时候它也会收到这个数据的版本号。当一个客户端执行修改和删除的时候，它必须提供一个修改后的节点数据的版本号。如果这个版本号跟实际的数据版本号不匹配，本次的更新将会失败。（这个行为可以被覆盖。详情请看……）</p><table><thead><tr><th align="left">Note</th></tr></thead><tbody><tr><td align="left">在分布式应用引擎上，节点可以是指一台主机、一个服务、集群中的某个成员、一个客户端进程等等。在 ZooKeeper 文档中，<code>ZNodes</code> 指一个数据节点。<code>Servers</code> 指启动ZooKeeper服务的服务器；<code>quorum peers</code> 指服务集群； 客户端指任何一台主机或者使用 ZooKeeper 服务的进程</td></tr></tbody></table><p><code>znode</code> 是 ZooKeeper 的主要概念程序员需要认真了解。Znodes有几个特性值得在此提及：</p><h4 id="ZooKeepr-监控"><a href="#ZooKeepr-监控" class="headerlink" title="ZooKeepr 监控"></a>ZooKeepr 监控</h4><p>客户端可以在 <code>znodes</code> 上设置监控。如果被监控节点有修改，<code>znode</code> 将触发监控然后再清除这个监控。当监控被触发后，ZooKeeper 将会发送通知到客户端。更多关于监控可以在 <code>ZooKeeper 监控</code> 部分找到。</p><h4 id="数据访问"><a href="#数据访问" class="headerlink" title="数据访问"></a>数据访问</h4><p>在一个命名空间下每个 <code>Znode</code> 数据存储的读写都是原子化的。读取操作将获取到所有这个 <code>znode</code> 相关的字节数据，写入操作将会替换所有数据。每个节点都会有一个访问控制列表(ACL)用于限制谁可以做什么。</p><p>ZooKeeper 并不是设计用来当做数据库或者大量的数据存储。相反，它管理协调数据。这个数据可以通过一个 form 表单配置、状态信息、集合点等形式出现。各种形式的协调数据的共同特点是它们相对较小：以千字节为单位。ZooKeeper的客户端还有服务实例都要检查并确保每个 Znode 的数据要小于1M，并且每个数据都必须小于平均值。<br>操作相对较大的数据会比其他数据时间要长，并且由于需要花费额外多的时间在网络传输上和存入存储媒介中会导致操作延时。如果真的需要比较大的数据存储，通常采用大容量的存储系统去处理这些数据，类似 NFS、HDFS ，然后将存储指针指向 ZooKeeper 的存储位置。</p><h4 id="临时节点"><a href="#临时节点" class="headerlink" title="临时节点"></a>临时节点</h4><p>ZooKeeper 当然也临时节点的概念。这些 Znodes 生命周期同   保持一致，当 session 创建的时候 Znodes 将被激活。当 session 结束 这个 Znode 也同时将被删除。正是由于这个行为临时节点不允许有子节点。</p><h4 id="序列节点–唯一命名"><a href="#序列节点–唯一命名" class="headerlink" title="序列节点–唯一命名"></a>序列节点–唯一命名</h4><p>在创建一个Znode的时候你也可以要求 ZooKeeper 在路径的后面追加一个递增的计数器。这个计数器相对于 Znode 是唯一的。这个计数器格式为 %010d – 这是一个10位数，用0占位（计数器用这个格式排序），“举例：<path>000000000001”。点击<a href="https://zookeeper.apache.org/doc/r3.4.11/recipes.html#sc_recipes_Queues" target="_blank" rel="noopener">Queue Recipe</a>查看使用这个功能的例子。注意：用于存储下一个序列号的计数器是由父节点维护的带符号整型（4字节），计数器在增加到2147483647之后会溢出（导致名称为“<path> -2147483647”）。</p><h3 id="ZooKeeper-时间"><a href="#ZooKeeper-时间" class="headerlink" title="ZooKeeper 时间"></a>ZooKeeper 时间</h3><p>ZooKeeper 有很多方法去追踪这个时间</p><ul><li><strong>xid</strong><br><br>ZooKeeper 状态有任何修改都将会收到一个 zxid(ZooKeeper Transaction Id) 的标记。这个暴露了 ZooKeeper 所有的修改排序。每次修改都将会有一个唯一的   zxid，如果 zxid1 小于 zxid2 那么就可以认为 zxid1 是发生在 zxid2 之前。</li><li><strong>Version numbers</strong><br><br>所有对节点的修改都将造成这个节点的版本号增加。这三个版本数字就是version（znode数据修改的数量），cversion（znode子节点修改的数量），aversion（znode  修改的数量）。</li><li><strong>Ticks</strong><br><br>当使用多服务的 ZooKeeper，服务将使用 ticks 去定义事件时间，像（上传状态，会话超时，管道连接超时等等）。Tick 只会间接的暴露最小会话时间（两倍的 Tick time）；如果一个客户端的请求超时时间小于这个会话时间，服务器将告知客户端这个超时时间以最小的超时时间为准。</li><li><strong>Real time</strong><br><br>ZooKeeper 不使用真实的时间或锁定时间，除了将时间戳放到 znode 的创建和修改的统计结构中。</li></ul><h3 id="ZooKeeper-统计结构"><a href="#ZooKeeper-统计结构" class="headerlink" title="ZooKeeper 统计结构"></a>ZooKeeper 统计结构</h3><p>ZooKeeper 每个节点的统计结构由以下几个字段组成：</p><ul><li><strong>czxid</strong><br><br>表示造成这次 znode 创建的时间。</li><li><strong>mzxid</strong><br><br>znode 最后的修改时间。</li><li><strong>pzxid</strong><br><br>znode 子节点最后的修改时间。</li><li><strong>ctime</strong><br><br>znode 创建时间（以毫秒为单位）。</li><li><strong>mtime</strong><br><br>znode 最后的修改时间（以毫秒为单位）。</li><li><strong>version</strong><br><br>znode 数据的修改次数。</li><li><strong>cversion</strong><br><br>znode 子节点的修改次数</li><li><strong>aversion</strong><br><br>znode 的修改次数</li><li><strong>ephemeralOwner</strong><br><br>如果是暂时节点，表示这个 znode 的主人的 session id 。如果不是，这个值为0.</li><li><strong>dataLength</strong><br><br>znode 数据字段的长度。</li><li><strong>numChildren</strong><br><br>znode 有多少子节点</li></ul><h2 id="ZooKeeper-会话"><a href="#ZooKeeper-会话" class="headerlink" title="ZooKeeper 会话"></a>ZooKeeper 会话</h2><p>ZooKeeper 客户端通过语言绑定于服务创建握手来建立与 ZooKeeper 服务的会话。一旦创建，句柄就会以CONNECTING状态开始，并且客户端库尝试连接到组成ZooKeeper服务的服务器之一，此时它将切换到CONNECTED状态。在正常的操作时候将会是这两者状态之一。如果发生一个不可逆转的错误事件，像 session 过期或者认证失败，再或者应用直接关闭了句柄，这个句柄将切换到 closed 状态。下面的图表展示了 ZooKeeper 客户端事物的处理状态：<br><img src="http://fantasylion.github.io/images/state_dia.jpg" alt="结构图"><br><br>要创建客户端会话，应用程序代码必须提供一个连接字符串，其中包含以逗号分隔的host：port对列表，每个对应于一个ZooKeeper服务器（举例：”127.0.0.1:4545” 或者 “127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002”）。ZooKeeper 客户端库将随机挑选一台服务器然后尝试去链接它。如果链接失败或者由于某些原因服务端到客户端断开链接，客户端都会自动尝试链接列表中的下一个服务，知道链接重新建立。</p><p><strong>3.2.0 版本添加</strong><br><br>可选后缀 “chroot” 可以追加到连接字符串后面。这会运行客户端命令以相对ROOT路径的形式（类似unix系统的chroot命令）。如果要举例的话看起来就像：”127.0.0.1:4545/app/a” 或 “127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002/app/a” 这样客户端就会以 “app/a” 为根目录，所有的路径都会相对于这个根目录。比如 “/foo/bar” 返回的结果将是运行 “/app/a/foo/bar” 得到（从服务器的角度来看）。这个功能在多租户环境真的很有用，每个 ZooKeeper 服务的用户可以有不同的根目录。这使得复用变得简单，用户可以将他的应用程序根目录编码成 “/” ，但是实际的位置可以在发布的时候在去决定。</p><p>当客户端获取到连接 ZooKeeper 服务的句柄，ZooKeeper 将创建一个以64位的数字表示的 ZooKeeper session，派送到客户端。如果客户端连接到一个不同的 ZooKeeper 服务，它将会发送一个 session id 作为连接握手的一个部分。为了保证安全，服务端会给 session id 创建一个秘密，任何的 ZooKeeper 服务都可以去验证。这个密码将会在客户端建立会话的时候和 session id 一起发送到客户端。客户端随时都可以发送这个密码和 session id 跟一个新的服务重新建立会话。</p><p>ZooKeeper 客户端库用来创建 ZooKeeper session超时的参数是用毫秒表示。客户端发送一个超时请求，服务端将响应一个超时给到客户端。现在的实例要求超时至少是两倍 tickTime （这个可以在服务端配置）或者大于20倍的tickTime。ZooKeeper 客户端API允许访问协商超时时间。</p><p>如果客户端是 ZooKeeper 服务集群中的分区，它将会开始搜索在 session 创建期间指定的服务器列表。实际上，当客户端和最后一个服务器之间重新建立起连接， session 将会切换到 “connected” 状态（如果重连在超时时间范围内）或者切换到 “expired” 状态（如果重连时间已经超出超时时间）。为断开链接创建一个新的 session 对象这是一个不明智的决定（一个新的 ZooKeeper类 或 zookeeper 对象在 C 绑定中处理 ）。ZooKeeper 客户端库将会帮你自动重新连接。特别是，我们在客户端库中内置了启发式技术，以处理诸如“群效应”等等…… 当你被通知到 session 过期（强制性）的时候，只能创建一个新的 session。</p><p>session 过期通过 ZooKeeper 集群自己管理，不是通过客户端。当 ZooKeeper 客户端建立一个集群 session 它将提供一个详细的 timeout 值。这个值是集群用来确定客户端的 session 何时过期。当集群没有收到来自客户端指定的过期时间（比如：没有心跳）将会直接过期。在 session 过期时集群将会删除任何/所有这个  session 所拥有的临时节点并且立刻通知所有连接的客户端这个事情（任何监控这些节点的客户端）。在这个时候会话过期的时间点于集群是一直保持断开状态，session 过期不会被通知到直到它可以重新连接到集群。客户端将会一直保持断开状态一直到重新 TCP 连接到集群，在这个时间点上如果 session 过期，监控者将收到 session 过期的通过。</p><p>举一个会话过期监控者看到的会话过期状态转换的例子：</p><ol><li><p>‘connected’ : session is established and client is communicating with cluster (client/server communication is operating properly)</p></li><li><p>…. client is partitioned from the cluster</p></li><li><p>‘disconnected’ : client has lost connectivity with the cluster</p></li><li><p>…. time elapses, after ‘timeout’ period the cluster expires the session, nothing is seen by client as it is disconnected from cluster</p></li><li><p>…. time elapses, the client regains network level connectivity with the cluster</p></li><li><p>‘expired’ : eventually the client reconnects to the cluster, it is then notified of the expiration</p></li></ol><p>ZooKeeper 调用会话建立的另外一个参数是默认的 watchers。当客户端任何一个改变状态的事件发生 watchers 都是收到通知。举个例子：如果客户端丢失了跟服务器端的连接客户端将收到通知，或者如果客户端的 session 过期等等…… 这个 watcher 应该考虑到初始化状态为断开状态。（比如：在客户端库把状态变化的事件发送到 watcher 之前）。在新的连接案例中，第一个发送到 watcher 的事件一般是 session 连接事件。</p><p>ZooKeeper 通过客户端发送请求保持 session 不过期。如果让 session 保持一段时间的空闲将使得 session 过期，所以客户端会一直发送一个 ping 请求保证 session 一直存活。这个 ping 请求不仅仅只是让 ZooKeeper 服务知道这个客户端还活着，还可以让客户端验证它连接的 ZooKeeper 服务是否一直活着。这个 ping 请求的时间安排的足够合理保证有充足的时间去检测断开的连接和重新去连接一个新的服务。</p><p>一旦一个到服务器端的连接成功被建立，基本上有两种情况客户端库生成一个 connectionloss（这个返回码会在 C binding 中， java 的话会在异常里面 – 看 API 文档会有详细的介绍）如果有同步或者异步的操作被执行而且有以下情况之一：</p><ol><li><p>应用程序在一个 session 过期或者无效的服务器上执行一项操作。</p></li><li><p>在客户端在等待服务响应的时候，服务断开连接，比如：在等待异步调用的响应的时候。</p></li></ol><p><strong>3.2.0 版本添加 – SessionMovedException.</strong><br><br>这是一个内部的异常，通常不会被客户端看到。</p><p><strong>Added in 3.2.0 – SessionMovedException.</strong> There is an internal exception that is generally not seen by clients called the SessionMovedException. This exception occurs because a request was received on a connection for a session which has been reestablished on a different server. The normal cause of this error is a client that sends a request to a server, but the network packet gets delayed, so the client times out and connects to a new server. When the delayed packet arrives at the first server, the old server detects that the session has moved, and closes the client connection. Clients normally do not see this error since they do not read from those old connections. (Old connections are usually closed.) One situation in which this condition can be seen is when two clients try to reestablish the same connection using a saved session id and password. One of the clients will reestablish the connection and the second client will be disconnected (causing the pair to attempt to re-establish its connection/session indefinitely).</p><h2 id="ZooKeeper-监控"><a href="#ZooKeeper-监控" class="headerlink" title="ZooKeeper 监控"></a>ZooKeeper 监控</h2><h3 id="监控语义"><a href="#监控语义" class="headerlink" title="监控语义"></a>监控语义</h3><h3 id="如何保障-ZooKeeper-订阅者"><a href="#如何保障-ZooKeeper-订阅者" class="headerlink" title="如何保障 ZooKeeper 订阅者"></a>如何保障 ZooKeeper 订阅者</h3><h3 id="关于订阅者的事项"><a href="#关于订阅者的事项" class="headerlink" title="关于订阅者的事项"></a>关于订阅者的事项</h3><h2 id="ZooKeeper-权限控制-ACL"><a href="#ZooKeeper-权限控制-ACL" class="headerlink" title="ZooKeeper 权限控制 (ACL)"></a>ZooKeeper 权限控制 (ACL)</h2><h3 id="ACL权限"><a href="#ACL权限" class="headerlink" title="ACL权限"></a>ACL权限</h3><h4 id="ACL内建方案"><a href="#ACL内建方案" class="headerlink" title="ACL内建方案"></a>ACL内建方案</h4><h4 id="ZooKeeper-C-客户端-API"><a href="#ZooKeeper-C-客户端-API" class="headerlink" title="ZooKeeper C 客户端 API"></a>ZooKeeper C 客户端 API</h4><h2 id="插件式的-ZooKeeper-认证"><a href="#插件式的-ZooKeeper-认证" class="headerlink" title="插件式的 ZooKeeper 认证"></a>插件式的 ZooKeeper 认证</h2><h2 id="一致性保证"><a href="#一致性保证" class="headerlink" title="一致性保证"></a>一致性保证</h2><h2 id="绑定"><a href="#绑定" class="headerlink" title="绑定"></a>绑定</h2><h3 id="Java-绑定"><a href="#Java-绑定" class="headerlink" title="Java 绑定"></a>Java 绑定</h3><h3 id="C-绑定"><a href="#C-绑定" class="headerlink" title="C 绑定"></a>C 绑定</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><h4 id="构建属于你的-C-客户端"><a href="#构建属于你的-C-客户端" class="headerlink" title="构建属于你的 C 客户端"></a>构建属于你的 C 客户端</h4><h2 id="构建模块：ZooKeeper-操作指南"><a href="#构建模块：ZooKeeper-操作指南" class="headerlink" title="构建模块：ZooKeeper 操作指南"></a>构建模块：ZooKeeper 操作指南</h2><h3 id="解决错误"><a href="#解决错误" class="headerlink" title="解决错误"></a>解决错误</h3><h3 id="连接-ZooKeeper"><a href="#连接-ZooKeeper" class="headerlink" title="连接 ZooKeeper"></a>连接 ZooKeeper</h3><h3 id="读取操作"><a href="#读取操作" class="headerlink" title="读取操作"></a>读取操作</h3><h3 id="写入操作"><a href="#写入操作" class="headerlink" title="写入操作"></a>写入操作</h3><h3 id="处理订阅者"><a href="#处理订阅者" class="headerlink" title="处理订阅者"></a>处理订阅者</h3><h3 id="混杂-ZooKeeper-操作"><a href="#混杂-ZooKeeper-操作" class="headerlink" title="混杂 ZooKeeper 操作"></a>混杂 ZooKeeper 操作</h3><h2 id="程序结构（简单案例）"><a href="#程序结构（简单案例）" class="headerlink" title="程序结构（简单案例）"></a>程序结构（简单案例）</h2><h2 id="陷阱：常见问题和故障排除"><a href="#陷阱：常见问题和故障排除" class="headerlink" title="陷阱：常见问题和故障排除"></a>陷阱：常见问题和故障排除</h2>]]></content>
    
    <summary type="html">
    
      使用ZooKeeper开始分布式应用
    
    </summary>
    
    
      <category term="zookeeper" scheme="http://locahost:4000/categories/zookeeper/"/>
    
    
      <category term="zookeeper" scheme="http://locahost:4000/tags/zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>Ebbinghaus Forgetting Curve</title>
    <link href="http://locahost:4000/2020/03/11/2018-01-31-The-Shawshank-Redemption/"/>
    <id>http://locahost:4000/2020/03/11/2018-01-31-The-Shawshank-Redemption/</id>
    <published>2020-03-11T14:46:32.062Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="The-Shawshank-Redemption"><a href="#The-Shawshank-Redemption" class="headerlink" title="The Shawshank Redemption"></a>The Shawshank Redemption</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><span class="line">Mr.Dufresne, describe the confrontation you had with your wife the night she wwas murdered.</span><br><span class="line"></span><br><span class="line">It was very bitter.She said she was glad I knew that she hated all the sneaking around. </span><br><span class="line">And she said that she wanted a divorce in Reno.</span><br><span class="line"></span><br><span class="line">What was your reponse?</span><br><span class="line"></span><br><span class="line">I told her I would not grant one.</span><br><span class="line"></span><br><span class="line">I&#39;ll see you in hell before I see you in Reno. Those were your words, according to your neighbors.</span><br><span class="line"></span><br><span class="line">If they say so. I really don&#39;t remember. I was upset.</span><br><span class="line"></span><br><span class="line">What Happened after you argued with your wife?</span><br><span class="line"></span><br><span class="line">She packed a bag. She packed a bag to go and stay with Mr.Quentin.</span><br><span class="line"></span><br><span class="line">Glenn Quentin, golf pro at the Snowden Hills Country Club whom you had discovered was your wife&#39;s lover. Did you follow</span><br><span class="line">her?</span><br><span class="line"></span><br><span class="line">I went to a few bars first. Later, I drove to his house to confront them. They weren&#39;t home. </span><br><span class="line">So I parked in the turnout and waited.[Some errors here]</span><br><span class="line"></span><br><span class="line">With what intention?</span><br><span class="line"></span><br><span class="line">I&#39;m not sure. I was confused, drunk, I think mostly I wanted to scare them.</span><br><span class="line"></span><br><span class="line">When they arrived, you went up to the house and murdered them.</span><br><span class="line"></span><br><span class="line">No, I was sobering up.</span><br><span class="line"></span><br><span class="line">I got back in the car and I drove home to sleep it off.</span><br><span class="line"></span><br><span class="line">Along the way, I threw my gun into the Royal River. I&#39;ve been very clear on this point.</span><br><span class="line"></span><br><span class="line">Well I get hazy where the cleaning woman shows up the following morning, and finds your wife in bed with her lover riddled</span><br><span class="line">with 38-caliber bullets. Does that strike you as a fantastic coincidence, or is it just me?</span><br><span class="line"></span><br><span class="line">Yes it dose.</span><br><span class="line"></span><br><span class="line">Yet you still maintain you threw your gun into the river before the murders took place. That&#39;s very convenient.</span><br><span class="line"></span><br><span class="line">It&#39;s the truth.</span><br><span class="line"></span><br><span class="line">The police dragged that river for three days, and nary a gun was found, so no comparison could be made between your</span><br><span class="line">gun and the bullets taken from the bloodstained corpses of the victims. And that also is very convenient.</span><br><span class="line">Isn&#39;s it, Mr,Dufresne?</span><br><span class="line"></span><br><span class="line">Since I am innocent of this crime.I find it decidedly inconvenient that the gun was nerver found.</span><br><span class="line"></span><br><span class="line">Ladied and gentlemen, you&#39;ve heard all the evidence.[Lost some words] We have the accused at the scene of the crime.</span><br><span class="line">We have footprints. Bullets on the ground bearing his fingerprints. A broken bourbon bottle, likewise with fingerprints.</span><br><span class="line">And most of all, We have a beautifull young woman and her lover lying dead in each other&#39;s arms. They had sinned.</span><br><span class="line">But was their crime so great as to merit a death sentence? While you think about that,</span><br><span class="line">think about this: A revoiver holds six bullets, not eight. I submit that this was not a hot-blooded crime of passion.</span><br><span class="line">That at least could be understood, if not condoned. NO! This was revenge of a much more brutal, cold-blooded nature, </span><br><span class="line">Consider this: Four bullets per victim Not six shots fired, but eight. That means that he fired the gun empty</span><br><span class="line">and then stopped to reload so that he could shoot each of them again. And extra bullet per lover right in the head.</span><br><span class="line"></span><br><span class="line">You strike me as a particularly icy and remoreseless man, Mr.Dufresne. It chills my blood just to look at you.</span><br><span class="line">By the power vested in me by the state of Maine. I hereby order you to sever two life sentences back-to-back</span><br><span class="line">on for each of your victims. So be it!</span><br><span class="line"></span><br><span class="line">Sit.</span><br><span class="line"></span><br><span class="line">We see you&#39;ve served 20 year of a life sentence?</span><br><span class="line"></span><br><span class="line">Yes, sir.</span><br><span class="line"></span><br><span class="line">Your feel you&#39;ve been rehabilitated?</span><br><span class="line"></span><br><span class="line">Yes sir. Absolutely, sir. I mean, I learned my lessson. I can honestly say that I&#39;m a changed man. </span><br><span class="line">I&#39;m no longer a danger to society. That&#39;s God&#39;s honest truth.</span><br><span class="line"></span><br><span class="line">Hey red, How&#39;d it go?</span><br><span class="line"></span><br><span class="line">Same old shit, different day.</span><br><span class="line"></span><br><span class="line">Yeah, I know how you feel.</span><br><span class="line"></span><br><span class="line">I&#39;m up for rejection next week.</span><br><span class="line"></span><br><span class="line">Yeah, I got rejected last week.</span><br><span class="line"></span><br><span class="line">It happens.</span><br><span class="line"></span><br><span class="line">Hey, Red, bump me a deck.</span><br><span class="line"></span><br><span class="line">Get out of my face, man! You&#39;re into me for five packs already.</span><br><span class="line"></span><br><span class="line">Four!-Five!</span><br><span class="line"></span><br><span class="line">There must be a con like me in every prison in America. I&#39;m the guy who can get it for you. Cigarettes, a bag of reefer,</span><br><span class="line">if that&#39;s your thing... A bottle of brandy to celebrate your kids high school graduation. Damn near anything within reason.</span><br><span class="line">Yes sir. I&#39;m a regular sears an Roebuck.So when Andy Dufresne came to me in 1949 and asked me to smuggle Rita Hayworth</span><br><span class="line">into the prison for him. I told him, &quot;No problem&quot;</span><br><span class="line"></span><br><span class="line">Officers to main gate. Officers to main gate. Secure main gate.</span><br><span class="line"></span><br><span class="line">Andy came to Shawshank Prison in early 1947 for murdering his wife and the fella she was banging.On the outside, </span><br><span class="line">he&#39;d been vice president of a large Portland bank.Good work for a man so young.[Lost some words]</span><br><span class="line"></span><br><span class="line">Hey Red.</span><br><span class="line"></span><br><span class="line">You speak English, butt-steak? You follow this officer.</span><br><span class="line"></span><br><span class="line">I never seen such a sorry-looking heap of maggot shit in all my life.</span><br><span class="line"></span><br><span class="line">Hey, fish! Come over here!</span><br><span class="line"></span><br><span class="line">Taking bets today, Red?</span><br><span class="line"></span><br><span class="line">Smokers or coin? Bettor&#39;s choice.</span><br><span class="line"></span><br><span class="line">Smokes. Put me down for tow.</span><br><span class="line"></span><br><span class="line">All right, who&#39;s your horse?</span><br><span class="line"></span><br><span class="line">That little sack of shit.</span><br><span class="line"></span><br><span class="line">Eighth.He&#39;ll be first.-Bullshit! I&#39;ll take that action.</span><br><span class="line"></span><br><span class="line">You&#39;re out some smokes, son.</span><br><span class="line"></span><br><span class="line">If your&#39;re so smart, you call it.</span><br><span class="line"></span><br><span class="line">I&#39;ll take the chubby fat-ass three.The fifth one. Put me down for a quarter deck.</span><br><span class="line"></span><br><span class="line">Fresh fish today! We&#39;re reeling them in!</span><br><span class="line"></span><br><span class="line">I must admit I didn&#39;t think much of Andy first time I laid eyes on him. Looked like a stiff breeze would blow him over.</span><br><span class="line">That was my first impression of the man.</span><br><span class="line"></span><br><span class="line">What do you say?</span><br><span class="line"></span><br><span class="line">That tall drink of water the silver spoon up his ass.</span><br><span class="line"></span><br><span class="line">That guy?Never happen.</span><br><span class="line"></span><br><span class="line">Ten cigarettes-That&#39;s a rich bet. Who&#39;s going to prove me wrong? Heywood?Jigger?Skeets?Floyd!Four brave souls.</span><br><span class="line"></span><br><span class="line">Return to your cellblocks for evening count.All prisoners, return to your cellblocks.</span><br><span class="line"></span><br><span class="line">Turn o the right! Eyes front.</span><br><span class="line"></span><br><span class="line">This is Mr.Hadley. He&#39;s captain of the guards.I&#39;m Mr.Norton, the warden. You are conviceted felons.That&#39;s why they&#39;ve sent you to me.</span><br><span class="line">Rule number one: No blasphemy, I&#39;ll not have the lord&#39;s name taken in vain in my prison. The other rules, you&#39;ll figure out as you go</span><br><span class="line">along. Any questions?</span><br><span class="line"></span><br><span class="line">When do we eat?</span><br><span class="line"></span><br><span class="line">You eat when we say you eat. You shit when we say you shit, and piss when we say you piss. You got that, you maggot-dick motherfucker?</span><br><span class="line">On your feet.</span><br><span class="line"></span><br><span class="line">I believe in two things: Discipline and the Bible. Here, you&#39;ll receive both. Put your trust in the Lord. Your ass belongs to me.</span><br><span class="line">Welcome to Shawshank.</span><br><span class="line"></span><br><span class="line">Unhook them.</span><br><span class="line">[time is 14:19]</span><br><span class="line"></span><br><span class="line">Turn around.</span><br><span class="line"></span><br><span class="line">That&#39;s enough. Move to the end of the cage. Turn around. Delouse him. Turn around. Move out of the cage.</span><br><span class="line">Pick up your clohes and Bible. Next man up. To the right. Right. Right. Left. The first night&#39;s the toughest. No doubt about it.</span><br><span class="line">They march you in naked as the day you were born. Skin burning and half-blind from that delouing shit. And when they put you in </span><br><span class="line">that cell and those bars slam home. That&#39;s when you know it&#39;s for real. Old life blown away in the blink of an eye. Nothing left</span><br><span class="line">but all the time in the world to think about it. Most new fish come close to madness the first night. Somebody always breaks down crying. Hapens every time. The only question is who&#39;s it going to be? It&#39;s as good a thing to bet on as any, I guess. I had my</span><br><span class="line">money on Andy Dufresne.</span><br><span class="line"></span><br><span class="line">Lights out.</span><br><span class="line"></span><br><span class="line">I remember my first night.Seems like a long time ago.</span><br><span class="line"></span><br><span class="line">Hey fish, fish ,fish, what are you, scared of the dark? Bet you wish your daddy never dicked your mama? Piggy! Pork! I want me</span><br><span class="line">a port chop.</span><br><span class="line"></span><br><span class="line">Poke your ass out, give me a first look! Keep it down.</span><br><span class="line"></span><br><span class="line">The boys always go fishing with first-timers. And the don&#39;t quit till they reel someone in.</span><br><span class="line"></span><br><span class="line">Hey, Fat Ass. Take to me boy. I know your&#39;re there. I can hear you breathing. Don&#39;t you listen to these nitwits, you hear me?</span><br><span class="line">This place ain&#39;t so bad. Tell you what, I&#39;ll introduce you around, make you feel right at home.</span><br><span class="line">I konw a couple of big od bull queers that&#39;d just love to make your acquaintance. Especially that big,</span><br><span class="line">white, mushy butt of yours.</span><br><span class="line"></span><br><span class="line">Glod!</span><br><span class="line"></span><br><span class="line">I don&#39;t belong here!</span><br><span class="line"></span><br><span class="line">We have a winner!- I want to go home!</span><br><span class="line"></span><br><span class="line">And it&#39;s Fat Ass by a nose!</span><br><span class="line"></span><br><span class="line">Fresh fish! Fresh fish! Fresh fish!</span><br><span class="line"></span><br><span class="line">I don&#39;t belong here. I want to go home. I want my mother!</span><br><span class="line"></span><br><span class="line">I had your mother! She wasn&#39;t that great!</span><br><span class="line">[time is 18:01]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      The Shawshank Redemption
    
    </summary>
    
    
      <category term="English" scheme="http://locahost:4000/categories/English/"/>
    
    
      <category term="English" scheme="http://locahost:4000/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>Ebbinghaus Forgetting Curve</title>
    <link href="http://locahost:4000/2020/03/11/2018-01-02-How-to-remember-sthing/"/>
    <id>http://locahost:4000/2020/03/11/2018-01-02-How-to-remember-sthing/</id>
    <published>2020-03-11T14:46:32.060Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="如何运用艾宾浩斯遗忘曲线背单词"><a href="#如何运用艾宾浩斯遗忘曲线背单词" class="headerlink" title="如何运用艾宾浩斯遗忘曲线背单词"></a>如何运用艾宾浩斯遗忘曲线背单词</h2><h3 id="复习点的确定"><a href="#复习点的确定" class="headerlink" title="复习点的确定"></a>复习点的确定</h3><ul><li>1． 第一个记忆周期：5分钟</li><li>2． 第二个记忆周期：30分钟</li><li>3． 第三个记忆周期：12小时</li><li>4． 第四个记忆周期：1天</li><li>5． 第五个记忆周期：2天</li><li>6． 第六个记忆周期：4天</li><li>7． 第七个记忆周期：7天</li><li>8． 第八个记忆周期：15天</li></ul><h3 id="背诵方法"><a href="#背诵方法" class="headerlink" title="背诵方法"></a>背诵方法</h3><ul><li>1． 初记单词时需要记忆的内容：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a）单词外观</span><br><span class="line">b） 单词的中文释义</span><br><span class="line">c） 单词的记忆法</span><br></pre></td></tr></table></figure><ul><li>2． 每个list的具体背诵过程（每个list按12页，每页10个单词计）：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a) 背完一页（大约5分钟），立即返回该页第一个单词开始复习（大约几十秒）</span><br><span class="line">b) 按上面方法背完1～6页（大约在30分钟），回到第1页开始复习（两三分钟）</span><br><span class="line">c) 按上面同样方法背完7～12页，一个list结束</span><br><span class="line">d) 相当于每个list被分为12个小的单元，每个小的单元自成一个复习系统；</span><br><span class="line">   每6个小单元组成一个大单元，2个大单元各自成为一个复习系统。背一个list总共需要一小时左右的时间。</span><br></pre></td></tr></table></figure><h3 id="复习过程"><a href="#复习过程" class="headerlink" title="复习过程"></a>复习过程</h3><ul><li>a) 复习方法：遮住中文释义，尽力回忆该单词的意思，几遍下来都记不住的单词可以做记号重点记忆。</li><li>b) 复习一个list所需的时间为20分钟以内</li><li>c) 当天的list最好在中午之前背完，大约12小时之后（最好睡觉前）复习当天所背的list</li><li>d) 在其后的1，2，4，7，15天后分别复习当日所背的list</li><li>e）复习的原则<br>时间间隔：30秒 1分钟 5分钟 30分钟 1小时 8小时 1天 2天 6天 31天<br>重学节省诵读时间百分数：58.2 44.2 35.8 33.7 27.8 25.4 21.1</li></ul><h3 id="复习点的确定-1"><a href="#复习点的确定-1" class="headerlink" title="复习点的确定"></a>复习点的确定</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">人的记忆周期分为短期记忆和长期记忆两种。</span><br><span class="line">第一个记忆周期是 5分钟</span><br><span class="line">第二个记忆周期是30分钟</span><br><span class="line">第三个记忆周期是12小时</span><br><span class="line">这三个记忆周期属于短期记忆的范畴。</span><br><span class="line">下面是几个比较重要的周期。</span><br><span class="line">第四个记忆周期是 1天</span><br><span class="line">第五个记忆周期是 2天</span><br><span class="line">第六个记忆周期是 4天</span><br><span class="line">第七个记忆周期是 7天</span><br><span class="line">第八个记忆周期是15天</span><br><span class="line">以上的8个周期应用于背词法，作为一个大的背词的循环的8个复习点，可以最大程度的提高背单词的效率</span><br><span class="line">背单词就找个小本子窄窄的那种，每页中间对折左边英文右边中文，每天背100个，分5组每组20个，每一个看过留下读音和拼写的印象，</span><br><span class="line">基本上5～8分钟一组，全部5组大概看30分钟，最好不要超过40分钟，然后再从第一组再看，每天一百个新的，</span><br><span class="line">看过的按记忆周期在第2、4、7、15天重新复习，基本每天进行的300～400个单词记忆。</span><br></pre></td></tr></table></figure><h3 id="英语背诵任务"><a href="#英语背诵任务" class="headerlink" title="英语背诵任务"></a>英语背诵任务</h3><ul><li>a) 每天连续背诵1个list，每个list 120个单词，并完成复习任务；</li><li>b) 复习永远比记新词重要，要反复高频率的复习，复习，再复习；</li><li>c) 一天都不能间断，坚持挺过这15天，之后每天都要花大约1小时复习； </li></ul><h3 id="时间表"><a href="#时间表" class="headerlink" title="时间表"></a>时间表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">新学背诵</span><br><span class="line">第1天：list1*list1</span><br><span class="line">第2天：list2*list1*list2</span><br><span class="line">第3天：list3*list2*list3</span><br><span class="line">第4天：list4*list3*list1*list4</span><br><span class="line">第5天：list5*list4*list2*list5</span><br><span class="line">第6天：list6*list5*list3*list6</span><br><span class="line">第7天：    list7*list6*list4*list1*list7</span><br><span class="line">第8天：list8*list7*list5*list2*list8</span><br><span class="line">第9天：    list9*list8*list6*list3*list9</span><br><span class="line">第10天：list10*list9*list7*list4*list10</span><br><span class="line">第11天：list11*list10*list8*list5*list11</span><br><span class="line">第12天：list12*list11*list9*list6*list12</span><br><span class="line">第13天：list13*list12*list10*list7*list13</span><br><span class="line">第14天*：list14*list13*list11*list8*list14</span><br><span class="line">第15天：list15*list14*list12*list9*list1*list15</span><br><span class="line">第16天：list16*list15*list13*list10*list2*list16</span><br><span class="line">第17天：list17*list16*list14*list11*list3*list17</span><br><span class="line">第18天：list18*list17*list15*list12*list4*list18</span><br><span class="line">第19天：list19*list18*list16*list13*list5*list19</span><br><span class="line">第20天：list20*list19*list17*list14*list6*list20</span><br><span class="line">第21天：list21*list20*list18*list15*list7*list21</span><br><span class="line">第22天：list22*list21*list19*list16*list8*list22</span><br><span class="line">第23天：list23*list22*list20*list17*list9*list23</span><br><span class="line">第24天：list24*list23*list21*list18*list10*list24</span><br><span class="line">第25天：list25*list24*list22*list19*list11*list25</span><br><span class="line">第26天：list26*list25*list23*list20*list12*list26</span><br><span class="line">第27天：list27*list26*list24*list21*list13*list27</span><br><span class="line">第28天：list28*list27*list25*list22*list14*list28</span><br><span class="line">第29天：list29*list28*list26*list23*list15*list29</span><br><span class="line">第30天：list30*list29*list27*list24*list16*list30</span><br><span class="line">第31天：list31*list30*list28*list25*list17*list31</span><br><span class="line">第32天：list32*list31*list29*list26*list18*list32</span><br><span class="line">第33天：list33*list32*list30*list27*list19*list33</span><br><span class="line">第34天：list34*list33*list31*list28*list20*list34</span><br><span class="line">第35天：list35*list34*list32*list29*list21*list35</span><br><span class="line">第36天：list36*list35*list33*list30*list22*list36</span><br><span class="line">第37天：list37*list36*list34*list31*list23*list37</span><br><span class="line">第38天：list38*list37*list35*list32*list24*list38</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>a) 每天连续背诵2个list，并完成复习任务；</li><li>b) 复习永远比记新词重要，要反复高频率的复习，复习，再复习；</li><li>c) 一天都不能间断，坚持挺过这15天，之后每天都要花大约1小时复习；</li></ul><h3 id="时间表（左边序号表示第几天，-号之后表示复习内容）"><a href="#时间表（左边序号表示第几天，-号之后表示复习内容）" class="headerlink" title="时间表（左边序号表示第几天，*号之后表示复习内容）"></a>时间表（左边序号表示第几天，*号之后表示复习内容）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">　　第1天 list1→2 *list1→2</span><br><span class="line">　  第2天 *list1→2 list3→4 *list3→4</span><br><span class="line">　　第3天 *list3→4 list5→6 *list5→6 </span><br><span class="line">@ 第4天 *list1→2 *list5→6 list7→8 *list7→8</span><br><span class="line">　　第5天 *list3→4 *list7→8 list9→10 *list9→10</span><br><span class="line">　　第6天 *list5→6 *list9→10 list11→12 *list11→12</span><br><span class="line">　　第7天 *list1→2 *list7→8 *list11→12 list13→14 *list13→14</span><br><span class="line">　　第8天 *list3→4 *list9→10 *list13→14 list15→16 *list15→16</span><br><span class="line">　　第9天 *list5→6 *list11→12 *list15→16 list17→18 *list17→18</span><br><span class="line">　　第10天 *list7→8 *list13→14 *list17→18 list19→20 *list19→20</span><br><span class="line">　　第11天 *list9→10 *list15→16 *list19→20 list21→22 *list21→22</span><br><span class="line">　　第12天 *list11→12 *list17→18 *list21→22 list23→24 *list23→24</span><br><span class="line">　　第13天 *list13→14 *list19→20 *list23→24</span><br><span class="line">　　第14天 *list15→16 *list21→22</span><br><span class="line">　　第15天 *list1→2 *list17→18 *list23→24</span><br><span class="line">　　第16天 *list3→4 *list19→20</span><br><span class="line">　　第17天 *list5→6 *list21→22</span><br><span class="line">　　第18天 *list7→8 *list23→24</span><br><span class="line">　　第19天 *list9→10</span><br><span class="line">　　第24天 *list19→20</span><br><span class="line">　　第25天 *list21→22</span><br><span class="line">　　第26天 *list23→24</span><br><span class="line">　　第27天</span><br><span class="line">　　第28天</span><br><span class="line">　　第29天</span><br><span class="line">　　第30天 *list1→2</span><br><span class="line">　　第31天 *list3→4</span><br><span class="line">　　第32天 *list5→6</span><br><span class="line">　　第33天 *list7→8</span><br><span class="line">　　第34天 *list9→10</span><br><span class="line">　　第35天 *list11→12</span><br><span class="line">　　第36天 *list13→14</span><br><span class="line">　　第37天 *list15→16</span><br><span class="line">　　第38天 *list17→18</span><br><span class="line">　　第39天 *list19→20</span><br><span class="line">　　第40天 *list21→22</span><br><span class="line">　　第41天 *list23→24</span><br><span class="line">　　起始(单元或页码)编号为1</span><br><span class="line">　　截止(单元或页码)编号为24</span><br><span class="line">　　总共需要复习的编号数为24</span><br><span class="line">　　每天需要复习的编号数为2</span><br><span class="line">　　你需要41天时间完成任务[4]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      利用艾宾浩斯遗忘曲线背单词
    
    </summary>
    
    
      <category term="English" scheme="http://locahost:4000/categories/English/"/>
    
    
      <category term="English" scheme="http://locahost:4000/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>Enterprise Architect key</title>
    <link href="http://locahost:4000/2020/03/11/2016-05-06-Enterprise-Architect-key/"/>
    <id>http://locahost:4000/2020/03/11/2016-05-06-Enterprise-Architect-key/</id>
    <published>2020-03-11T14:46:32.057Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Enterprise Architect是一款非常好用的建模软件</p><p>Enterprise Architect11企业版注册码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Registration Key</span><br><span class="line">ADF8D83B-0683-4d1f-BB60-FF66D-WFM1-CHPZ-PII0-HN75-BC</span><br><span class="line">Authorization Key</span><br><span class="line">F08113BA-8B4F-41df-8F01-46DF2C35D249</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Enterprise Architect是一款非常好用的建模软件
    
    </summary>
    
    
      <category term="Tools" scheme="http://locahost:4000/categories/Tools/"/>
    
    
      <category term="uml" scheme="http://locahost:4000/tags/uml/"/>
    
  </entry>
  
  <entry>
    <title>spring boot使用</title>
    <link href="http://locahost:4000/2020/03/11/2016-04-27-spring-boot/"/>
    <id>http://locahost:4000/2020/03/11/2016-04-27-spring-boot/</id>
    <published>2020-03-11T14:46:32.054Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>spring团队为了方便使用spring，开发出了springBoot将spring的配置都简单化了。SpringBoot也是在微服务架构中使用比较频繁的一个框架。</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>SpringBoot把创建一个独立的网站变得更加的简单。启动一个SpringBoot的应用你只需要简单的run一下就可以。基本上SpringBoot的应用只需要很少的配置就可以。</p><p>你可以使用SpringBoot去创建一个java应用，可以通过命令<code>java -jar</code>或者启动’war’包，而且他们提供了’spring scripts’可以更方便的启动应用。</p><p><strong>SpringBoot 目标</strong></p><ul><li>为所有Spring开发一种完全更快普及入门体验。</li><li>自以为是开箱即用，但得到的出路尽快开始要求从默认发散。</li><li>提供一系列的非功能性特征是常见的大课的项目（例如嵌入式服务器，安全，指标，健康检查，外部配置）。</li><li>绝对没有生成代码,没有要求配置XML。</li></ul><p><strong>系统要求</strong></p><ul><li>默认使用SpringBoot 1.3.5.release</li><li>Java 7</li><li>Spring Frameework 4.2.6RELEASE 以上</li></ul><p>当然SpringBoot内嵌了许多应用服务器</p><table><thead><tr><th>Name</th><th>Servlet version</th><th>Java Version</th></tr></thead><tbody><tr><td>Tomcat8</td><td>3.1</td><td>Java 7+</td></tr><tr><td>Tomcat7</td><td>3.0</td><td>Java 6+</td></tr><tr><td>jetty9</td><td>3.1</td><td>Java 7+</td></tr><tr><td>jetty8</td><td>3.0</td><td>Java 6+</td></tr><tr><td>Undertow1.1</td><td>3.0</td><td>Java 6+</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      spring团队为了方便使用spring，开发出了springBoot将spring的配置都简单化了
    
    </summary>
    
    
      <category term="program" scheme="http://locahost:4000/categories/program/"/>
    
    
      <category term="java" scheme="http://locahost:4000/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>心甘情愿</title>
    <link href="http://locahost:4000/2020/03/11/2016-04-01-love/"/>
    <id>http://locahost:4000/2020/03/11/2016-04-01-love/</id>
    <published>2020-03-11T14:46:32.051Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;《心甘情愿》<br><br>世界上最幸福的事，莫过于想起一个人的时候！<br><br>脸上露出的笑意，心中流动的暖意。<br><br>不由自主的想起，是心中柔软的秘密；<br><br>情不自禁的挂念，是生命不可或缺的一部分。<br><br>相见或者不见，心一直在陪伴；<br><br>知冷知热的情，让心灵有了靠岸；<br><br>含笑带泪的暖，给生命以春天。<br><br>思念不为容颜，只为感觉；<br><br>眷恋不为拥有，只为懂得。<br><br>相识于路上，不如相知于心上！<br><br>人在难受的时候，特别需要的是最爱的人来陪。<br><br>哪怕是一杯平淡的白水，也会暖心暖肺；<br><br>即使是一句简单的安慰，也能深入心扉。<br><br>卸下了伪装，不在狼狈；<br><br>除去了疲惫，不在憔悴。<br><br>也许那个人并不完美，但在你眼里就是最美；<br><br>也许那颗心会偶尔忽略，但却是你最想要的体会。<br><br>人海再多，这种感觉别人不能给就；<br><br>缘分无数，这份感情无人能媲美。<br><br>一个人的心最不会说谎，心在哪里，爱就在哪里！<br></p></blockquote>]]></content>
    
    <summary type="html">
    
      世界上最幸福的事，莫过于想起一个人的时候！
    
    </summary>
    
    
      <category term="LifeFeeling" scheme="http://locahost:4000/categories/LifeFeeling/"/>
    
    
      <category term="爱" scheme="http://locahost:4000/tags/%E7%88%B1/"/>
    
  </entry>
  
  <entry>
    <title>FFmpeg使用</title>
    <link href="http://locahost:4000/2020/03/11/2016-03-30-introduce-ffmpeg/"/>
    <id>http://locahost:4000/2020/03/11/2016-03-30-introduce-ffmpeg/</id>
    <published>2020-03-11T14:46:32.049Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍FFmpeg"><a href="#介绍FFmpeg" class="headerlink" title="介绍FFmpeg"></a>介绍<a href="https://www.ffmpeg.org/about.html" target="_blank" rel="noopener">FFmpeg</a></h1><p><a href="https://www.ffmpeg.org/about.html" target="_blank" rel="noopener">FFmpeg</a>的是全球领先的多媒体框架，能够解码，编码，转码，复用，解复用，流，过滤器和播放。它支持各种格式的视频。</p>]]></content>
    
    <summary type="html">
    
      FFmpeg introduction
    
    </summary>
    
    
      <category term="tools" scheme="http://locahost:4000/categories/tools/"/>
    
    
      <category term="ffmpeg" scheme="http://locahost:4000/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>排序算法总计(未完结)</title>
    <link href="http://locahost:4000/2020/03/11/2016-02-27-data-structure-for-sort/"/>
    <id>http://locahost:4000/2020/03/11/2016-02-27-data-structure-for-sort/</id>
    <published>2020-03-11T14:46:32.046Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>北京的生活已经远去，新的生活即将开始，趁现在有空将学校学过的计算机基础知识复习一下，先看一下排序算法</p><h1 id="排序篇"><a href="#排序篇" class="headerlink" title="排序篇"></a>排序篇</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>排序是计算机程序设计中的一种重要操作。不论数值计算还是非数值计算问题都要广泛地用到排序运算，特别是在数据处理方面引用的更加广泛。它的功能是将一个数据元素的任意序列，重新排列成一个按指定官架子有序的序列。排序的目的是便于查找，提高计算机的工作效率。因此，学习和研究各种排序方法是计算机工作中的重要课题之一。</p><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><p>基本思想：每次将一个待排序的记录，按其关键字的大小插入到前面已经排好序的有序序列中的适当位置上，直到全部记录插入完成为止。按照插入的方法不通可以分为好几种，其中：直接插入排序，折半插入排序，2-路插入排序和希尔排序。</p><h3 id="直接插入排序"><a href="#直接插入排序" class="headerlink" title="直接插入排序"></a>直接插入排序</h3><p><strong>基本思想</strong></p><p>将序列中的元素依次的插入到有序序列中，导致最终结果有序序列不断变长，直到取完最后一个无序序列中的元素</p><h3 id="折半插入排序"><a href="#折半插入排序" class="headerlink" title="折半插入排序"></a>折半插入排序</h3><p>利用折半查找来实现插入位置的定位，因为折半查找的效率比较高，因此可以减少排序过程中的比较次数。适用于待排序的记录数量较大的情况。</p><h3 id="2-路插入排序"><a href="#2-路插入排序" class="headerlink" title="2-路插入排序"></a>2-路插入排序</h3><h3 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h3><p>希尔排序方法又称为缩小增量排序，它也是一种插入排序方法，是对直接插入排序方法的改进。</p><p><strong>基本思想</strong></p><p>将整个待排序的记录序列划分成若干个子序列，然后分别对每个子序列进行直接插入排序，这样可以减少参与直接插入排序的数据量，如此反复，当经过几次分组排序后，记录的排序依据基本有序，这个时候在对所有的记录进行一次直接插入排序。</p><p>例如，假设有这样一组数[ 13 14 94 33 82 25 59 94 65 23 45 27 73 25 39 10 ]，如果我们以步长为5开始进行排序，我们可以通过将这列表放在有5列的表中来更好地描述算法，这样他们就应该看起来是这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">13 14 94 33 82</span><br><span class="line"></span><br><span class="line">25 59 94 65 23</span><br><span class="line"></span><br><span class="line">45 27 73 25 39</span><br><span class="line"></span><br><span class="line">10</span><br></pre></td></tr></table></figure><p>然后我们对每列进行排序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">10 14 73 25 23</span><br><span class="line"></span><br><span class="line">13 27 94 33 39</span><br><span class="line"></span><br><span class="line">25 59 94 65 82</span><br><span class="line"></span><br><span class="line">45</span><br></pre></td></tr></table></figure><p>將上述四行數字，依序接在一起时我们得到：[ 10 14 73 25 23 13 27 94 33 39 25 59 94 65 82 45 ].这时10已经移至正确位置了，然后再以3为步长进行排序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">10 14 73</span><br><span class="line"></span><br><span class="line">25 23 13</span><br><span class="line"></span><br><span class="line">27 94 33</span><br><span class="line"></span><br><span class="line">39 25 59</span><br><span class="line"></span><br><span class="line">94 65 82</span><br><span class="line"></span><br><span class="line">45</span><br></pre></td></tr></table></figure><p>排序之后变为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">10 14 13</span><br><span class="line"></span><br><span class="line">25 23 33</span><br><span class="line"></span><br><span class="line">27 25 59</span><br><span class="line"></span><br><span class="line">39 65 73</span><br><span class="line"></span><br><span class="line">45 94 82</span><br><span class="line"></span><br><span class="line">94</span><br></pre></td></tr></table></figure><p>最后以1步长进行排序（此时就是简单的插入排序了）。</p><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><p><strong>选择排序思想</strong></p><p>每一趟从待排序的序列中选出关键字最小的记录，按顺序放在已排好序的子序列的最后，直到全部记录排序完毕。常用的选择排序方法有简单选择排序和堆排序。</p><h3 id="简单选择排序"><a href="#简单选择排序" class="headerlink" title="简单选择排序"></a>简单选择排序</h3><h3 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h3><h2 id="交换排序"><a href="#交换排序" class="headerlink" title="交换排序"></a>交换排序</h2><p>交换排序的基本思想是：两两比较待排序记录的关键字，若发现两个记录的次序为逆序时，交换其存储位置，直到没有逆序的记录位置。下面介绍两个比较常用的交换排序：冒泡排序和快速排序。</p><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><p><strong>冒泡排序的基本思想：</strong></p><p>对所有相邻记录的关键字值进行比较，如果是逆序(r[i]&gt;[i+1]),则交换其位置，进过多趟排序，最终使整个序列有序。</p><ul><li>就是不断的将一个元素向后移动，直到移动到这个值最后所因在的位置。这个过程有点像水中冒泡一样不断的向上扩大直到水泡变得它所能承受的最大体积然后爆裂。</li></ul><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><p><strong>排序排序基本思想：</strong></p><p>快排是对冒泡排序的一种改进，它通过一趟排序将待排序记录划分成两部分，是的其中一部分记录的关键字比另一部分记录的关键字小；然后再分别对这两部分记录进行这种划分，直到每个部分为空或只包含一个记录时，整个快速排序结束。</p><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><p>归并排序是将两个或者两个以上的有序序列合成一个新的有序序列。</p><h2 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h2><h3 id="多关键字排序"><a href="#多关键字排序" class="headerlink" title="多关键字排序"></a>多关键字排序</h3><h3 id="链式基数排序"><a href="#链式基数排序" class="headerlink" title="链式基数排序"></a>链式基数排序</h3><h2 id="排序的几种方法"><a href="#排序的几种方法" class="headerlink" title="排序的几种方法"></a>排序的几种方法</h2>]]></content>
    
    <summary type="html">
    
      北京的生活已经远去，新的生活即将开始，趁现在有空将学校学过的计算机基础知识复习一下，先看一下排序算法
    
    </summary>
    
    
      <category term="notes" scheme="http://locahost:4000/categories/notes/"/>
    
    
      <category term="DS" scheme="http://locahost:4000/tags/DS/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB笔记2-使用MongoDB</title>
    <link href="http://locahost:4000/2020/03/11/2016-02-20-use-mongodb-2/"/>
    <id>http://locahost:4000/2020/03/11/2016-02-20-use-mongodb-2/</id>
    <published>2020-03-11T14:46:32.040Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用MongoDB"><a href="#使用MongoDB" class="headerlink" title="使用MongoDB"></a>使用<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a></h1><p><a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>存储和操作的数据是以类似<a href="https://en.wikipedia.org/wiki/JSON" target="_blank" rel="noopener">JSON</a>的格式数据，使用<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>的命令有点类似在页面<code>console</code>中写<code>js</code>的感觉。</p><h2 id="创建一个数据库"><a href="#创建一个数据库" class="headerlink" title="创建一个数据库"></a>创建一个数据库</h2><p><strong>使用如下命令进行数据库创建</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; use mongotestDB</span><br><span class="line">switched to db mongotestDB</span><br></pre></td></tr></table></figure><ul><li>use：切换到某个数据库，如果这个数据库不存在则会创建一个数据库对象。这个时候使用<code>show dbs</code>是查询不到这个数据库的，只有在<code>insert</code>一条数据后才能查到。从这里可以看出<code>show dbs</code>命令是从磁盘上去查询的</li></ul><h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><p>使用以下命令及可插入一条数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.mycollection.insert(&#123;x:10&#125;)</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><ul><li>db 代表你当前使用的数据库</li><li>mycollection 代表你的数据要插入到哪个集合，如果这个集合不存在或者说没有使用过则会创建一个新的集合并将数据插入到这个集合中。</li></ul><p>如果你的集合名需要空格或者一些符号，但是使用的<code>Mongo shell</code>又不支持的话可以使用以下方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; db[&quot;collection-test&quot;].insert(&#123;x:20&#125;)</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br><span class="line">&gt; db.getCollection(&quot;collection-test&quot;).insert(&#123;x:20&#125;)</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><p>当然如果觉得数据写的太长也可以这么插入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; var doc &#x3D; &#123;xx:1,ary:[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]&#125;</span><br><span class="line">&gt; db.mycollection.insert(doc)</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><p><strong>批量插入</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; var doc &#x3D; [&#123;x:1&#125;,&#123;x:2&#125;,&#123;x:3&#125;,&#123;x:4&#125;]</span><br><span class="line">&gt; db.mycollection.insert(doc)</span><br><span class="line">WriteResult(&#123; </span><br><span class="line">&quot;writeErrors&quot; : [],</span><br><span class="line">&quot;writeConernErroes&quot;:[],</span><br><span class="line">&quot;nInserted&quot; : 4,</span><br><span class="line">&quot;nUpserted&quot; : 0,</span><br><span class="line">&quot;nMatched&quot;:0,</span><br><span class="line">&quot;nModified&quot;:0,</span><br><span class="line">&quot;nRemoved&quot;:0,</span><br><span class="line">&quot;upserted&quot;:[]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>如果需要批量的插入，首先声明一个数组，这个数组里存放需要插入的数据。如上面所示插入4条数据</p><h2 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h2><p><a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>使用<code>find</code>函数（我不知道应该说命令还是函数-_-|||）去查询，还有一个是<code>findOne</code>函数。</p><p><strong>查询<code>mycollection</code>中所有的数据</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.mycollection.find(&#123;&#125;)</span><br><span class="line">&#123;&quot;_id&quot;:Object(56c870d24d49c30492efa870), &quot;x&quot;:1&#125;</span><br></pre></td></tr></table></figure><p><strong>条件查询</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.mycollection.find(&#123;x:&#123;$gt:0&#125;&#125;)</span><br><span class="line">&gt; db.mycollection.find(&#123;x:&#123;$lt:0&#125;&#125;)</span><br></pre></td></tr></table></figure><ul><li>大于<code>(greater than)</code>使用<code>$gt</code>，上面命令第一条命令表示：查询<code>x</code>大于0的所有数据</li><li>小于<code>(less than)</code>使用<code>$lt</code>，第二条表示：查询<code>x</code>小于0的所有数据</li></ul><p><strong>查询显示指定字段</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.mycollection.find(&#123;x:&#123;$gt:0&#125;&#125;, &#123;x:1&#125;)</span><br></pre></td></tr></table></figure><ul><li>查询<code>x</code>大于0的所有数据，只列出<code>x</code>字段</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.mycollection.find(&#123;x:&#123;$gt:0&#125;&#125;, &#123;x:0&#125;)</span><br></pre></td></tr></table></figure><ul><li>查询<code>x</code>大于0的所有数据，不显示x字段</li></ul><p><strong>某个条件内查询</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.testCollection.find(&#123;x:&#123;$in:[10,11]&#125;&#125;)</span><br></pre></td></tr></table></figure><ul><li>查询testCollection中<code>x</code>在属于10或11中的所有数据<br><strong>条件或查询</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.testCollection.find(&#123;$or:[&#123;x:&#123;$gt:12&#125;&#125;,&#123;t:3&#125;]&#125;)</span><br></pre></td></tr></table></figure><ul><li>查询testCollection中<code>x</code>大于12或者<code>t</code>小于3的所有数据</li></ul><p><strong>查询嵌入文档</strong></p><p>先插入一个文档doc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.testCollection.insert(&#123;doc:&#123;y:1,t:2,c:3&#125;&#125;)</span><br><span class="line">&gt; db.testCollection.insert(&#123;doc:&#123;y:2,t:3,c:4&#125;&#125;)</span><br><span class="line">&gt; db.testCollection.insert(&#123;doc:&#123;y:3,t:4,c:5&#125;&#125;)</span><br><span class="line">&gt; db.testCollection.insert(&#123;doc:&#123;y:4,t:5,c:6&#125;&#125;)</span><br><span class="line">&gt; db.testCollection.insert(&#123;doc:&#123;y:5,t:6,c:7&#125;&#125;)</span><br><span class="line">&gt; db.testCollection.insert(&#123;doc:&#123;y:6,t:7,c:8&#125;&#125;)</span><br></pre></td></tr></table></figure><p>查询<code>doc={y:1,t:2,c:3}</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.testCollection.find(&#123;doc:&#123;y:6,t:7,c:8&#125;&#125;)</span><br></pre></td></tr></table></figure><p>查询所有<code>doc</code>中<code>y = 6</code>的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.testCollection.find(&#123;&quot;doc.y&quot;:6&#125;&#125;)</span><br></pre></td></tr></table></figure><p>查询所有<code>doc</code>中<code>y &gt; 3</code>的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.testCollection.find(&#123;&quot;doc.y&quot;:&#123;$gt:3&#125;&#125;)</span><br></pre></td></tr></table></figure><p><strong>查询数组</strong><br></p><p>先插入一些数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.testCollection.insert(&#123;ary:[1,2,3,4,5,6,7]&#125;)</span><br><span class="line">&gt; db.testCollection.insert(&#123;ary:[3,5,6,7,5,6,3]&#125;)</span><br><span class="line">&gt; db.testCollection.insert(&#123;ary:[5,5,1,7,5,4,3]&#125;)</span><br><span class="line">&gt; db.testCollection.insert(&#123;ary:[4,5,6,6,7,6,3]&#125;)</span><br><span class="line">&gt; db.testCollection.insert(&#123;ary:[2,5,4,7,5,7,3]&#125;)</span><br></pre></td></tr></table></figure><p>查询<code>ary=[1,2,3,4,5,6,7]</code>的所有数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.testCollection.find(&#123;ary:[1,2,3,4,5,6,7]&#125;)</span><br></pre></td></tr></table></figure><p>查询数据第<code>0</code>个数等于<code>2</code>的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.testCollection.find(&#123;&quot;ary.0&quot;:2&#125;)</span><br></pre></td></tr></table></figure><p>查询数组中某个元素满足条件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.testCollection.find(&#123;ary:&#123;$elemMatch:&#123;$gt:2, $lt:5&#125;&#125;&#125;)</span><br></pre></td></tr></table></figure><ul><li>查询条件<code>ary</code>中存在元素满足大于<code>2</code>小于<code>5</code>的所有数组</li></ul><p><a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>支持查询优化，<a href="https://docs.mongodb.org/manual/core/query-optimization/" target="_blank" rel="noopener">详情点击&gt;&gt;&gt;</a></p><h2 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h2><p><a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>提供<code>update</code>函数，<code>$set</code>操作符来执行更新操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.testCollection.update(&#123;x:1&#125;,&#123;$set:&#123;x:100&#125;, $currentDate: &#123; lastModified: true &#125;&#125;)</span><br></pre></td></tr></table></figure><ul><li>将满足<code>x</code>为1的数据<code>x</code>值改为100，并通过<code>$currentDate</code>添加时间字段lastModified</li></ul><p>默认情况下使用<code>update</code>函数只更新一条数据，如果需要更新多条数据使用操作字段<code>multi</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.testCollection.update(&#123;x:1&#125;,&#123;$set:&#123;x:100&#125;, $currentDate: &#123; lastModified: true &#125;&#125;, &#123; multi: true &#125;)</span><br></pre></td></tr></table></figure><p>直接替换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.testCollection.update(&#123;x:1&#125;,&#123;x:111, y:100 &#125;)</span><br></pre></td></tr></table></figure><ul><li>满足<code>x=1</code>条件的第一条数据将会被替换成{x:111, y:100}</li></ul><blockquote><p>如果加上<code>upsert</code>字段并设值为<code>true</code>将会修改多条满足条件的数据，如果不存在此条件的数据将会添加一条数据</p></blockquote><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><p><a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>使用<code>remove</code>函数进行删除操作</p><p><strong>删除集合中所有的数据</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.testCollection.remove(&#123;&#125;)</span><br></pre></td></tr></table></figure><p><strong>删除满足条件的数据</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.testCollection.remove(&#123;x:1&#125;)</span><br></pre></td></tr></table></figure><p><strong>删除单个数据，设置参数<code>1</code>或者<code>true</code></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.testCollection.remove(&#123;x:1&#125;, 1)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      如何使用MongoDB去存储数据，对数据进行增删改查等操作。
    
    </summary>
    
    
      <category term="database" scheme="http://locahost:4000/categories/database/"/>
    
    
      <category term="MongoDB" scheme="http://locahost:4000/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB笔记1-安装运行MongoDB</title>
    <link href="http://locahost:4000/2020/03/11/2016-02-19-use-mongodb/"/>
    <id>http://locahost:4000/2020/03/11/2016-02-19-use-mongodb/</id>
    <published>2020-03-11T14:46:32.035Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前段时间在上家公司做的产品后台用的就是<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>，由于当时这块根本接触不到，也一直没有时间去学习。趁现在在家呆着没事学习一下<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>。</p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p><a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>是一个基于分布式文件存储的开源数据库系统，在高负载的情况下，添加更多的节点，可以保证服务器性能。<br><a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a> 将数据存储为一个文档，数据结构由键值<code>(key=&gt;value)</code>对组成。<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a> 文档类似于 <a href="https://en.wikipedia.org/wiki/JSON" target="_blank" rel="noopener">JSON</a> 对象。字段值可以包含其他文档，数组及文档数组。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="安装MongoDB"><a href="#安装MongoDB" class="headerlink" title="安装MongoDB"></a>安装<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a></h2><p>在安装<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>之前先要到<strong><a href="https://www.mongodb.org" target="_blank" rel="noopener">官网</a></strong>上<strong><a href="https://www.mongo|||db.org|/||dow||nloads?_ga=1.146306676.1535760226.1455459089#production" target="_blank" rel="noopener">下载</a></strong>安装包</p><p><img src="http://7xr0d3.com1.z0.glb.clouddn.com/blog-post-img/mondb1/install.png" alt="官网"></p><p>进去官网后选择自己的系统对应的版本下载，我这里用的是<code>win7 64bit</code> 所以选择 <code>Windows 64-bit 2008 R2+</code>, <code>Legacy</code>的版本是被放弃的版本不建议使用。</p><p><strong>MongoDB对各系统平台的支持</strong></p><table><thead><tr><th>Platform</th><th>3.2</th><th>3.0</th><th>2.6</th><th>2.4</th><th>2.2</th></tr></thead><tbody><tr><td>Amazon Linux</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Debian 7</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Fedora 8+</td><td></td><td></td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>RHEL/CentOS 6.2+</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>RHEL/CentOS 7.0+</td><td>✓</td><td>✓</td><td>✓</td><td></td><td></td></tr><tr><td>SLES 11</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>SLES 12</td><td>✓</td><td></td><td></td><td></td><td></td></tr><tr><td>Solaris 64-bit</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Ubuntu 12.04</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Ubuntu 14.04</td><td>✓</td><td>✓</td><td>✓</td><td></td><td></td></tr><tr><td>Microsoft Azure</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Windows Vista/Server 2008R2/2012+</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>OSX 10.7+</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td></td></tr></tbody></table><p><strong>32位的<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>存在以下几个限制</strong></p><ul><li>不支持<code>WiredTiger</code> 存储引擎</li><li>默认日志是禁止的，因为日志会限制<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>可以存储的最大数据量</li><li>当运行的<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>，服务器的总存储大小，包括数据和索引，是2G字节。所以不要生产环境下使用在32位的<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>。</li></ul><p>在下载完成后，<code>windows</code>版本直接下一步安装就可以了</p><p>安装完成之后<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>的目录是这样的</p><p><img src="http://7xr0d3.com1.z0.glb.clouddn.com/blog-post-img/mondb1/floder.png" alt="目录"></p><h2 id="运行MongoDB"><a href="#运行MongoDB" class="headerlink" title="运行MongoDB"></a>运行<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a></h2><p><strong>安装完成接下来要把<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>跑起来</strong></p><p>在运行<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>之前先介绍一些刚安装<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>目录的<code>lib</code>目录下存放的文件作用</p><p><img src="http://7xr0d3.com1.z0.glb.clouddn.com/blog-post-img/mondb1/lib-floder.png" alt="lib"></p><p><strong>各可执行文件对应的作用</strong></p><table><thead><tr><th>Component Set</th><th>Binaries</th></tr></thead><tbody><tr><td>Server</td><td>mongod.exe</td></tr><tr><td>Router</td><td>mongos.exe</td></tr><tr><td>Client</td><td>mongo.exe</td></tr><tr><td>MonitoringTools</td><td>mongostat.exe, mongotop.exe</td></tr><tr><td>ImportExportTools</td><td>mongodump.exe, mongorestore.exe, mongoexport.exe, mongoimport.exe</td></tr><tr><td>MiscellaneousTools</td><td>bsondump.exe, mongofiles.exe, mongooplog.exe, mongoperf.exe</td></tr></tbody></table><p>首先得把<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>的<code>Server</code>端跑起来</p><p>在dos下敲下面的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;dbpath参数后面的跟的是数据库的路径，MongoDB默认有一个test库，参数可不加则直接使用默认的数据库</span><br><span class="line">mongod.exe --dbpath D:\Tools\Mongodb\test\data</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;这个时候<code>Server</code>端就会开启一个默认的端口<code>27017</code>，当然这个端口是可以通过参数更换的（加<code>-h</code> 就可以了解更多的参数）。<br><a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>在启动的时候需要知道数据库存储在哪个位置或者说将数据存储到哪，所以在启动的时候传入一个参数<code>--dbpath</code>告诉将要启动的<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>进程，数据库位置如果不指定的话则默认在<code>/data/db</code>位置去找，如果没有找到则将不能启动<a href="https://www.mongodb.org" target="_blank" rel="noopener">MongoDB</a>。<br>在执行完上面的命令后，会出现<code>The waiting for connections</code>字样，说明服务器这个时候就已经开启了在等待一个客户端连接进来。</p><h2 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h2><p>在数据库已经启动的情况下我们接下来就需要通过<code>client</code>去访问操作数据库。<br>在确保数据库已经启动成功，直接点击<code>mongo.exe</code>即可通过默认的端口连接到本地的数据库。如果你需要连接别的数据库，需要通过命令行传入指定参数进行连接。如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mongo --username &lt;user&gt; --password &lt;pass&gt; --host &lt;host&gt; --port 28015</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">mongo -u &lt;user&gt; -p &lt;pass&gt; --host &lt;host&gt; --port 28015</span><br></pre></td></tr></table></figure><ul><li><code>user</code>：填入你在那台机器上的用户名<br></li><li><code>pass</code>：填入你的用户密码<br></li><li><code>host</code>：数据库主机地址<br></li><li><code>port</code>：数据库开启的端口<br></li></ul><p>当执行完命令后（或者直接点击<code>mongo.exe</code>）将会出现下方显示内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2016-02-20T14:05.849+0800 I CONTROL [main] Hotfix KB271284 or later update is not installed, will zero-out data files</span><br><span class="line">MongoDB shell version: 3.2.1</span><br><span class="line">connection to: test</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>下面执行一些简单的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">2016-02-20T14:05.849+0800 I CONTROL [main] Hotfix KB271284 or later update is not installed, will zero-out data files</span><br><span class="line">MongoDB shell version: 3.2.1</span><br><span class="line">connection to: test</span><br><span class="line">&gt; db</span><br><span class="line">test</span><br><span class="line">&gt; show dbs</span><br><span class="line">local0.000GB</span><br><span class="line">test0.004GB</span><br></pre></td></tr></table></figure><ul><li><code>db</code>:             显示当前使用的是哪个数据库</li><li><code>show dbs</code>:         显示有几个数据库</li></ul>]]></content>
    
    <summary type="html">
    
      前段时间在上家公司做的产品后台用的就是Mongodb，由于当时这块根本接触不到，也一直没有时间去学习。趁现在在家呆着没事学习一下Mongodb。
    
    </summary>
    
    
      <category term="database" scheme="http://locahost:4000/categories/database/"/>
    
    
      <category term="MongoDB" scheme="http://locahost:4000/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>人生有感</title>
    <link href="http://locahost:4000/2020/03/11/2016-02-19-my-grandma/"/>
    <id>http://locahost:4000/2020/03/11/2016-02-19-my-grandma/</id>
    <published>2020-03-11T14:46:32.032Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;《青春》<br><br>所有的结局都已写好<br><br>所有的泪水也都已启程<br><br>切忽然忘了是怎样的一个开始<br><br>在哪个古老的不再回来的夏日<br><br>无论我如何地去追索<br><br>年轻的你只如云影掠过<br><br>而你微笑的面容极浅极浅<br><br>逐渐隐没在日落后的群岚<br><br>遂翻开那发黄的扉页<br><br>命运将它装订的极为拙劣<br><br>含着泪，我一读在读<br><br>却不得不承认<br><br>青春是一本太仓促的书<br></p></blockquote>]]></content>
    
    <summary type="html">
    
      人生就像一场旅行，在乎的不是目的地而是沿途的风景
    
    </summary>
    
    
      <category term="LifeFeeling" scheme="http://locahost:4000/categories/LifeFeeling/"/>
    
    
      <category term="人生" scheme="http://locahost:4000/tags/%E4%BA%BA%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>使用 php printf() 和 sprintf() 格式化字符串</title>
    <link href="http://locahost:4000/2020/03/11/2016-01-23-Formating_PHP_Strings_With_Printf_And_Sprintf/"/>
    <id>http://locahost:4000/2020/03/11/2016-01-23-Formating_PHP_Strings_With_Printf_And_Sprintf/</id>
    <published>2020-03-11T14:46:32.029Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>原文在 2009/11/19 发表于 <a href="http://www.elated.com/articles/formatting-php-strings-printf-sprintf/" target="_blank" rel="noopener">http://www.elated.com/articles/formatting-php-strings-printf-sprintf/</a></em></p><p>和其他许多编程语言一样, PHP 也有功能强大的 <a href="http://php.net/manual/en/function.printf.php" target="_blank" rel="noopener"><code>printf()</code></a> 和 <a href="http://php.net/manual/en/function.sprintf.php" target="_blank" rel="noopener"><code>sprintf()</code></a> 函数, 它们提供了很多格式化字符串的方式. 当你想要某些数据更易读, 或者需要传递数据给其他程式的时候, 这两个函数很有用.</p><p>PHP 也有许多专门用途的格式化字符串的函数 - 比如 <a href="http://php.net/manual/en/function.date.php" target="_blank" rel="noopener"><code>date()</code></a> 函数, 适合用于格式化日期字符串. 而 <code>printf()</code> 和 <code>sprintf()</code> 则适合更为通用的格式化.</p><p>这篇教程就会教你如何使用 <code>printf()</code> 和 <code>sprintf()</code> 来格式化字符串.</p><p>#一个简单的 <code>printf()</code> 示例</p><p>了解 <code>printf()</code> 的最简单方式就是通过示例. 下面这个例子打印一个包含了两个数字的字符串:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 打印 "Australia comprises 6 states and 10 territories"</span></span><br><span class="line">printf( <span class="string">"Australia comprises %d states and %d territories"</span>, <span class="number">6</span>, <span class="number">10</span> );</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意这个字符串在被打印出的时候, 第一个 <code>%d</code> 被第二个参数 <code>6</code> 替换, 第二个 <code>%d</code> 则被第三个参数 <code>10</code> 替换. 其工作原理即:</p><ul><li><p>第一个参数必须是一个字符串, 我们称之为目标字符串. 目标字符串包含普通的字符, 和一些可选的格式说明符 (比如 <code>%d</code>)</p></li><li><p>所有格式说明符都以 <code>%</code> 开头. 它按对应的顺序以特定方式格式化目标字符串之后的参数, 然后将其插入到最终的字符串中, 并显示到网页.</p></li></ul><p><strong>NOTE:</strong> 如果想要打印 <code>%</code> 符, 使用 <code>%%</code>.</p><p>#类型说明符</p><p>上面那个例子使用的 <code>%d</code> 这个格式说明符, 会将参数按照有符号十进制数字格式化. 这个 <code>d</code> 被称为类型说明符. <code>printf()</code> 支持很多类型说明符. 下面是类型说明符的完整列表:</p><table><thead><tr><th>类型说明符</th><th>备注</th></tr></thead><tbody><tr><td><code>b</code></td><td>将参数作为二进制数字(如 <code>10010110</code>)格式化</td></tr><tr><td><code>c</code></td><td>将参数作为 ASCII 码值格式化为对应的字符</td></tr><tr><td><code>d</code></td><td>将参数作为有符号十进制数字格式化</td></tr><tr><td><code>e</code></td><td>将参数作为科学计数法(如 <code>1.234e+3</code>)格式化</td></tr><tr><td><code>f</code></td><td>将参数作为浮点数字, 并且使用地区设定(如在法国, 逗号被用作小数点)格式化</td></tr><tr><td><code>F</code></td><td>和上面相同, 不过不使用地区设定</td></tr><tr><td><code>o</code></td><td>将参数作为八进制数字格式化</td></tr><tr><td><code>s</code></td><td>将参数作为字符串格式化</td></tr><tr><td><code>u</code></td><td>将参数作为无符号十进制数字格式化</td></tr><tr><td><code>x</code></td><td>将参数作为小写十六进制数字(如 <code>4fdf87</code>)格式化</td></tr><tr><td><code>X</code></td><td>将参数作为大写十六进制数字(如 <code>4FDF87</code>)格式化</td></tr></tbody></table><p>下面是一些类型说明符的示例:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">printf( <span class="string">"Here's the number %s as a float (%f), a binary integer (%b), an octal integer (%o), and a hex integer (%x)."</span>, <span class="number">543.21</span>, <span class="number">543.21</span>, <span class="number">543.21</span>, <span class="number">543.21</span>, <span class="number">543.21</span> );</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这段代码会输出:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Here&#39;s the number 543.21 as a float (543.210000), a binary integer (1000011111), an octal integer (1037), and a hex integer (21f).</span><br></pre></td></tr></table></figure><p>#符号说明符</p><p>默认情况下, <code>printf()</code> 只会在负数前加正负符号:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">printf( <span class="string">"%d"</span>, <span class="number">36</span> );   <span class="comment">// 输出 "36"</span></span><br><span class="line">printf( <span class="string">"%d"</span>, <span class="number">-36</span> );  <span class="comment">// 输出 "-36"</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果你也想让 <code>printf()</code> 在正数前加符号, 可以在类型说明符前指定一个符号说明符 <code>+</code>:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">printf( <span class="string">"%+d"</span>, <span class="number">36</span> );   <span class="comment">// 输出 "+36"</span></span><br><span class="line">printf( <span class="string">"%+d"</span>, <span class="number">-36</span> );  <span class="comment">// 输出 "-36"</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>#填充</p><p><code>printf()</code> 允许你填充目标字符串到指定的长度. 你可以使用任何字符做填充字符, 也可以指定填充左边还是右边. 如果你希望在数字前补 <code>0</code> 或让字符串右对齐, 填充就派上用场了.</p><p>通过在 <code>%</code> 前面插入一个填充说明符来指定填充规则. 填充说明符使用以下格式:</p><p>&lt;填充符&gt;&lt;宽度&gt;:</p><ul><li><p>&lt;填充符&gt; 可以是 <code>0</code> 或空格. 如果你不指定则默认使用空格. 如果你想要指定其他填充符, 需在它之前加一个 <code>&#39;</code> 字符.</p></li><li><p>&lt;宽度&gt; 即想要填充到的宽度. 整数代表左填充, 负数代表右填充.</p></li></ul><p>这是些填充说明符示例:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">printf( <span class="string">"%04d"</span>, <span class="number">12</span> );          <span class="comment">// 输出 "0012"</span></span><br><span class="line">printf( <span class="string">"%04d"</span>, <span class="number">1234</span> );        <span class="comment">// 输出 "1234"</span></span><br><span class="line">printf( <span class="string">"%04d"</span>, <span class="number">12345</span> );       <span class="comment">// 输出 "12345"</span></span><br><span class="line">printf( <span class="string">"% 10s"</span>, <span class="string">"Hello"</span> );    <span class="comment">// 输出 "     Hello"</span></span><br><span class="line">printf( <span class="string">"%10s"</span>, <span class="string">"Hello"</span> );     <span class="comment">// 输出 "     Hello"</span></span><br><span class="line">printf( <span class="string">"%'*10s"</span>, <span class="string">"Hello"</span> );   <span class="comment">// 输出 "*****Hello"</span></span><br><span class="line">printf( <span class="string">"%'*-10s"</span>, <span class="string">"Hello"</span> );  <span class="comment">// 输出 "Hello*****"</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>留意第三个示例, 填充说明符并不会导致目标字符串被截断为 4 个字符. <strong>填充只会在必要处增加字符</strong></p><p>#数字精度</p><p>当使用 <code>f</code> 或者 <code>F</code> 类型说明符格式化浮点数时, PHP 默认会取到小数点后面 6 位:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">printf( <span class="string">"%f"</span>, <span class="number">123.456</span> );  <span class="comment">// 输出 "123.456000"</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果要指定不同的精度, 就要用到精度说明符了. 精度说明符是一个 <code>.</code> 号后跟一个数字, 并应放到类型说明符之前. 如:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">printf( <span class="string">"%.2f"</span>, <span class="number">123.456</span> );   <span class="comment">// 输出 "123.46"</span></span><br><span class="line">printf( <span class="string">"%.10f"</span>, <span class="number">123.456</span> );  <span class="comment">// 输出 "123.4560000000"</span></span><br><span class="line">printf( <span class="string">"%.0f"</span>, <span class="number">123.456</span> );   <span class="comment">// 输出 "123"</span></span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果你既指定了填充说明符又指定了精度说明符, <code>printf()</code> 会将整个数字(包括整数和小数部分)填充到指定长度:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">printf( <span class="string">"%08.2f"</span>, <span class="number">123.456</span> );  <span class="comment">// 输出 "00123.46"</span></span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果你同时使用 <code>s</code> 类型说明符和精度说明符, <code>printf()</code> 会截断目标字符串到指定的长度:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">printf( <span class="string">"%.2s"</span>, <span class="string">"Hello"</span> );  <span class="comment">// 输出 "He"</span></span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>#参数交换</p><p>默认情况下, 目标字符串的第一个格式说明符会格式化该字符串后的第一个参数, 目标字符串的第二个格式说明符会格式化该字符串后的第二个参数, 以此类推. 但是你可以更改这个顺序.</p><p>要这样做, 在 <code>%</code> 符和类型说明符之间插入一个 <code>$</code> 号. 如:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">// 输出 "Australia comprises 10 territories and 6 states"</span></span><br><span class="line">printf( <span class="string">'Australia comprises %2$d territories and %1$d states'</span>, <span class="number">6</span>, <span class="number">10</span> );</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的例子中, 第一个格式说明符是 <code>%2$d</code>. 意即: “将目标字符串后的第二个参数作为十进制整数格式化”. 第二个格式说明符 <code>%1$d</code> 即: “将目标字符串后的第一个参数作为十进制整数格式化”. 这样, 参数便以不同与默认的顺序格式化.</p><p>在上面的例子中, 格式字符串使用单引号而非双引号包围. 这样是为了阻止 <code>$</code> 符号被 PHP 解释为变量名.</p><p>#保存格式化后的结果</p><p>那 <code>sprintf()</code> 又是干嘛的呢? 这个函数和 <code>printf()</code> 只有一点不同: 它会将格式化后的结果返回, 而不是直接输出. 这样你就可以将结果赋给变量, 进行其他操作等. 如果你想要在输出它之前进行额外的处理, 或者保存到数据库等, 那这点会很有用. 下面是示例:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$result = sprintf( <span class="string">"Australia comprises %d states and %d territories"</span>, <span class="number">6</span>, <span class="number">10</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出 "Australia comprises 6 states and 10 territories"</span></span><br><span class="line"><span class="keyword">echo</span> $result;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>#相关函数</p><p>其他相关的函数包括 <a href="http://php.net/manual/en/function.fprintf.php" target="_blank" rel="noopener"><code>fprintf()</code></a>, 用于将结果写到流(如文件). 还有 <a href="http://php.net/manual/en/function.vprintf.php" target="_blank" rel="noopener"><code>vprintf()</code></a>/<a href="http://php.net/manual/en/function.vsprintf.php" target="_blank" rel="noopener"><code>vsprintf()</code></a>/<a href="http://php.net/manual/en/function.vfprintf.php" target="_blank" rel="noopener"><code>vfprintf()</code></a>, 它们使用一个数组参数, 而非参数列表.</p>]]></content>
    
    <summary type="html">
    
      和其他许多编程语言一样, PHP 也有功能强大的 printf() 和 sprintf() 函数, 它们提供了很多格式化字符串的方式. 当你想要某些数据更易读, 或者需要传递数据给其他程式的时候, 这两个函数很有用. 这篇教程就会教你如何使用 printf() 和 sprintf() 来格式化字符串.
    
    </summary>
    
    
      <category term="translation" scheme="http://locahost:4000/categories/translation/"/>
    
    
      <category term="php" scheme="http://locahost:4000/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>ios微信上不能更换标题解决办法</title>
    <link href="http://locahost:4000/2020/03/11/2015-11-25-cant-modify-title-on-ios-wechat/"/>
    <id>http://locahost:4000/2020/03/11/2015-11-25-cant-modify-title-on-ios-wechat/</id>
    <published>2020-03-11T14:46:32.025Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>用Iphone手机的微信浏览网页的时候，在切换页面时无法更新页面的title。于是从网上找了一个传说中的黑魔法解决此问题。</p><h1 id="使用jQuery"><a href="#使用jQuery" class="headerlink" title="使用jQuery"></a>使用jQuery</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">var$body &#x3D; $(&#39;body&#39;);</span><br><span class="line"></span><br><span class="line">document.title &#x3D; &#39;title&#39;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; hack在微信等webview中无法修改document.title的情况</span><br><span class="line"></span><br><span class="line">var$iframe &#x3D; $(&#39;&lt;iframe src&#x3D;&quot;&#x2F;favicon.ico&quot;&gt;&lt;&#x2F;iframe&gt;&#39;);</span><br><span class="line"></span><br><span class="line">$iframe.on(&#39;load&#39;,function()&#123;</span><br><span class="line"></span><br><span class="line">    setTimeout(function()&#123;</span><br><span class="line"></span><br><span class="line">        $iframe.off(&#39;load&#39;).remove();</span><br><span class="line"></span><br><span class="line">    &#125;, 0);</span><br><span class="line"></span><br><span class="line">&#125;).appendTo($body);</span><br></pre></td></tr></table></figure><h1 id="原生javaScript"><a href="#原生javaScript" class="headerlink" title="原生javaScript"></a>原生javaScript</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">var body &#x3D; document.getElementsByTagName(&#39;body&#39;)[0];</span><br><span class="line"></span><br><span class="line">document.title &#x3D; &quot;标题被我改了&quot;;</span><br><span class="line"></span><br><span class="line">var iframe &#x3D; document.createElement(&quot;iframe&quot;);</span><br><span class="line"></span><br><span class="line">iframe.setAttribute(&quot;src&quot;, &quot;loading.png&quot;);</span><br><span class="line"></span><br><span class="line">iframe.addEventListener(&#39;load&#39;, function()&#123;</span><br><span class="line"></span><br><span class="line">setTimeout(function()&#123;</span><br><span class="line"></span><br><span class="line">  iframe.removeEventListener(&#39;load&#39;);</span><br><span class="line"></span><br><span class="line">    document.body.removeChild(iframe);</span><br><span class="line"></span><br><span class="line">  &#125;, 0);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">document.body.appendChild(iframe);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      用Iphone手机的微信浏览网页的时候，在切换页面时无法更新页面的title。于是从网上找了一个传说中的黑魔法解决此问题。
    
    </summary>
    
    
      <category term="program" scheme="http://locahost:4000/categories/program/"/>
    
    
      <category term="JavaScript" scheme="http://locahost:4000/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>YII(版本1) 权威指南学习笔记(未完结)</title>
    <link href="http://locahost:4000/2020/03/11/2015-11-19-learning-note-YII(1.1)/"/>
    <id>http://locahost:4000/2020/03/11/2015-11-19-learning-note-YII(1.1)/</id>
    <published>2020-03-11T14:46:32.022Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>#基础</p><p>##入口脚本</p><p>WEB 应用一般为 <code>index.php</code>, 控制台应用一般为 <code>yii.php</code> 并在文件开头加上 <code>#! /usr/bin/env php</code></p><p>入口脚本是定义全局常量的好地方</p><p>支持三个常量: <code>YII_DEBUG</code>, <code>YII_ENV</code>, <code>YII_ENABLE_ERROR_HANDLER</code></p><p>WEB:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 定义全局常量</span></span><br><span class="line">defined(<span class="string">'YII_DEBUG'</span>) <span class="keyword">or</span> define(<span class="string">'YII_DEBUG'</span>, <span class="keyword">true</span>);</span><br><span class="line">defined(<span class="string">'YII_ENV'</span>) <span class="keyword">or</span> define(<span class="string">'YII_ENV'</span>, <span class="string">'dev'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册 Composer 自动加载器</span></span><br><span class="line"><span class="keyword">require</span>(<span class="keyword">__DIR__</span> . <span class="string">'/../vendor/autoload.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 包含 Yii 类文件</span></span><br><span class="line"><span class="keyword">require</span>(<span class="keyword">__DIR__</span> . <span class="string">'/../vendor/yiisoft/yii2/Yii.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载应用配置</span></span><br><span class="line">$config = <span class="keyword">require</span>(<span class="keyword">__DIR__</span> . <span class="string">'/../config/web.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建、配置、运行一个应用</span></span><br><span class="line">(<span class="keyword">new</span> yii\web\Application($config))-&gt;run();</span><br></pre></td></tr></table></figure><p>控制台:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">defined(<span class="string">'YII_DEBUG'</span>) <span class="keyword">or</span> define(<span class="string">'YII_DEBUG'</span>, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// fcgi 默认没有定义 STDIN 和 STDOUT</span></span><br><span class="line">defined(<span class="string">'STDIN'</span>) <span class="keyword">or</span> define(<span class="string">'STDIN'</span>, fopen(<span class="string">'php://stdin'</span>, <span class="string">'r'</span>));</span><br><span class="line">defined(<span class="string">'STDOUT'</span>) <span class="keyword">or</span> define(<span class="string">'STDOUT'</span>, fopen(<span class="string">'php://stdout'</span>, <span class="string">'w'</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册 Composer 自动加载器</span></span><br><span class="line"><span class="keyword">require</span>(<span class="keyword">__DIR__</span> . <span class="string">'/vendor/autoload.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 包含 Yii 类文件</span></span><br><span class="line"><span class="keyword">require</span>(<span class="keyword">__DIR__</span> . <span class="string">'/vendor/yiisoft/yii2/Yii.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载应用配置</span></span><br><span class="line">$config = <span class="keyword">require</span>(<span class="keyword">__DIR__</span> . <span class="string">'/config/console.php'</span>);</span><br><span class="line"></span><br><span class="line">$application = <span class="keyword">new</span> yii\console\Application($config);</span><br><span class="line">$exitCode = $application-&gt;run();</span><br><span class="line"><span class="keyword">exit</span>($exitCode);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>##应用主体</p><p>创建: <code>Yii::createWebApplication($configFile)</code></p><p>访问: 可以在任何地方使用 <code>Yii::app()|YiiBase::app</code> 访问</p><p>##控制器</p><p>控制器路由格式: <code>moduleID/controllerID/actionID</code></p><p>控制器创建决策步骤:</p><ol><li>如果指定了 <code>CWebApplication::catchAllRequest</code>, 用户指定的 ID 将被忽略. (通常用于设置应用为维护状态, 显示一个静态页面)</li><li>如果在 <code>CWebApplication::controllerMap</code> 中找到 ID, 相应的控制器配置则被用于创建控制器</li><li>如果 ID 为 <code>path/to/xyz</code> 形式, 则按控制器路由格式解析并创建</li></ol><p>创建:</p><ul><li><p>默认控制器在 <code>CWebApplication::defaultController</code> 中定义, 默认动作为 <code>index</code>, 对应的方法名为 <code>actionIndex</code>, 可通过 <code>CController::defaultAction</code> 修改</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SiteController</span> <span class="keyword">extends</span> <span class="title">CController</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>也可以由一个动作类来定义动作, 以便重用动作:</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UpdateAction</span> <span class="keyword">extends</span> <span class="title">CAction</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// place the action logic here</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>然后需覆盖控制器类的 <code>actions</code> 方法:</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PostController</span> <span class="keyword">extends</span> <span class="title">CController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actions</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'edit'</span>=&gt;<span class="string">'application.controllers.post.UpdateAction'</span>,</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>动作参数绑定:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// in PostController:</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionCreate</span><span class="params">(array $category, $language = <span class="string">'en'</span>)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 动作参数绑定功能将会把传入 action 的参数和 $_GET 中的数据绑定</span></span><br><span class="line">    <span class="comment">// 在此, 如果 $_GET 中没有 language 这一项, $language 默认为 'en'</span></span><br><span class="line">    <span class="comment">// 因为没有为 $category 提供默认值, 如果 $_GET 中没有 category 这一项则会报错</span></span><br><span class="line">    <span class="comment">// array 类型声明会确保 $category 为一个数组(自动将基本类型转换为数组)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>过滤器可被配置在动作执行之前或之后执行, 如访问控制过滤器, 性能过滤器(参见<a href="#accessControlFilter">访问控制过滤器</a>)</p><ul><li><p>定义:</p><ul><li><p>可被定义为一个 <code>filter</code> 前缀的控制器方法:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filterAccessControl</span><span class="params">($filterChain)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 调用 $filterChain-&gt;run() 以继续后续过滤器与动作的执行。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>也可是一个 <code>CFilter</code> 或其子类的实例:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PerformanceFilter</span> <span class="keyword">extends</span> <span class="title">CFilter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">preFilter</span><span class="params">($filterChain)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 动作被执行之前应用的逻辑</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>; <span class="comment">// 如果动作不应被执行，此处返回 false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">postFilter</span><span class="params">($filterChain)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 动作执行之后应用的逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>配置使用: 需要覆盖控制器的 <code>filter()</code> 方法:</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PostController</span> <span class="keyword">extends</span> <span class="title">CController</span> </span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filters</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'postOnly + edit, create'</span>, <span class="comment">// 使用 filter 前缀方法定义的过滤器</span></span><br><span class="line">            <span class="keyword">array</span>(                     <span class="comment">// 使用类定义的过滤器</span></span><br><span class="line">                <span class="string">'application.filters.PerformanceFilter - edit, create'</span>,</span><br><span class="line">                <span class="string">'unit'</span>=&gt;<span class="string">'second'</span>,</span><br><span class="line">            ),</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>##模型</p><p>Yii 实现了两种类型的模型: 表单模型和 Active Record, 二者都继承于 CModel</p><p>如果用户输入被收集然后丢弃, 应该创建一个表单模型; 如果用户输入被收集后要保存到数据库, 应使用一个 Active Record</p><p>详见<a href="#FormModel">表单模型</a>和<a href="#ActiveRecord">Active Record</a></p><p>##视图</p><p><code>CController::render(&#39;edit&#39;)</code> 将会在 <code>protected/views/ControllerID</code> 目录下寻找 <code>edit.php</code> 视图文件</p><p>可以通过在视图中使用 <code>$this-&gt;propertyName</code> 访问控制器的任何属性, 也可以在控制器中将数据传递到视图中:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;render(<span class="string">'edit'</span>, <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'var1'</span>=&gt;$value1,</span><br><span class="line">    <span class="string">'var2'</span>=&gt;$value2,</span><br><span class="line">));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>protected/views/layouts/main.php</code> 是默认的<code>布局</code>文件, 可通过 <code>CWebApplication::layout</code> 自定义. 要渲染一个不带布局的视图, 需调用 <code>CController::renderPartial</code></p><p><code>小物件</code>是 <code>CWidget</code> 或其子类的实例, 它也可以有自己的视图文件</p><ul><li><p>定义</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyWidget</span> <span class="keyword">extends</span> <span class="title">CWidget</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 此方法会被 CController::beginWidget() 调用</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 此方法会被 CController::endWidget() 调用</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>按如下视图脚本来使用一个小物件:</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">$this</span>-&gt;beginWidget(<span class="string">'path.to.WidgetClass'</span>, $config); <span class="meta">?&gt;</span></span><br><span class="line">...可能会由小物件获取的内容主体...</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">$this</span>-&gt;endWidget(); <span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">// 或</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">$this</span>-&gt;widget(<span class="string">'path.to.WidgetClass'</span>, $config); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>系统视图用于展示 Yii 的错误和日志消息, 如如果 CHttpException 抛出一个 404 错误, 那么 <code>error404</code> 就会被展示. Yii 在 <code>framework/views</code> 下提供了默认的系统视图, 也可以通过在 <code>protected/views/system</code> 下创建同名视图文件进行自定义</p><p>##组件</p><p>加载: 通过配置应用的 <code>components|CApplication::components</code> 属性</p><ul><li>可以配置 <code>enabled</code> 为 <code>false</code> 禁用组件</li><li>组件是按需创建的, 但是可以将组件 ID 列入应用的 <code>preload|CWebApplication::preload</code> 属性中强制其加载</li></ul><p>访问: <code>Yii::app()-&gt;ComponentID</code></p><p>预定义的核心应用组件:</p><ul><li>assetManager</li><li>authManager</li><li>cache</li><li>clientScript</li><li>coreMessage</li><li>db</li><li>errorHandler</li><li>format</li><li>messages</li><li>request</li><li>securityManager</li><li>session</li><li>statePersister</li><li>urlManager</li><li>user</li><li>themeManager</li></ul><p>组件属性</p><ul><li>可以通过直接定义一个公共成员变量定义</li><li>也可以使用 getter 和 setter 更灵活的定义</li><li>通过 getter 和 setter 定义的属性和类成员变量有个区别: 他们是不区分大小写的</li></ul><p>组件事件</p><ol><li><p>定义组件事件(<code>on</code> 开头)</p> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onClicked</span><span class="params">($event)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;raiseEvent(<span class="string">'onClicked'</span>, $event);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>定义事件回调</p> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callbackName</span><span class="params">($event)</span> </span>&#123;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>绑定事件回调</p> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$component-&gt;onClicked=$callback;</span><br><span class="line"><span class="comment">// 或使用匿名函数</span></span><br><span class="line">$component-&gt;onclicked=<span class="function"><span class="keyword">function</span><span class="params">($event)</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>组件行为</p><ul><li><p>行为类必须实现 <code>IBehavior</code></p></li><li><p>大多数行为可继承自 <code>CBehavior</code>, 如果行为需要绑定到模型, 则也可以继承自 <code>CModelBehavior</code> 或 <code>CActiveRecordBehavior</code></p></li><li><p>两个同名行为绑定到同一个组件下是有可能的, 在这种情况下, 先绑定的行为则拥有优先权</p></li><li><p>当和 events, 一起使用时, 行为会更加强大. 当行为被绑定到组件时,行为里的一些方法就可以绑定到组件的一些事件上了. 这样一来,行为就有机观察或者改变组件的常规执行流程</p></li><li><p>一个行为的属性也可以通过绑定到的组件来访问. 这些属性包含公共成员变量以及通过 getters 和/或 setters 方式设置的属性. 例如, 若一个行为有一个 <code>xyz</code> 的属性，此行为被绑定到组件 <code>$a</code>, 然后我们可以使用表达式 <code>$a-&gt;xyz</code> 访问此行为的属性</p></li><li><p>绑定行为:</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// $name 在组件中实现了对行为的唯一识别</span></span><br><span class="line">$component-&gt;attachBehavior($name,$behavior);</span><br><span class="line"><span class="comment">// test() 是行为中的方法。</span></span><br><span class="line">$component-&gt;test();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>访问行为:</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$behavior=$component-&gt;tree;</span><br><span class="line"><span class="comment">// 等于下行代码：</span></span><br><span class="line"><span class="comment">// $behavior=$component-&gt;asa('tree');</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>禁用行为:</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$component-&gt;disableBehavior($name);</span><br><span class="line"><span class="comment">// 下面的代码将抛出一个异常</span></span><br><span class="line">$component-&gt;test();</span><br><span class="line">$component-&gt;enableBehavior($name);</span><br><span class="line"><span class="comment">// 现在就可以使用了</span></span><br><span class="line">$component-&gt;test();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>##模块</p><p>模块是一个独立的软件单元，它包含 模型, 视图, 控制器 和其他支持的组件. 如 <code>forum</code> 模块的典型目录结构</p><pre><code>forum/   ForumModule.php            模块类文件   components/                包含可复用的用户组件      views/                  包含小物件的视图文件   controllers/               包含控制器类文件      DefaultController.php   默认的控制器类文件   extensions/                包含第三方扩展   models/                    包含模块类文件   views/                     包含控制器视图和布局文件      layouts/                包含布局文件      default/                包含 DefaultController 的视图文件         index.php            首页视图文件</code></pre><p>模块可以嵌套</p><p>使用模块:</p><ol><li><p>继承 CWebModule, 并命名为 ucfirst($id).’Module’</p></li><li><p>将模块目录放入 <code>modules</code> 目录中, 然后在应用的 <code>modules</code> 配置 属性中声明模块 ID. 模块也可以在配置是带有初始属性值</p></li><li><p>使用 CController::module 访问</p></li></ol><p>##路径别名和名字空间</p><p><code>YiiBase::getPathOfAlias()</code> 获取别名的真实路径, <code>YiiBase::setPathOfAlias()</code> 设置新的别名的真实路径</p><p>预定义的根别名</p><ul><li>system</li><li>zii</li><li>application</li><li>webroot</li><li>ext</li><li>模块 ID</li></ul><p>使用别名导入类: <code>Yii::import(&#39;system.web.CController&#39;)</code>. (所有核心类已被预先导入)</p><p>预导入: 在 <code>CWebApplication::run()</code> 之前执行:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">Yii::$classMap=<span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'ClassName1'</span> =&gt; <span class="string">'path/to/ClassName1.php'</span>,</span><br><span class="line">    <span class="string">'ClassName2'</span> =&gt; <span class="string">'path/to/ClassName2.php'</span>,</span><br><span class="line">    ......</span><br><span class="line">);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>导入目录: <code>Yii::import(&#39;system.web.*&#39;);</code></p><p>#<a name="FormModel">使用表单</a></p><p>##创建模型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginForm</span> <span class="keyword">extends</span> <span class="title">CFormModel</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 定义特性(我们把用于存储用户输入或数据库数据的属性成为特性(attribute))</span></span><br><span class="line">    <span class="keyword">public</span> $username;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> $rememberMe=<span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> $_identity;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证规则</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 每个验证规则的格式为: </span></span><br><span class="line"><span class="comment">         * array('AttributeList', 'Validator', 'on'=&gt;'ScenarioList', ...附加选项)</span></span><br><span class="line"><span class="comment">         * 有三种方法指定 Validator</span></span><br><span class="line"><span class="comment">         * 1. 指定为模型类中的一个方法, 该方法定义格式为</span></span><br><span class="line"><span class="comment">         * public function ValidatiorName($attributes, $params) &#123;...&#125;</span></span><br><span class="line"><span class="comment">         * 2. 一个继承自 CValidator 的验证器类, 此时附加选项用于初始化实例的属性值</span></span><br><span class="line"><span class="comment">         * 3. 一个预定义的验证器类的别名, 以下是完整列表</span></span><br><span class="line"><span class="comment">         * boolean, captcha, compare, email, default, exists, file</span></span><br><span class="line"><span class="comment">         * filter, in, length, match, numerical, required, type, unique, url</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">            <span class="keyword">array</span>(<span class="string">'username, password'</span>, <span class="string">'required'</span>), <span class="comment">// 必填</span></span><br><span class="line">            <span class="keyword">array</span>(<span class="string">'rememberMe'</span>, <span class="string">'boolean'</span>),          <span class="comment">// 布尔</span></span><br><span class="line">            <span class="keyword">array</span>(<span class="string">'password'</span>, <span class="string">'authenticate'</span>),       <span class="comment">// 需验证</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * authenticate Validator</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">authenticate</span><span class="params">($attribute,$params)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_identity=<span class="keyword">new</span> UserIdentity(<span class="keyword">$this</span>-&gt;username,<span class="keyword">$this</span>-&gt;password);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;_identity-&gt;authenticate())</span><br><span class="line">            <span class="keyword">$this</span>-&gt;addError(<span class="string">'password'</span>,<span class="string">'错误的用户名或密码。'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a name="massiveAssign">块赋值(massive assignment)</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$model = <span class="keyword">new</span> LoginForm();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'LoginForm'</span>])) &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 只有被认为 '安全' 的特性才会被赋值</span></span><br><span class="line"><span class="comment">     * 特性如果出现在相应场景的一个验证规则中, 即被认为是安全的</span></span><br><span class="line"><span class="comment">     * 也可以用特殊的 `safe` Validator 来让特性变为安全的</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * 为了使块赋值正确工作, 对应于模型类 `C` 中的特性 `a` 的表单域, 请命名其为  `C[a]`</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    $model-&gt;attributes = $_POST[<span class="string">'LoginForm'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a name="triggerValidation">触发验证</a></p><ul><li>验证是基于 <code>场景(scenario)</code> 的</li><li>可以手动调用 <code>CModel::validate()</code> 触发; 对于 <code>CActiveRecord</code>, 会在 <code>CAcitveRecord::save()</code> 时自动触发验证</li><li>验证错误可以使用 <code>CModel::getError()</code> 或 <code>CModel::getErrors()</code> 获取</li></ul><p>标签</p><ul><li><code>CModel</code> 默认将返回特性的名字作为其标签</li><li>也可使用 <code>CModel::attributesLabels</code> 方法自定义标签</li></ul><p>##创建动作</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionLogin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $model=<span class="keyword">new</span> LoginForm;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'LoginForm'</span>])) &#123;</span><br><span class="line">        <span class="comment">// 收集用户输入的数据</span></span><br><span class="line">        $model-&gt;attributes=$_POST[<span class="string">'LoginForm'</span>];</span><br><span class="line">        <span class="comment">// 验证用户输入，并在判断输入正确后重定向到前一页</span></span><br><span class="line">        <span class="keyword">if</span>($model-&gt;validate())</span><br><span class="line">            <span class="keyword">$this</span>-&gt;redirect(Yii::app()-&gt;user-&gt;returnUrl);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 显示登录表单</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;render(<span class="string">'login'</span>,<span class="keyword">array</span>(<span class="string">'model'</span>=&gt;$model));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>##创建视图</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="form"&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> $form=<span class="keyword">$this</span>-&gt;beginWidget(<span class="string">'CActiveForm'</span>); <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="keyword">echo</span> $form-&gt;errorSummary($model); <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;div class="row"&gt;</span><br><span class="line">        <span class="meta">&lt;?php</span> <span class="keyword">echo</span> $form-&gt;label($model,<span class="string">'username'</span>); <span class="meta">?&gt;</span></span><br><span class="line">        <span class="meta">&lt;?php</span> <span class="keyword">echo</span> $form-&gt;textField($model,<span class="string">'username'</span>) <span class="meta">?&gt;</span></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class="row"&gt;</span><br><span class="line">        <span class="meta">&lt;?php</span> <span class="keyword">echo</span> $form-&gt;label($model,<span class="string">'password'</span>); <span class="meta">?&gt;</span></span><br><span class="line">        <span class="meta">&lt;?php</span> <span class="keyword">echo</span> $form-&gt;passwordField($model,<span class="string">'password'</span>) <span class="meta">?&gt;</span></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class="row rememberMe"&gt;</span><br><span class="line">        <span class="meta">&lt;?php</span> <span class="keyword">echo</span> $form-&gt;checkBox($model,<span class="string">'rememberMe'</span>); <span class="meta">?&gt;</span></span><br><span class="line">        <span class="meta">&lt;?php</span> <span class="keyword">echo</span> $form-&gt;label($model,<span class="string">'rememberMe'</span>); <span class="meta">?&gt;</span></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class="row submit"&gt;</span><br><span class="line">        <span class="meta">&lt;?php</span> <span class="keyword">echo</span> CHtml::submitButton(<span class="string">'Login'</span>); <span class="meta">?&gt;</span></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">$this</span>-&gt;endWidget(); <span class="meta">?&gt;</span></span><br><span class="line">&lt;/div&gt;&lt;!-- form --&gt;</span><br></pre></td></tr></table></figure><p>##收集表格输入(批量)</p><p>action:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionBatchUpdate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 假设每一项（item）是一个 'Item' 类的实例，</span></span><br><span class="line">    <span class="comment">// 提取要通过批量模式更新的项</span></span><br><span class="line">    $items=<span class="keyword">$this</span>-&gt;getItemsToUpdate();</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'Item'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        $valid=<span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">foreach</span>($items <span class="keyword">as</span> $i=&gt;$item)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'Item'</span>][$i]))</span><br><span class="line">                $item-&gt;attributes=$_POST[<span class="string">'Item'</span>][$i];</span><br><span class="line">            $valid=$valid &amp;&amp; $item-&gt;validate();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>($valid)  <span class="comment">// 如果所有项目有效</span></span><br><span class="line">            <span class="comment">// ...则在此处做一些操作</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 显示视图收集表格输入</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;render(<span class="string">'batchUpdate'</span>,<span class="keyword">array</span>(<span class="string">'items'</span>=&gt;$items));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>view:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="form"&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> CHtml::beginForm(); <span class="meta">?&gt;</span></span><br><span class="line">&lt;table&gt;</span><br><span class="line">&lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Price&lt;/th&gt;&lt;th&gt;Count&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">foreach</span>($items <span class="keyword">as</span> $i=&gt;$item): <span class="meta">?&gt;</span></span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> CHtml::activeTextField($item,<span class="string">"[$i]name"</span>); <span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> CHtml::activeTextField($item,<span class="string">"[$i]price"</span>); <span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> CHtml::activeTextField($item,<span class="string">"[$i]count"</span>); <span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> CHtml::activeTextArea($item,<span class="string">"[$i]description"</span>); <span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">endforeach</span>; <span class="meta">?&gt;</span></span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> CHtml::submitButton(<span class="string">'Save'</span>); <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> CHtml::endForm(); <span class="meta">?&gt;</span></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>##使用表单生成器 @todo</p><p>action: </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionLogin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $model = <span class="keyword">new</span> LoginForm;</span><br><span class="line">    $form = <span class="keyword">new</span> CForm(<span class="string">'application.views.site.loginForm'</span>, $model);</span><br><span class="line">    <span class="keyword">if</span>($form-&gt;submitted(<span class="string">'login'</span>) &amp;&amp; $form-&gt;validate()) &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;redirect(<span class="keyword">array</span>(<span class="string">'site/index'</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;render(<span class="string">'login'</span>, <span class="keyword">array</span>(<span class="string">'form'</span>=&gt;$form));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>protected/views/site/loginForm.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'title'</span>=&gt;<span class="string">'Please provide your login credential'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'elements'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'username'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">            <span class="comment">// 可选 type: text, hidden, password, textarea, file, radio</span></span><br><span class="line">            <span class="comment">// checkbox, listbox, dropdownlist, checkboxlist, radiolist</span></span><br><span class="line">            <span class="string">'type'</span>=&gt;<span class="string">'text'</span>,</span><br><span class="line">            <span class="string">'maxlength'</span>=&gt;<span class="number">32</span>,</span><br><span class="line">        ),</span><br><span class="line">        <span class="string">'password'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'type'</span>=&gt;<span class="string">'password'</span>,</span><br><span class="line">            <span class="string">'maxlength'</span>=&gt;<span class="number">32</span>,</span><br><span class="line">        ),</span><br><span class="line">        <span class="string">'rememberMe'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'type'</span>=&gt;<span class="string">'checkbox'</span>,</span><br><span class="line">        )</span><br><span class="line">    ),</span><br><span class="line"></span><br><span class="line">    <span class="string">'buttons'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'login'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'type'</span>=&gt;<span class="string">'submit'</span>,</span><br><span class="line">            <span class="string">'label'</span>=&gt;<span class="string">'Login'</span>,</span><br><span class="line">        ),</span><br><span class="line">    ),</span><br><span class="line">);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>view:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;Login&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class="form"&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $form; <span class="meta">?&gt;</span></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>#使用数据库</p><p>##数据访问对象(DAO)</p><p>建立数据库连接:</p><ul><li>使用 <code>CDbConnection</code>:</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$connection=<span class="keyword">new</span> CDbConnection($dsn,$username,$password);</span><br><span class="line"><span class="comment">// 建立连接。你可以使用  try...catch 捕获可能抛出的异常</span></span><br><span class="line">$connection-&gt;active=<span class="keyword">true</span>;</span><br><span class="line">......</span><br><span class="line">$connection-&gt;active=<span class="keyword">false</span>;  <span class="comment">// 关闭连接</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>作为应用组件配置, 然后使用 <code>Yii::app()-&gt;db</code> 访问</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">array</span>(</span><br><span class="line">    ......</span><br><span class="line">    <span class="string">'components'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">        ......</span><br><span class="line">        <span class="string">'db'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'class'</span>=&gt;<span class="string">'CDbConnection'</span>,</span><br><span class="line">            <span class="string">'connectionString'</span>=&gt;<span class="string">'mysql:host=localhost;dbname=testdb'</span>,</span><br><span class="line">            <span class="string">'username'</span>=&gt;<span class="string">'root'</span>,</span><br><span class="line">            <span class="string">'password'</span>=&gt;<span class="string">'password'</span>,</span><br><span class="line">            <span class="string">'emulatePrepare'</span>=&gt;<span class="keyword">true</span>,  <span class="comment">// needed by some MySQL installations</span></span><br><span class="line">        ),</span><br><span class="line">    ),</span><br><span class="line">)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>##执行 SQL 语句</p><ol><li><p>创建 <code>CDbCommand</code> 实例</p> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$connection=Yii::app()-&gt;db;   <span class="comment">// 假设你已经建立了一个 "db" 连接</span></span><br><span class="line"><span class="comment">// 如果没有，你可能需要显式建立一个连接：</span></span><br><span class="line"><span class="comment">// $connection=new CDbConnection($dsn,$username,$password);</span></span><br><span class="line">$command=$connection-&gt;createCommand($sql);</span><br><span class="line"><span class="comment">// 如果需要，此 SQL 语句可通过如下方式修改：</span></span><br><span class="line"><span class="comment">// $command-&gt;text=$newSQL;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用以下方法执行语句</p> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$rowCount=$command-&gt;execute();   <span class="comment">// 执行无查询 SQL(Insert, delete, update)</span></span><br><span class="line">$dataReader=$command-&gt;query();   <span class="comment">// 执行一个 SQL 查询(select), 返回 CDbDataReader 实例</span></span><br><span class="line">$rows=$command-&gt;queryAll();      <span class="comment">// 查询并返回结果中的所有行</span></span><br><span class="line">$row=$command-&gt;queryRow();       <span class="comment">// 查询并返回结果中的第一行</span></span><br><span class="line">$column=$command-&gt;queryColumn(); <span class="comment">// 查询并返回结果中的第一列</span></span><br><span class="line">$value=$command-&gt;queryScalar();  <span class="comment">// 查询并返回结果中第一行的第一个字段</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>获取查询结果</p> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dataReader=$command-&gt;query();</span><br><span class="line"><span class="comment">// 重复调用 read() 直到它返回 false</span></span><br><span class="line"><span class="keyword">while</span>(($row=$dataReader-&gt;read())!==<span class="keyword">false</span>) &#123; ... &#125;</span><br><span class="line"><span class="comment">// 或使用 foreach 遍历数据中的每一行</span></span><br><span class="line"><span class="keyword">foreach</span>($dataReader <span class="keyword">as</span> $row) &#123; ... &#125;</span><br><span class="line"><span class="comment">// 一次性提取所有行到一个数组</span></span><br><span class="line">$rows=$dataReader-&gt;readAll();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用事务</p> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$transaction=$connection-&gt;beginTransaction();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    $connection-&gt;createCommand($sql1)-&gt;execute();</span><br><span class="line">    $connection-&gt;createCommand($sql2)-&gt;execute();</span><br><span class="line">    <span class="comment">//.... other SQL executions</span></span><br><span class="line">    $transaction-&gt;commit();</span><br><span class="line">&#125; <span class="keyword">catch</span>(<span class="keyword">Exception</span> $e) &#123; <span class="comment">// 如果有一条查询失败，则会抛出异常</span></span><br><span class="line">    $transaction-&gt;rollBack();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用 Prepare Statment</p> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 一条带有两个占位符 ":username" 和 ":email"的 SQL</span></span><br><span class="line">$sql=<span class="string">"INSERT INTO tbl_user (username, email) VALUES(:username,:email)"</span>;</span><br><span class="line">$command=$connection-&gt;createCommand($sql);</span><br><span class="line"><span class="comment">// 用实际的用户名替换占位符 ":username" </span></span><br><span class="line">$command-&gt;bindParam(<span class="string">":username"</span>,$username,PDO::PARAM_STR);</span><br><span class="line"><span class="comment">// 用实际的 Email 替换占位符 ":email" </span></span><br><span class="line">$command-&gt;bindParam(<span class="string">":email"</span>,$email,PDO::PARAM_STR);</span><br><span class="line">$command-&gt;execute();</span><br><span class="line"><span class="comment">// 使用新的参数集插入另一行</span></span><br><span class="line">$command-&gt;bindParam(<span class="string">":username"</span>,$username2,PDO::PARAM_STR);</span><br><span class="line">$command-&gt;bindParam(<span class="string">":email"</span>,$email2,PDO::PARAM_STR);</span><br><span class="line">$command-&gt;execute();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>绑定结果列</p> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$sql=<span class="string">"SELECT username, email FROM tbl_user"</span>;</span><br><span class="line">$dataReader=$connection-&gt;createCommand($sql)-&gt;query();</span><br><span class="line"><span class="comment">// 使用 $username 变量绑定第一列 (username) </span></span><br><span class="line">$dataReader-&gt;bindColumn(<span class="number">1</span>,$username);</span><br><span class="line"><span class="comment">// 使用 $email 变量绑定第二列 (email) </span></span><br><span class="line">$dataReader-&gt;bindColumn(<span class="number">2</span>,$email);</span><br><span class="line"><span class="keyword">while</span>($dataReader-&gt;read()!==<span class="keyword">false</span>) &#123;</span><br><span class="line">    <span class="comment">// $username 和 $email 含有当前行中的 username 和 email </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用表前缀</p><p> 配置 <code>CDbConnection::tablePrefix</code> 属性为所希望的表前缀, 然后便可以在 SQL 语句中使用 <code></code> 代表表的名字</p></li></ol><p>##查询构建器</p><p>查询构建器构建于一个 <code>CDbCommand</code> 实例上</p><p>查询构建器不能用于修改一个已经存在的 SQL 查询</p><p>可用的查询构建器示例:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 1. 数据查询</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// SELECT *</span></span><br><span class="line">select()</span><br><span class="line"><span class="comment">// SELECT `id`, `username`</span></span><br><span class="line">select(<span class="string">'id, username'</span>)</span><br><span class="line"><span class="comment">// SELECT `tbl_user`.`id`, `username` AS `name`</span></span><br><span class="line">select(<span class="string">'tbl_user.id, username as name'</span>)</span><br><span class="line"><span class="comment">// SELECT `id`, `username`</span></span><br><span class="line">select(<span class="keyword">array</span>(<span class="string">'id'</span>, <span class="string">'username'</span>))</span><br><span class="line"><span class="comment">// SELECT `id`, count(*) as num</span></span><br><span class="line">select(<span class="keyword">array</span>(<span class="string">'id'</span>, <span class="string">'count(*) as num'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// SELECT DISTINCT `id`, `username`</span></span><br><span class="line">selectDistinct(<span class="string">'id, username'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// FROM `tbl_user`</span></span><br><span class="line">from(<span class="string">'tbl_user'</span>)</span><br><span class="line"><span class="comment">// FROM `tbl_user` `u`, `public`.`tbl_profile` `p`</span></span><br><span class="line">from(<span class="string">'tbl_user u, public.tbl_profile p'</span>)</span><br><span class="line"><span class="comment">// FROM `tbl_user`, `tbl_profile`</span></span><br><span class="line">from(<span class="keyword">array</span>(<span class="string">'tbl_user'</span>, <span class="string">'tbl_profile'</span>))</span><br><span class="line"><span class="comment">// FROM `tbl_user`, (select * from tbl_profile) p</span></span><br><span class="line">from(<span class="keyword">array</span>(<span class="string">'tbl_user'</span>, <span class="string">'(select * from tbl_profile) p'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// WHERE id=1 or id=2</span></span><br><span class="line">where(<span class="string">'id=1 or id=2'</span>)</span><br><span class="line"><span class="comment">// WHERE id=:id1 or id=:id2</span></span><br><span class="line">where(<span class="string">'id=:id1 or id=:id2'</span>, <span class="keyword">array</span>(<span class="string">':id1'</span>=&gt;<span class="number">1</span>, <span class="string">':id2'</span>=&gt;<span class="number">2</span>))</span><br><span class="line"><span class="comment">// WHERE id=1 OR id=2</span></span><br><span class="line">where(<span class="keyword">array</span>(<span class="string">'or'</span>, <span class="string">'id=1'</span>, <span class="string">'id=2'</span>))</span><br><span class="line"><span class="comment">// WHERE id=1 AND (type=2 OR type=3)</span></span><br><span class="line">where(<span class="keyword">array</span>(<span class="string">'and'</span>, <span class="string">'id=1'</span>, <span class="keyword">array</span>(<span class="string">'or'</span>, <span class="string">'type=2'</span>, <span class="string">'type=3'</span>)))</span><br><span class="line"><span class="comment">// WHERE `id` IN (1, 2)</span></span><br><span class="line">where(<span class="keyword">array</span>(<span class="string">'in'</span>, <span class="string">'id'</span>, <span class="keyword">array</span>(<span class="number">1</span>, <span class="number">2</span>))</span><br><span class="line"><span class="comment">// WHERE `id` NOT IN (1, 2)</span></span><br><span class="line">where(<span class="keyword">array</span>(<span class="string">'not in'</span>, <span class="string">'id'</span>, <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>)))</span><br><span class="line"><span class="comment">// when using LIKE, remember to escape user inputed `%` and `_`</span></span><br><span class="line"><span class="comment">// WHERE `name` LIKE '%Qiang%'</span></span><br><span class="line">where(<span class="keyword">array</span>(<span class="string">'like'</span>, <span class="string">'name'</span>, <span class="string">'%Qiang%'</span>))</span><br><span class="line"><span class="comment">// WHERE `name` LIKE '%Qiang' AND `name` LIKE '%Xue'</span></span><br><span class="line">where(<span class="keyword">array</span>(<span class="string">'like'</span>, <span class="string">'name'</span>, <span class="keyword">array</span>(<span class="string">'%Qiang'</span>, <span class="string">'%Xue'</span>)))</span><br><span class="line"><span class="comment">// WHERE `name` LIKE '%Qiang' OR `name` LIKE '%Xue'</span></span><br><span class="line">where(<span class="keyword">array</span>(<span class="string">'or like'</span>, <span class="string">'name'</span>, <span class="keyword">array</span>(<span class="string">'%Qiang'</span>, <span class="string">'%Xue'</span>)))</span><br><span class="line"><span class="comment">// WHERE `name` NOT LIKE '%Qiang%'</span></span><br><span class="line">where(<span class="keyword">array</span>(<span class="string">'not like'</span>, <span class="string">'name'</span>, <span class="string">'%Qiang%'</span>))</span><br><span class="line"><span class="comment">// WHERE `name` NOT LIKE '%Qiang%' OR `name` NOT LIKE '%Xue%'</span></span><br><span class="line">where(<span class="keyword">array</span>(<span class="string">'or not like'</span>, <span class="string">'name'</span>, <span class="keyword">array</span>(<span class="string">'%Qiang%'</span>, <span class="string">'%Xue%'</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment">// WHERE ... OR ...</span></span><br><span class="line">orWhere()</span><br><span class="line"></span><br><span class="line"><span class="comment">// WHERE ... AND ...</span></span><br><span class="line">andWhere()</span><br><span class="line"></span><br><span class="line"><span class="comment">// ORDER BY `name`, `id` DESC</span></span><br><span class="line">order(<span class="string">'name, id desc'</span>)</span><br><span class="line"><span class="comment">// ORDER BY `tbl_profile`.`name`, `id` DESC</span></span><br><span class="line">order(<span class="keyword">array</span>(<span class="string">'tbl_profile.name'</span>, <span class="string">'id desc'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// LIMIT 10</span></span><br><span class="line">limit(<span class="number">10</span>)</span><br><span class="line"><span class="comment">// LIMIT 10 OFFSET 20</span></span><br><span class="line">limit(<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// OFFSET 20</span></span><br><span class="line">offset(<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// JOIN `tbl_profile` ON user_id=id</span></span><br><span class="line">join(<span class="string">'tbl_profile'</span>, <span class="string">'user_id=id'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// LEFT JOIN `pub`.`tbl_profile` `p` ON p.user_id=id AND type=1</span></span><br><span class="line">leftJoin(<span class="string">'pub.tbl_profile p'</span>, <span class="string">'p.user_id=id AND type=:type'</span>, <span class="keyword">array</span>(<span class="string">':type'</span>=&gt;<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// RIGHT JOIN</span></span><br><span class="line">rightJoin()</span><br><span class="line"></span><br><span class="line"><span class="comment">// CROSS JOIN</span></span><br><span class="line">crossJoin()</span><br><span class="line"></span><br><span class="line"><span class="comment">// NATURAL JOIN</span></span><br><span class="line">natrualJoin()</span><br><span class="line"></span><br><span class="line"><span class="comment">// GROUP BY `name`, `id`</span></span><br><span class="line">group(<span class="string">'name, id'</span>)</span><br><span class="line"><span class="comment">// GROUP BY `tbl_profile`.`name`, `id`</span></span><br><span class="line">group(<span class="keyword">array</span>(<span class="string">'tbl_profile.name'</span>, <span class="string">'id'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// HAVING id=1 or id=2</span></span><br><span class="line">having(<span class="string">'id=1 or id=2'</span>)</span><br><span class="line"><span class="comment">// HAVING id=1 OR id=2</span></span><br><span class="line">having(<span class="keyword">array</span>(<span class="string">'or'</span>, <span class="string">'id=1'</span>, <span class="string">'id=2'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// UNION (select * from tbl_profile)</span></span><br><span class="line">union(<span class="string">'select * from tbl_profile'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 数据操作(不同于数据查询, 数据操作会立即执行)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// INSERT INTO `tbl_user` (`name`, `email`) VALUES (:name, :email)</span></span><br><span class="line">$command-&gt;insert(<span class="string">'tbl_user'</span>, <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'name'</span>=&gt;<span class="string">'Tester'</span>,</span><br><span class="line">    <span class="string">'email'</span>=&gt;<span class="string">'tester@example.com'</span>,</span><br><span class="line">));</span><br><span class="line"></span><br><span class="line"><span class="comment">// UPDATE `tbl_user` SET `name`=:name WHERE id=:id</span></span><br><span class="line">$command-&gt;update(<span class="string">'tbl_user'</span>, <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'name'</span>=&gt;<span class="string">'Tester'</span>,</span><br><span class="line">), <span class="string">'id=:id'</span>, <span class="keyword">array</span>(<span class="string">':id'</span>=&gt;<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// DELETE FROM `tbl_user` WHERE id=:id</span></span><br><span class="line">$command-&gt;delete(<span class="string">'tbl_user'</span>, <span class="string">'id=:id'</span>, <span class="keyword">array</span>(<span class="string">':id'</span>=&gt;<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. Schema 操作</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// CREATE TABLE `tbl_user` (</span></span><br><span class="line"><span class="comment">//     `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,</span></span><br><span class="line"><span class="comment">//     `username` varchar(255) NOT NULL,</span></span><br><span class="line"><span class="comment">//     `location` point</span></span><br><span class="line"><span class="comment">// ) ENGINE=InnoDB</span></span><br><span class="line">createTable(<span class="string">'tbl_user'</span>, <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'id'</span> =&gt; <span class="string">'pk'</span>,</span><br><span class="line">    <span class="string">'username'</span> =&gt; <span class="string">'string NOT NULL'</span>,</span><br><span class="line">    <span class="string">'location'</span> =&gt; <span class="string">'point'</span>,</span><br><span class="line">), <span class="string">'ENGINE=InnoDB'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// RENAME TABLE `tbl_users` TO `tbl_user`</span></span><br><span class="line">renameTable(<span class="string">'tbl_users'</span>, <span class="string">'tbl_user'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// DROP TABLE `tbl_user`</span></span><br><span class="line">dropTable(<span class="string">'tbl_user'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// TRUNCATE TABLE `tbl_user`</span></span><br><span class="line">truncateTable(<span class="string">'tbl_user'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ALTER TABLE `tbl_user` ADD `email` varchar(255) NOT NULL</span></span><br><span class="line">addColumn(<span class="string">'tbl_user'</span>, <span class="string">'email'</span>, <span class="string">'string NOT NULL'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ALTER TABLE `tbl_user` DROP COLUMN `location`</span></span><br><span class="line">dropColumn(<span class="string">'tbl_user'</span>, <span class="string">'location'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ALTER TABLE `tbl_users` CHANGE `name` `username` varchar(255) NOT NULL</span></span><br><span class="line">renameColumn(<span class="string">'tbl_user'</span>, <span class="string">'name'</span>, <span class="string">'username'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ALTER TABLE `tbl_user` CHANGE `username` `username` varchar(255) NOT NULL</span></span><br><span class="line">alterColumn(<span class="string">'tbl_user'</span>, <span class="string">'username'</span>, <span class="string">'string NOT NULL'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ALTER TABLE `tbl_profile` ADD CONSTRAINT `fk_profile_user_id`</span></span><br><span class="line"><span class="comment">// FOREIGN KEY (`user_id`) REFERENCES `tbl_user` (`id`)</span></span><br><span class="line"><span class="comment">// ON DELETE CASCADE ON UPDATE CASCADE</span></span><br><span class="line">addForeignKey(<span class="string">'fk_profile_user_id'</span>, <span class="string">'tbl_profile'</span>, <span class="string">'user_id'</span>,</span><br><span class="line">    <span class="string">'tbl_user'</span>, <span class="string">'id'</span>, <span class="string">'CASCADE'</span>, <span class="string">'CASCADE'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ALTER TABLE `tbl_profile` DROP FOREIGN KEY `fk_profile_user_id`</span></span><br><span class="line">dropForeignKey(<span class="string">'fk_profile_user_id'</span>, <span class="string">'tbl_profile'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// CREATE INDEX `idx_username` ON `tbl_user` (`username`)</span></span><br><span class="line">createIndex(<span class="string">'idx_username'</span>, <span class="string">'tbl_user'</span>, <span class="string">'username'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// DROP INDEX `idx_username` ON `tbl_user`</span></span><br><span class="line">dropIndex(<span class="string">'idx_username'</span>, <span class="string">'tbl_user'</span>)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>也可通过使用属性赋值方式:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$command-&gt;select = <span class="keyword">array</span>(<span class="string">'id'</span>, <span class="string">'username'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>或在创建 <code>CDbCommand</code> 是传配置参数的方式构建:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$row = Yii::app()-&gt;db-&gt;createCommand(<span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'select'</span> =&gt; <span class="keyword">array</span>(<span class="string">'id'</span>, <span class="string">'username'</span>),</span><br><span class="line">    <span class="string">'from'</span> =&gt; <span class="string">'tbl_user'</span>,</span><br><span class="line">    <span class="string">'where'</span> =&gt; <span class="string">'id=:id'</span>,</span><br><span class="line">    <span class="string">'params'</span> =&gt; <span class="keyword">array</span>(<span class="string">':id'</span>=&gt;<span class="number">1</span>),</span><br><span class="line">))-&gt;queryRow();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构建完成后, 可以使用在<a href="#runSql">执行 SQL 语句</a>中讲到的方法执行之; 也可使用 <code>CDbCommand::getText()</code> 获取最后构建完工后的 SQL 语句, 绑定的参数被保存在 <code>CDbCommand::params</code> 中</p><p>同一个 <code>CDbCommand</code> 实例可用于多次构建不同的查询, 但是记得要再另一次之前调用 <code>CDbCommand::reset()</code> 以清理上次的查询</p><p>##<a name="ActiveRecord">Active Record</a></p><p>每个 AR 类代表一个数据表(或视图), 数据表(或视图)的列在 AR 类中体现为类的属性, 一个 AR 实例则表示表中的一行</p><p>最佳应用是模型化数据表为 PHP 结构和执行不包含复杂 SQL 语句的查询. 对于复杂查询的场景, 应使用 Yii DAO</p><p>如果你数据库的表结构很少改动, 你应该通过配置 <code>CDbConnection::schemaCachingDuration</code> 属性的值为一个大于零的值开启表结构缓存</p><p>通过 AR 使用多个数据库有两种方式. 如果数据库的结构不同, 你可以创建不同的 AR 基类实现不同的 <code>getDbConnection()</code>; 否则, 动态改变静态变量 <code>CActiveRecord::db</code> 是一个好主意</p><p>由于 AR 类经常在多处被引用, 我们可以导入包含 AR 类的整个目录, 而不是一个个导入. 见<a href="#">路径别名和命名空间</a></p><p>通过 Yii 的日志功能, 可以查看 AR 在背后到底执行了那些语句</p><p>定义 AR 类:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Post</span> <span class="keyword">extends</span> <span class="title">CActiveRecord</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">model</span><span class="params">($className=__CLASS__)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">parent</span>::model($className);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认情况下, AR 类的名字和数据表的名字相同. 如果不同, 请覆盖 `CActiveRecord::tableName` 方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">tableName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'tbl_post'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * AR 依靠表中良好定义的主键. 如果一个表没有主键，则必须在相应的 AR 类中通过如下方式覆盖 primaryKey() 方法指定哪一列或哪几列作为主键:</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">primaryKey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'id'</span>;</span><br><span class="line">        <span class="comment">// 对于复合主键，要返回一个类似如下的数组</span></span><br><span class="line">        <span class="comment">// return array('pk1', 'pk2');</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>创建记录:</p><ul><li>如果表的主键是自增的, 在插入完成后, AR 实例将包含一个更新的主键</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$post=<span class="keyword">new</span> Post;</span><br><span class="line">$post-&gt;title=<span class="string">'sample post'</span>;</span><br><span class="line">$post-&gt;content=<span class="string">'content for the sample post'</span>;</span><br><span class="line"><span class="comment">// 如果要使用 Mysql 的 NOW(), 必须使用 CDbExpression, 单纯的 'NOW()' 将会被作为字符串对待</span></span><br><span class="line">$post-&gt;create_time=<span class="keyword">new</span> CDbExpression(<span class="string">'NOW()'</span>);</span><br><span class="line">$post-&gt;save();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>读取记录:</p><ul><li><code>find</code> 系列返回一个 AR 实例, 或者 <code>null</code></li><li><code>findAll</code> 系列返回 AR 实例数组, 或者空数组</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 1. 常规</span></span><br><span class="line"><span class="comment">// 查找满足指定条件的结果中的第一行</span></span><br><span class="line">$post=Post::model()-&gt;find($condition,$params);</span><br><span class="line">$post=Post::model()-&gt;find(<span class="string">'postID=:postID'</span>, <span class="keyword">array</span>(<span class="string">':postID'</span>=&gt;<span class="number">10</span>));</span><br><span class="line"><span class="comment">// 查找具有指定主键值的那一行</span></span><br><span class="line">$post=Post::model()-&gt;findByPk($postID,$condition,$params);</span><br><span class="line"><span class="comment">// 查找具有指定属性值的行</span></span><br><span class="line">$post=Post::model()-&gt;findByAttributes($attributes,$condition,$params);</span><br><span class="line"><span class="comment">// 通过指定的 SQL 语句查找结果中的第一行</span></span><br><span class="line">$post=Post::model()-&gt;findBySql($sql,$params);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找满足指定条件的所有行</span></span><br><span class="line">$posts=Post::model()-&gt;findAll($condition,$params);</span><br><span class="line"><span class="comment">// 查找带有指定主键的所有行</span></span><br><span class="line">$posts=Post::model()-&gt;findAllByPk($postIDs,$condition,$params);</span><br><span class="line"><span class="comment">// 查找带有指定属性值的所有行</span></span><br><span class="line">$posts=Post::model()-&gt;findAllByAttributes($attributes,$condition,$params);</span><br><span class="line"><span class="comment">// 通过指定的SQL语句查找所有行</span></span><br><span class="line">$posts=Post::model()-&gt;findAllBySql($sql,$params);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取满足指定条件的行数</span></span><br><span class="line">$n=Post::model()-&gt;count($condition,$params);</span><br><span class="line"><span class="comment">// 通过指定的 SQL 获取结果行数</span></span><br><span class="line">$n=Post::model()-&gt;countBySql($sql,$params);</span><br><span class="line"><span class="comment">// 检查是否至少有一行复合指定的条件</span></span><br><span class="line">$exists=Post::model()-&gt;exists($condition,$params);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 使用 `CDbCriteria`</span></span><br><span class="line">$criteria=<span class="keyword">new</span> CDbCriteria;</span><br><span class="line">$criteria-&gt;select=<span class="string">'title'</span>;  <span class="comment">// 只选择 'title' 列</span></span><br><span class="line">$criteria-&gt;condition=<span class="string">'postID=:postID'</span>;</span><br><span class="line">$criteria-&gt;params=<span class="keyword">array</span>(<span class="string">':postID'</span>=&gt;<span class="number">10</span>);</span><br><span class="line">$post=Post::model()-&gt;find($criteria); <span class="comment">// $params 不需要了</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 传递数组</span></span><br><span class="line">$post=Post::model()-&gt;find(<span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'select'</span>=&gt;<span class="string">'title'</span>,</span><br><span class="line">    <span class="string">'condition'</span>=&gt;<span class="string">'postID=:postID'</span>,</span><br><span class="line">    <span class="string">'params'</span>=&gt;<span class="keyword">array</span>(<span class="string">':postID'</span>=&gt;<span class="number">10</span>),</span><br><span class="line">));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>更新记录:</p><ul><li><p>如果一个 AR 实例是使用 new 操作符创建的, 调用 <code>CActiveRecord::save</code> 将会向数据表中插入一行新数据; 如果 AR 实例是某个 find 或 findAll 方法的结果, 调用 <code>CActiveRecord::save</code> 将更新表中现有的行. 实际上, 我们是使用 <code>CActiveRecord::isNewRecord</code> 说明一个 AR 实例是不是新的</p></li><li><p>直接更新数据表中的一行或多行而不首先载入也是可行的:</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 更新符合指定条件的行</span></span><br><span class="line">Post::model()-&gt;updateAll($attributes,$condition,$params);</span><br><span class="line"><span class="comment">// 更新符合指定条件和主键的行</span></span><br><span class="line">Post::model()-&gt;updateByPk($pk,$attributes,$condition,$params);</span><br><span class="line"><span class="comment">// 更新满足指定条件的行的计数列</span></span><br><span class="line">Post::model()-&gt;updateCounters($counters,$condition,$params);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>删除记录:</p><ul><li>实例化后删除: 这样删除之后, AR 实例仍不改变</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$post=Post::model()-&gt;findByPk(<span class="number">10</span>); <span class="comment">// 假设有一个帖子，其 ID 为 10</span></span><br><span class="line">$post-&gt;delete(); <span class="comment">// 从数据表中删除此行</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>不实例化直接删除</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 删除符合指定条件的行</span></span><br><span class="line">Post::model()-&gt;deleteAll($condition,$params);</span><br><span class="line"><span class="comment">// 删除符合指定条件和主键的行</span></span><br><span class="line">Post::model()-&gt;deleteByPk($pk,$condition,$params);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果要确定两个 AR 是否是同一个记录, 只需对比它们的主键值, 或直接调用 <code>CActiveRecord::equals()</code></p><p>通过以下几个占位符方法, 可以自定义 AR 的工作流:</p><table><thead><tr><th>占位符方法</th><th>含义</th></tr></thead><tbody><tr><td>beforeValidate, afterValidate</td><td>在验证之前(后)执行</td></tr><tr><td>beforeSave, afterSave</td><td>在保存 AR 实例之前(后)执行</td></tr><tr><td>beforeFind, afterFind</td><td>在执行查询之前(后)执行</td></tr><tr><td>afterConstruct</td><td>在 AR 实例化之后执行</td></tr></tbody></table><p>数据验证和块赋值参见<a href="#triggerValidation">触发验证</a>和<a href="#massiveAssign">块赋值</a></p><p>事务处理, 参见<a href="#">使用事务</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$model=Post::model();</span><br><span class="line">$transaction=$model-&gt;dbConnection-&gt;beginTransaction();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 查找和保存是可能由另一个请求干预的两个步骤</span></span><br><span class="line">    <span class="comment">// 这样我们使用一个事务以确保其一致性和完整性</span></span><br><span class="line">    $post=$model-&gt;findByPk(<span class="number">10</span>);</span><br><span class="line">    $post-&gt;title=<span class="string">'new post title'</span>;</span><br><span class="line">    $post-&gt;save();</span><br><span class="line">    $transaction-&gt;commit();</span><br><span class="line">&#125; <span class="keyword">catch</span>(<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">    $transaction-&gt;rollBack();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>命名范围: 即查询时的过滤器</p><ul><li>定义</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Post</span> <span class="keyword">extends</span> <span class="title">CActiveRecord</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认命名范围, 隐式应用于所有关于此模型的 SELECT 查询</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">defaultScope</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'condition'</span>=&gt;<span class="string">"language='"</span>.Yii::app()-&gt;language.<span class="string">"'"</span>,</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 这里定义的命名范围可以被显式应用于 SELECT,UPDATE,CREATE,DELETE 操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;[type]&#125; [description]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">scopes</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'published'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                <span class="string">'condition'</span>=&gt;<span class="string">'status=1'</span>,</span><br><span class="line">            ),</span><br><span class="line">            <span class="string">'recently'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                <span class="string">'order'</span>=&gt;<span class="string">'create_time DESC'</span>,</span><br><span class="line">                <span class="string">'limit'</span>=&gt;<span class="number">5</span>,</span><br><span class="line">            ),</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>使用</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$posts=Post::model()-&gt;published()-&gt;recently()-&gt;findAll();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>##关系型 Active Record</p><p>为了使用关系型 AR, 建议在关联的表中定义主键-外键约束</p><p>关系包括: <code>BELONGS_TO</code>, <code>HAS_MANY</code>, <code>HAS_ONE</code>, <code>MANY_MANY</code>, <code>STAT</code></p><p>使用 <code>STAT</code> 关系已获取统计数据</p><p>适当使用 <code>together</code> 查询选项, 会加快查询速度</p><p>在 AR 查询中, 基础表的别名为 <code>t</code>, 其他关联表的别名和关系的名称一样</p><p>声明关系</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Post</span> <span class="keyword">extends</span> <span class="title">CActiveRecord</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">relations</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'author'</span>=&gt;<span class="keyword">array</span>(<span class="keyword">self</span>::BELONGS_TO, <span class="string">'User'</span>, <span class="string">'author_id'</span>),</span><br><span class="line">            <span class="string">'categories'</span>=&gt;<span class="keyword">array</span>(<span class="keyword">self</span>::MANY_MANY, <span class="string">'Category'</span>,</span><br><span class="line">                <span class="string">'tbl_post_category(post_id, category_id)'</span>),</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">CActiveRecord</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">relations</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'posts'</span>=&gt;<span class="keyword">array</span>(<span class="keyword">self</span>::HAS_MANY, <span class="string">'Post'</span>, <span class="string">'author_id'</span>),</span><br><span class="line">            <span class="string">'profile'</span>=&gt;<span class="keyword">array</span>(<span class="keyword">self</span>::HAS_ONE, <span class="string">'Profile'</span>, <span class="string">'owner_id'</span>),</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用额外的选项</span></span><br><span class="line"><span class="comment">// 可用选项包括: select, condition, params, on, order, with, joinType, alias, together, join, group, having, index</span></span><br><span class="line"><span class="comment">// 当使用 `STAT` 关系时, 可用的选项包括: select, defaultValue, condition, params, order, group, having</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">CActiveRecord</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">relations</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'posts'</span>=&gt;<span class="keyword">array</span>(<span class="keyword">self</span>::HAS_MANY, <span class="string">'Post'</span>, <span class="string">'author_id'</span>,</span><br><span class="line">                            <span class="string">'order'</span>=&gt;<span class="string">'posts.create_time DESC'</span>,</span><br><span class="line">                            <span class="string">'with'</span>=&gt;<span class="string">'categories'</span>),</span><br><span class="line">            <span class="string">'profile'</span>=&gt;<span class="keyword">array</span>(<span class="keyword">self</span>::HAS_ONE, <span class="string">'Profile'</span>, <span class="string">'owner_id'</span>),</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行关联查询</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 1. 懒惰式加载: </span></span><br><span class="line"><span class="comment">// 获取 ID 为 10 的帖子</span></span><br><span class="line">$post=Post::model()-&gt;findByPk(<span class="number">10</span>);</span><br><span class="line"><span class="comment">// 获取帖子的作者(author): 此处将执行一个关联查询。</span></span><br><span class="line">$author=$post-&gt;author;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 渴求式加载(比懒惰式高效)</span></span><br><span class="line"><span class="comment">// 2.1 常规方式</span></span><br><span class="line"><span class="comment">// 获取 post 及其作者和分类</span></span><br><span class="line">$posts=Post::model()-&gt;with(<span class="string">'author'</span>)-&gt;findAll();</span><br><span class="line"><span class="comment">// 获取 post 及其作者和分类, 以及作者简介(author.profile) 和帖子(author.posts)</span></span><br><span class="line">$posts=Post::model()-&gt;with(</span><br><span class="line">    <span class="string">'author.profile'</span>,</span><br><span class="line">    <span class="string">'author.posts'</span>,</span><br><span class="line">    <span class="string">'categories'</span>)-&gt;findAll();</span><br><span class="line"><span class="comment">// 2.2 指定 `CDbCeteria::with` 属性</span></span><br><span class="line">$criteria=<span class="keyword">new</span> CDbCriteria;</span><br><span class="line">$criteria-&gt;with=<span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'author.profile'</span>,</span><br><span class="line">    <span class="string">'author.posts'</span>,</span><br><span class="line">    <span class="string">'categories'</span>,</span><br><span class="line">);</span><br><span class="line">$posts=Post::model()-&gt;findAll($criteria);</span><br><span class="line"><span class="comment">// 2.3 配置数组</span></span><br><span class="line">$posts=Post::model()-&gt;findAll(<span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'with'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'author.profile'</span>,</span><br><span class="line">        <span class="string">'author.posts'</span>,</span><br><span class="line">        <span class="string">'categories'</span>,</span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 动态</span></span><br><span class="line"><span class="comment">// 3.1</span></span><br><span class="line">User::model()-&gt;with(<span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'posts'</span>=&gt;<span class="keyword">array</span>(<span class="string">'order'</span>=&gt;<span class="string">'posts.create_time ASC'</span>),</span><br><span class="line">    <span class="string">'profile'</span>,</span><br><span class="line">))-&gt;findAll();</span><br><span class="line"><span class="comment">// 3.2</span></span><br><span class="line">$user=User::model()-&gt;findByPk(<span class="number">1</span>);</span><br><span class="line">$posts=$user-&gt;posts(<span class="keyword">array</span>(<span class="string">'condition'</span>=&gt;<span class="string">'status=1'</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果关系中没有相关的实例，则相应的属性将为 null(BELONGS_TO, HAS_ONE) 或一个空数组(HAS_MANY, MANY_MANY)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用命名空间</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 1.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">CActiveRecord</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">relations</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'posts'</span>=&gt;<span class="keyword">array</span>(<span class="keyword">self</span>::HAS_MANY, <span class="string">'Post'</span>, <span class="string">'author_id'</span>,</span><br><span class="line">                <span class="string">'with'</span>=&gt;<span class="string">'comments:approved'</span>),</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 2.</span></span><br><span class="line">$posts=Post::model()-&gt;published()-&gt;recently()-&gt;with(<span class="string">'comments'</span>)-&gt;findAll();</span><br><span class="line"><span class="comment">// 3.</span></span><br><span class="line">$posts=Post::model()-&gt;published()-&gt;recently()-&gt;with(<span class="string">'comments'</span>)-&gt;findAll();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>##数据库迁移 @todo</p><p>#专题</p><p>##验证</p><p>验证即核查一个人是否真实他声称的那个人(用户名, 密码); 授权即检查是否有权操作特定的资源</p><p>定义身份类:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserIdentity</span> <span class="keyword">extends</span> <span class="title">CUserIdentity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $_id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 这是身份类的主要工作, 实现验证</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">authenticate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 使用 User AR 获取数据</span></span><br><span class="line">        $record=User::model()-&gt;findByAttributes(<span class="keyword">array</span>(<span class="string">'username'</span>=&gt;<span class="keyword">$this</span>-&gt;username));</span><br><span class="line">        <span class="keyword">if</span>($record===<span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;errorCode=<span class="keyword">self</span>::ERROR_USERNAME_INVALID;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> &#123;</span><br><span class="line">            ($record-&gt;password!==md5(<span class="keyword">$this</span>-&gt;password))</span><br><span class="line">            <span class="keyword">$this</span>-&gt;errorCode=<span class="keyword">self</span>::ERROR_PASSWORD_INVALID;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_id=$record-&gt;id;</span><br><span class="line">            <span class="comment">// 使用 setState 把 title 信息存储为状态传递给 CWebUser</span></span><br><span class="line">            <span class="comment">// 之后便可以使用 Yii::app()-&gt;user-&gt;title 访问</span></span><br><span class="line">            <span class="comment">// CWebUser 默认会存储状态信息到 session, 但如果 CWebUser::allowAutoLogin 为 true, 则会存到 cookie, 切勿将敏感信息存入 cookie</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;setState(<span class="string">'title'</span>, $record-&gt;title);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;errorCode=<span class="keyword">self</span>::ERROR_NONE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> !<span class="keyword">$this</span>-&gt;errorCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重写 getId, 默认的实现是直接返回用户名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>登录和注销:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 1. 使用提供的用户名和密码登录用户</span></span><br><span class="line">$identity=<span class="keyword">new</span> UserIdentity($username,$password);</span><br><span class="line"><span class="keyword">if</span>($identity-&gt;authenticate()) &#123;</span><br><span class="line">    <span class="comment">// 将用户身份信息存入持久存储(默认为 Session)</span></span><br><span class="line">    <span class="comment">// 之后便可以用 `Yii::app-&gt;user-&gt;isGuest` 判断用户是否登录</span></span><br><span class="line">    Yii::app()-&gt;user-&gt;login($identity);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> $identity-&gt;errorMessage;</span><br><span class="line">&#125;</span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注销当前用户</span></span><br><span class="line">Yii::app()-&gt;user-&gt;logout();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 使用 Cookie 登录</span></span><br><span class="line"><span class="comment">// 要确保用户部件的allowAutoLogin被设置为true。</span></span><br><span class="line"><span class="comment">// 保留用户登陆状态时间7天</span></span><br><span class="line">Yii::app()-&gt;user-&gt;login($identity,<span class="number">3600</span>*<span class="number">24</span>*<span class="number">7</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果使用 cookie 登录, 要确保不要保存敏感信息到 State, 而是保存到持久存储(数据库) 上, 最好(参见<a href="#security">安全</a>):</p><ul><li>当用户成功登录时, 保存同一个随机串到 cookie State 和数据库</li><li>在之后的的自动 cookie 登录时, 对比 cookie 中和数据库中的随机串是否一致</li><li>如果用户通过登录表单登录, 刷新这个随机串</li></ul><p>##授权</p><p>访问控制过滤器的定义参见<a href="#filter">过滤器</a></p><p>过滤器定义之后, 还要通过重载 <code>CController::accessRules</code> 指定具体授权规则</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PostController</span> <span class="keyword">extends</span> <span class="title">CController</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置数组的值可为</span></span><br><span class="line"><span class="comment">     * 第一项: `deny` 或者 `allow`</span></span><br><span class="line"><span class="comment">     * actions: action 名字</span></span><br><span class="line"><span class="comment">     * users: *: 任何用户, ?: 匿名用户, @: 验证通过的用户 </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">accessRules</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">            <span class="keyword">array</span>(<span class="string">'deny'</span>,</span><br><span class="line">                <span class="string">'actions'</span>=&gt;<span class="keyword">array</span>(<span class="string">'create'</span>, <span class="string">'edit'</span>),</span><br><span class="line">                <span class="string">'users'</span>=&gt;<span class="keyword">array</span>(<span class="string">'?'</span>),</span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">array</span>(<span class="string">'allow'</span>,</span><br><span class="line">                <span class="string">'actions'</span>=&gt;<span class="keyword">array</span>(<span class="string">'delete'</span>),</span><br><span class="line">                <span class="string">'roles'</span>=&gt;<span class="keyword">array</span>(<span class="string">'admin'</span>),</span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">array</span>(<span class="string">'deny'</span>,</span><br><span class="line">                <span class="string">'actions'</span>=&gt;<span class="keyword">array</span>(<span class="string">'delete'</span>),</span><br><span class="line">                <span class="string">'users'</span>=&gt;<span class="keyword">array</span>(<span class="string">'*'</span>),</span><br><span class="line">            ),</span><br><span class="line">            <span class="comment">// 为了确保某类动作在没允许情况下不被执行</span></span><br><span class="line">            <span class="keyword">array</span>(<span class="string">'deny'</span>,</span><br><span class="line">                    <span class="string">'action'</span>=&gt;<span class="string">'delete'</span>,</span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果授权失败</p><ul><li><p>已经配置 <code>CWebUser::loingUrl</code>, 则重定向到此 URL, 可以这样配置:</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">array</span>(</span><br><span class="line">    ......</span><br><span class="line">    <span class="string">'components'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'user'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">            <span class="comment">// 这实际上是默认值</span></span><br><span class="line">            <span class="string">'loginUrl'</span>=&gt;<span class="keyword">array</span>(<span class="string">'site/login'</span>),</span><br><span class="line">        ),</span><br><span class="line">    ),</span><br><span class="line">)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>否则显示一个 401 HTTP 例外</p></li></ul><p>如果希望在用户登录成功后转到之前页面:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">Yii::app()-&gt;request-&gt;redirect(Yii::app()-&gt;user-&gt;returnUrl);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>##基于角色的访问控制(Role-Based Access Control)</p><p><code>授权项目</code>可分为<code>操作(operations)</code>, <code>任务(tasks)</code> 和<code>角色(roles)</code> 一个角色由若干任务组成, 一个任务由若干操作组成， 而一个操作就是一个<code>许可</code>, 不可再分. Yii 还允许一个角色包含其他角色或操作, 一个任务可以包含其他操作, 一个操作可以包括其他操作. 授权项目是通过它的名字唯一识别的</p><p>一个授权项目可能与一个<code>业务规则</code>关联. 业务规则是一段 PHP 代码, 在进行涉及授权项目的访问检查时将会被执行. 仅在执行返回 <code>true</code> 时, 用户才会被视为拥有此授权项目所代表的权限许可</p><p>Yii 提供了两种授权管理器： <code>CPhpAuthManager</code> 和 <code>CDbAuthManager</code>. 前者将授权数据存储在一个 PHP 脚本文件中而后者存储在数据库中.  配置 <code>CWebApplication::authManager</code> 应用组件时, 我们需要指定使用哪个授权管理器组件类, 以及所选授权管理器组件的初始化属性值:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'components'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'db'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'class'</span>=&gt;<span class="string">'CDbConnection'</span>,</span><br><span class="line">            <span class="string">'connectionString'</span>=&gt;<span class="string">'sqlite:path/to/file.db'</span>,</span><br><span class="line">        ),</span><br><span class="line">        <span class="string">'authManager'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'class'</span>=&gt;<span class="string">'CDbAuthManager'</span>,</span><br><span class="line">            <span class="string">'connectionID'</span>=&gt;<span class="string">'db'</span>,</span><br><span class="line">        ),</span><br><span class="line">    ),</span><br><span class="line">);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后, 我们便可以使用 <code>Yii::app()-&gt;authManager</code> 访问</p><p>定义授权等级体总共分三步</p><ol><li>定义授权项目<ul><li><code>CAuthManager::createRole</code></li><li><code>CAuthManager::createTask</code></li><li><code>CAuthManager::createOperation</code></li></ul></li><li>建立授权项目之间的关系<ul><li><code>CAuthManager::addItemChild</code></li><li><code>CAuthManager::removeItemChild</code></li><li><code>CAuthItem::addChild</code></li><li><code>CAuthItem::removeChild</code></li></ul></li><li>分配角色给用户<ul><li><code>CAuthManager::assign</code></li><li><code>CAuthManager::revoke</code></li></ul></li></ol><p>如:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 并不需要在每个请求中都要运行</span></span><br><span class="line">$auth=Yii::app()-&gt;authManager;</span><br><span class="line"></span><br><span class="line">$auth-&gt;createOperation(<span class="string">'createPost'</span>,<span class="string">'create a post'</span>);</span><br><span class="line">$auth-&gt;createOperation(<span class="string">'readPost'</span>,<span class="string">'read a post'</span>);</span><br><span class="line">$auth-&gt;createOperation(<span class="string">'updatePost'</span>,<span class="string">'update a post'</span>);</span><br><span class="line">$auth-&gt;createOperation(<span class="string">'deletePost'</span>,<span class="string">'delete a post'</span>);</span><br><span class="line"></span><br><span class="line">$bizRule=<span class="string">'return Yii::app()-&gt;user-&gt;id==$params["post"]-&gt;authID;'</span>;</span><br><span class="line">$task=$auth-&gt;createTask(<span class="string">'updateOwnPost'</span>,<span class="string">'update a post by author himself'</span>,$bizRule);</span><br><span class="line">$task-&gt;addChild(<span class="string">'updatePost'</span>);</span><br><span class="line"></span><br><span class="line">$role=$auth-&gt;createRole(<span class="string">'reader'</span>);</span><br><span class="line">$role-&gt;addChild(<span class="string">'readPost'</span>);</span><br><span class="line"></span><br><span class="line">$role=$auth-&gt;createRole(<span class="string">'author'</span>);</span><br><span class="line">$role-&gt;addChild(<span class="string">'reader'</span>);</span><br><span class="line">$role-&gt;addChild(<span class="string">'createPost'</span>);</span><br><span class="line">$role-&gt;addChild(<span class="string">'updateOwnPost'</span>);</span><br><span class="line"></span><br><span class="line">$role=$auth-&gt;createRole(<span class="string">'editor'</span>);</span><br><span class="line">$role-&gt;addChild(<span class="string">'reader'</span>);</span><br><span class="line">$role-&gt;addChild(<span class="string">'updatePost'</span>);</span><br><span class="line"></span><br><span class="line">$role=$auth-&gt;createRole(<span class="string">'admin'</span>);</span><br><span class="line">$role-&gt;addChild(<span class="string">'editor'</span>);</span><br><span class="line">$role-&gt;addChild(<span class="string">'author'</span>);</span><br><span class="line">$role-&gt;addChild(<span class="string">'deletePost'</span>);</span><br><span class="line"></span><br><span class="line">$auth-&gt;assign(<span class="string">'reader'</span>,<span class="string">'readerA'</span>);</span><br><span class="line">$auth-&gt;assign(<span class="string">'author'</span>,<span class="string">'authorB'</span>);</span><br><span class="line">$auth-&gt;assign(<span class="string">'editor'</span>,<span class="string">'editorC'</span>);</span><br><span class="line">$auth-&gt;assign(<span class="string">'admin'</span>,<span class="string">'adminD'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>权限检查:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(Yii::app()-&gt;user-&gt;checkAccess(<span class="string">'createPost'</span>)) &#123;</span><br><span class="line">    <span class="comment">// 创建帖子</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 也可传参</span></span><br><span class="line">$params=<span class="keyword">array</span>(<span class="string">'post'</span>=&gt;$post);</span><br><span class="line"><span class="keyword">if</span>(Yii::app()-&gt;user-&gt;checkAccess(<span class="string">'updateOwnPost'</span>,$params)) &#123;</span><br><span class="line">    <span class="comment">// 更新帖子</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>默认角色就是一个隐式分配给每个用户的角色, 这些用户包括通过身份验证的用户和游客</p><p>配置:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'components'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'authManager'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'class'</span>=&gt;<span class="string">'CDbAuthManager'</span>,</span><br><span class="line">            <span class="string">'defaultRoles'</span>=&gt;<span class="keyword">array</span>(<span class="string">'authenticated'</span>, <span class="string">'guest'</span>),</span><br><span class="line">        ),</span><br><span class="line">    ),</span><br><span class="line">);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>定义:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$bizRule=<span class="string">'return !Yii::app()-&gt;user-&gt;isGuest;'</span>;</span><br><span class="line">$auth-&gt;createRole(<span class="string">'authenticated'</span>, <span class="string">'authenticated user'</span>, $bizRule);</span><br><span class="line"></span><br><span class="line">$bizRule=<span class="string">'return Yii::app()-&gt;user-&gt;isGuest;'</span>;</span><br><span class="line">$auth-&gt;createRole(<span class="string">'guest'</span>, <span class="string">'guest user'</span>, $bizRule);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>##安全</p><ul><li><p>XSS: 跨站脚本攻击</p><p>  定义: 攻击者常常向易受攻击的 web 应用注入 JavaScript, VBScript, ActiveX, HTML 或 Flash 来迷惑访问者以收集访问者的信息</p><p>  防范: 在显示用户输入的内容之前进行检查</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这里将 CHtmlPurifier 作为一个 Widget 来过滤用户输入</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">$this</span>-&gt;beginWidget(<span class="string">'CHtmlPurifier'</span>); <span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//...这里显示用户输入的内容...</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">$this</span>-&gt;endWidget(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>CSRF: 跨站请求伪造</p><p>  定义: 攻击者在用户浏览器在访问恶意网站的时候, 让用户的浏览器向一个受信任的网站发起攻击者指定的请求</p><p>  防范: GET 请求只允许检索数据而不能修改服务器上的任何数据, 而 POST 请求应当含有一些可以被服务器识别的随机数值, 用来保证表单数据的来源和运行结果发送的去向是相同的</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 启用 CsrfValidation 组件</span></span><br><span class="line"><span class="comment">// 该组件会自动在用 CHtml::form 生成的表单中嵌入一个保存随机值的隐藏项, 在表单提交的时候发送到服务器进行验证</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'components'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'request'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'enableCsrfValidation'</span>=&gt;<span class="keyword">true</span>,</span><br><span class="line">        ),</span><br><span class="line">    ),</span><br><span class="line">);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Cookie 攻击</p><p>  定义: session ID 通常存储在  Cookie中, 如果攻击者窃取到了一个有效的 session ID, 他就可以使用这个 session ID 对应的 session 信息</p><p>  防范:</p><ul><li><p>您可以使用 SSL 来产生一个安全通道, 且只通过 HTTPS 连接来传送验证 cookie</p></li><li><p>设置 cookie 的过期时间, 对所有的 cookie 和 session 令牌也这样做</p></li><li><p>防范跨站代码攻击, 因为它可以在用户的浏览器触发任意代码, 这些代码可能会泄露用户的 cookie</p></li><li><p>在 cookie 有变动的时候验证 cookie 的内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 1. 启用 CookieValidation 组件 </span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'components'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'request'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'enableCookieValidation'</span>=&gt;<span class="keyword">true</span>,</span><br><span class="line">        ),</span><br><span class="line">    ),</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 然后只使用 CHttpRequest::cookies 进行 cookie 操作(而不是 $_COOKIES)</span></span><br><span class="line"><span class="comment">// 检索一个名为$name的cookie值</span></span><br><span class="line">$cookie=Yii::app()-&gt;request-&gt;cookies[$name];</span><br><span class="line">$value=$cookie-&gt;value;</span><br><span class="line">......</span><br><span class="line"><span class="comment">// 设置一个cookie</span></span><br><span class="line">$cookie=<span class="keyword">new</span> CHttpCookie($name,$value);</span><br><span class="line">Yii::app()-&gt;request-&gt;cookies[$name]=$cookie;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      Yii 是一个基于组件的高性能 PHP 框架, 用于快速开发大型 Web 应用. 它使 Web 开发中的 可复用度最大化, 可以显著提高你的 Web 应用开发速度. Yii 这个名字(读作易(Yee) 或 [ji:])代表 简单(easy), 高效(efficient) 和 可扩展(extensible).
    
    </summary>
    
    
      <category term="notes" scheme="http://locahost:4000/categories/notes/"/>
    
    
      <category term="php" scheme="http://locahost:4000/tags/php/"/>
    
      <category term="framework" scheme="http://locahost:4000/tags/framework/"/>
    
  </entry>
  
  <entry>
    <title>理解 diff 命令</title>
    <link href="http://locahost:4000/2020/03/11/2015-09-28-Understanding_the_diff_command_in_unix/"/>
    <id>http://locahost:4000/2020/03/11/2015-09-28-Understanding_the_diff_command_in_unix/</id>
    <published>2020-03-11T14:46:32.019Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>原文在 2009/04/17 发表于 <a href="http://unix.worldiswelcome.com/understanding-the-diff-command-in-unix" target="_blank" rel="noopener">http://unix.worldiswelcome.com/understanding-the-diff-command-in-unix</a></em></p><p>Unix 系统管理员来经常需要去知道两个文件之间有什么差异. <code>diff</code> 命令就是干这个的. 我现在就准备讲讲 <code>diff</code>. 它是一个经常被用到却不是很被了解的命令. 我希望 Unix 使用者在读完这篇文章之后能够正确了解这个命令的用途并从中获益. 另外一个有用的命令是: <a href="http://unix.worldiswelcome.com/how-to-find-common-lines-between-two-text-files-in-unix" target="_blank" rel="noopener"><code>comm</code></a> 命令. 我们开始吧…</p><p>示例文件分别是 <em>first</em> 文件和 <em>second</em> 文件. 如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">wiw_labs:$ nl first</span><br><span class="line">1 computer</span><br><span class="line">2 modem</span><br><span class="line">3 monitor</span><br><span class="line">4 phone</span><br><span class="line">5 switch</span><br><span class="line"></span><br><span class="line">wiw_labs:$ nl second</span><br><span class="line">1 cable</span><br><span class="line">2 mobile</span><br><span class="line">3 screen</span><br><span class="line">4 modem</span><br><span class="line">5 phone</span><br><span class="line">6 server</span><br></pre></td></tr></table></figure><p><code>diff</code> 命令用来比较这两个文件之间的差异</p><p>#diff 命令的用法</p><p>我命先从 <code>diff</code> 的用法说起. <code>diff</code> 通常这样使用:</p><pre><code>diff first_file second_file</code></pre><p>这条命令意即: first_file 和 second_file 有什么不同</p><p>#diff 命令如何工作</p><p><code>diff</code> 命令的运作原理就是, 想法设法的让 <em>first</em> 文件和 <em>second</em> 文件一样. 它希望通过更改(c), 删除(d) <em>first</em> 文件中的行以使其和 <em>second</em> 文件一模一样. 如果需要, 它还会把 <em>second</em> 文件中的行附加到 <em>first</em> 文件中. 如果你明白我说的什么, 很好, 如果不明白也随便. 当我使用示例给你解释的时候你就会明白的.</p><p><code>diff</code> 就是通过下面的这些步骤来生成这两个文件的差异报告的:</p><ol><li><p>它从 <em>first</em> 文件和 <em>second</em> 文件的第 1 行开始. 如果它们不一样, <code>diff</code> 便顺着 <em>first</em> 文件往下找, 直到找到和 <em>second</em> 文件中相似的条目.</p></li><li><p>如果在 <em>first</em> 文件中没有找到和 <em>second</em> 文件第 1 行相同的行, 它就再从 <em>second</em> 文件的第 2 行开始. 它会在 <em>first</em> 文件中开始找. 然后提议做什么(附加, 更改或删除)</p></li></ol><p>#示例<br>理论讲得够多了. 我们来点实际例子好解释的更通透一点.<br>我把这两个文件并排来放, 好理解起来更容易一些. 另外行号也一并显示了出来.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">wiw_labs:$ paste first second|nl</span><br><span class="line">1 computer cable</span><br><span class="line">2 modem mobile</span><br><span class="line">3 monitor screen</span><br><span class="line">4 phone modem</span><br><span class="line">5 switch phone</span><br><span class="line">6           server</span><br><span class="line"></span><br><span class="line">wiw_labs:$ diff first second</span><br><span class="line">1c1,3</span><br><span class="line">&lt; computer</span><br><span class="line">—</span><br><span class="line">&gt; cable</span><br><span class="line">&gt; mobile</span><br><span class="line">&gt; screen</span><br><span class="line">3d4</span><br><span class="line">&lt; monitor</span><br><span class="line">5c6</span><br><span class="line">&lt; switch</span><br><span class="line">—</span><br><span class="line">&gt; server</span><br></pre></td></tr></table></figure><p>现在, 看一下上面 <code>paste</code> 命令带行号的输出. 注意下面几点:</p><ul><li><em>first</em> 文件的第 2 行(modem) 和 <em>second</em> 文件的第 4 行(modem) 一致. 所以, 如果我们把 <em>first</em> 文件中的第 1 行换成 <em>second</em> 文件中的 1 到 3 行, 这两个文件的第一部分便都一样了. 输出看起来就会是这样的:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wiw_labs:$ paste first second|nl</span><br><span class="line">1 cable cable</span><br><span class="line">2 mobile mobile</span><br><span class="line">3 screen screen</span><br><span class="line">4 modem modem</span><br><span class="line">5 monitor phone</span><br><span class="line">6 phone server</span><br><span class="line">7 switch</span><br></pre></td></tr></table></figure><ul><li><em>first</em> 文件的第 4 行(phone) 和 <em>second</em> 文件的第 5 行一致. 这意味着如果我们删除 <em>first</em> 文件中的第 3 行(也就是目前的第 4 行), 这两个文件的第二部分便都一样了.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wiw_labs:$ paste first second|nl</span><br><span class="line">1 cable cable</span><br><span class="line">2 mobile mobile</span><br><span class="line">3 screen screen</span><br><span class="line">4 modem modem</span><br><span class="line">5 phone phone</span><br><span class="line">6 switch server</span><br></pre></td></tr></table></figure><ul><li><em>first</em> 文件的第 5 行(switch)可用 <em>second</em> 文件的第 6 行(server)替换. 至此, 这两个文件完全一样了.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wiw_labs:$ paste first second|nl</span><br><span class="line">1 cable cable</span><br><span class="line">2 mobile mobile</span><br><span class="line">3 screen screen</span><br><span class="line">4 modem modem</span><br><span class="line">5 phone phone</span><br><span class="line">6 server server</span><br></pre></td></tr></table></figure><p>现在, <code>diff</code> 命令的输出更容易理解了:</p><blockquote><p><strong>1c1,3</strong>: 更改 <em>first</em> 文件的第一行为 <em>second</em> 文件的 1 到 3 行</p><p><strong>3d4</strong>: 从 <em>first</em> 文件中删除第 3 行(modem).</p><p><strong>5c6</strong>: 更改 <em>first</em> 文件中的第 5 行(switch) 为 <em>second</em> 文件中的第 6 行(server)</p></blockquote><p>现在, 反过来再看一下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">wiw_labs:$ paste second first | nl</span><br><span class="line">1 cable computer</span><br><span class="line">2 mobile modem</span><br><span class="line">3 screen monitor</span><br><span class="line">4 modem phone</span><br><span class="line">5 phone switch</span><br><span class="line">6 server</span><br><span class="line"></span><br><span class="line">wiw_labs:$ diff second first</span><br><span class="line">1,3c1</span><br><span class="line">&lt; cable</span><br><span class="line">&lt; mobile</span><br><span class="line">&lt; screen</span><br><span class="line">—</span><br><span class="line">&gt; computer</span><br><span class="line">4a3</span><br><span class="line">&gt; monitor</span><br><span class="line">6c5</span><br><span class="line">&lt; server</span><br><span class="line">—</span><br><span class="line">&gt; switch</span><br></pre></td></tr></table></figure><ul><li>我们看到 <em>first</em> 文件的第 4 行(modem) 和 <em>second</em> 文件的第 2 行一致. 所以如果我们把 <em>first</em> 文件的 1 到 3 行替换为 <em>second</em> 文件的第 1 行, 我们得到如下输出:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wiw_labs:$ paste second first | nl</span><br><span class="line">1 computer computer</span><br><span class="line">2 modem modem</span><br><span class="line">3 phone monitor</span><br><span class="line">4 server phone</span><br><span class="line">5 switch</span><br></pre></td></tr></table></figure><ul><li>现在, <em>second</em> 文件的第 3 行(monitor) 在 <em>first</em> 文件中并不存在. 所以, 把它附加到 <em>first</em> 文件的第 4 行(modem)后面. 要记住 <code>diff</code> 命令的输出中的行号永远指的是原始的行号. 现在, 输出看起来是这样的:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wiw_labs:$ paste second first | nl</span><br><span class="line">1 computer computer</span><br><span class="line">2 modem modem</span><br><span class="line">3 monitor monitor</span><br><span class="line">4 phone phone</span><br><span class="line">5 server switch</span><br></pre></td></tr></table></figure><ul><li><em>first</em> 文件的第 6 行(server)需要改成 <em>second</em> 文件的第 5 行(switch). 更改之后, 两个文件便都一样了:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 computer computer</span><br><span class="line">2 modem modem</span><br><span class="line">3 monitor monitor</span><br><span class="line">4 phone phone</span><br><span class="line">5 switch switch</span><br></pre></td></tr></table></figure><p>现在, 更容易理解 <code>diff</code> 命令的输出了:</p><blockquote><p><strong>1,3c1</strong>: 把 <em>first</em> 文件的第 1 到 3 行改为 <em>second</em> 文件的第 1 行.</p><p><strong>4a3</strong>: 在 <em>first</em> 文件的第 4 行(modem)后面附加上 <em>second</em> 文件的第 3 行(monitor).</p><p><strong>6c5</strong>: 把 <em>first</em> 文件的第 6 行(server)改为 <em>second</em> 文件的第 5 行(switch).</p></blockquote>]]></content>
    
    <summary type="html">
    
      Unix 系统管理员来经常需要去知道两个文件之间有什么差异. diff 命令就是干这个的. 我现在就准备讲讲 diff. 它是一个经常被用到却不是很被了解的命令. 我希望 Unix 使用者在读完这篇文章之后能够正确了解这个命令的用途并从中获益.
    
    </summary>
    
    
      <category term="translation" scheme="http://locahost:4000/categories/translation/"/>
    
    
      <category term="linux" scheme="http://locahost:4000/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>HTTP 头和 PHP header() 函数</title>
    <link href="http://locahost:4000/2020/03/11/2015-09-26-Http_headers_and_PHP_header()_function/"/>
    <id>http://locahost:4000/2020/03/11/2015-09-26-Http_headers_and_PHP_header()_function/</id>
    <published>2020-03-11T14:46:32.015Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>原文链接: <a href="http://www.nicholassolutions.com/tutorials/php/headers.html" target="_blank" rel="noopener">http://www.nicholassolutions.com/tutorials/php/headers.html</a></em></p><p><em>版权: 本文受 Creative Commons License 版权保护, 你可以在 Creative Commons Attribution NonCommercial NoDerives 2.5 License 下分发该文</em></p><h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>许多初级到中级的的 PHP 程序员把 <a href="http://www.php.net/manual/function.header.php" target="_blank" rel="noopener">header()</a> 函数当作某种神秘巫术. 他们可以照着代码示例把功能实现, 但是还是不知道到底它是如果运作的. 我最开始就是这样的.</p><p>实际上它非常简单. 在这篇文章中, 我会解释 HTTP 头(header) 是如何运作的, 它们与 PHP 的关系, 以及它们的 meta 标签 equivalents(对应物)</p><p>希望你读完之后, 能更顺手的使用 header() 函数, 甚至想出一些更多利用它的地方. 我们也会讲到其他一些关于 HTTP 和 PHP 的重要话题. 但是在我们开始讲任何程序相关的东西之前, 我们需要先快速(并且不完整的)过一遍 HTTP (HyperTex Transfer Protocol) 运作原理</p><h1 id="HTTP-概览"><a href="#HTTP-概览" class="headerlink" title="HTTP 概览"></a>HTTP 概览</h1><h2 id="Headers-对话中的词语"><a href="#Headers-对话中的词语" class="headerlink" title="Headers: 对话中的词语"></a>Headers: 对话中的词语</h2><p><a href="http://en.wikipedia.org/wiki/HyperText_Transfer_Protocol" target="_blank" rel="noopener">HTTP</a> 是 web 服务器和客户端浏览器之间的数据传输(比如 web 页面中的 HTML, 图片, 文件)协议(‘规则’集合), 并且通常使用 80 <a href="http://en.wikipedia.org/wiki/Port_%28computing%29#Network_port" target="_blank" rel="noopener">端口</a>. 这就是网站 URL 前面 ‘<code>http://</code>‘ 的来源</p><p>很多人最开始制作 web 页面的时候, 他们先在本地电脑上写 HTML, 在本地浏览器查看是否符合预期, 然后上传到服务器, 就可以在网上浏览这些页面了. 看起来好像在无论在本地查看与在服务器上查看的页面都一样, 传输的数据只有这些 HTML 以及它包含的图片. 但是实际上还有另外一些许多你没看到的信息 - 头信息.</p><p>头信息可以分为两大类: 你浏览器向服务器请求文件时发出的请求头信息, 服务器提供文件给浏览器时发出的响应头信息. 把这些头信息当作浏览器和服务器对话时的词语. 我喜欢把服务器想象为图书管理员, 把浏览器想象成正在请求图书资源的学者. 浏览器走向位于服务台 (80 端口) 的服务器, 说道, “Hi, 我是 Mozilla, 我正在找这个编目号是 ‘<a href="http://www.expertsrt.com&#39;" target="_blank" rel="noopener">www.expertsrt.com&#39;</a> 的资源. 你可以帮我找到它吗?” 服务器听到后回应 “是的, 我找到了, 让我把它给你. 这里面是 HTML 文本, 它写的是 ‘<code>&lt;html&gt;...</code>‘“ 浏览器开始从头到尾的读它, 并且遇到了一个图片标签, 所以向服务器要位于 src 属性指定处的图片. 服务器进行查找, 找到这个文件然后说道 “这是个 PNG 图片, 它的数据是…” 你懂的.</p><p id="secondConv">另一个对话可能像这样:</p><blockquote><p>浏览器: Hi, 我是 Mozilla, 能给我在 ‘<a href="http://www.expertsrt.com/moved.html&#39;" target="_blank" rel="noopener">www.expertsrt.com/moved.html&#39;</a> 这里的文件吗?.</p></blockquote><blockquote><p>服务器: 那个文件已经不在那儿了, 他现在在 ‘<a href="http://www.expertsrt.com/newloc.html&#39;" target="_blank" rel="noopener">www.expertsrt.com/newloc.html&#39;</a>.</p></blockquote><blockquote><p>浏览器: Hi, 我是 Mozilla, 能给我在 ‘<a href="http://www.expertsrt.com/newloc.html&#39;" target="_blank" rel="noopener">www.expertsrt.com/newloc.html&#39;</a> 这里的文件吗?</p></blockquote><blockquote><p>服务器: 我找到这个文件了. 查看它 10 秒钟然后再向我问一次. 它是一个 HTML 文本文件, 它有这些内容…</p></blockquote><p>…10 秒钟…</p><blockquote><p>浏览器: Hi, 我是 Mozilla, 能给我在 ‘<a href="http://www.expertsrt.com/newloc.html&#39;" target="_blank" rel="noopener">www.expertsrt.com/newloc.html&#39;</a> 这里的文件吗?</p></blockquote><blockquote><p>服务器: 我找到这个文件了. 查看它 10 秒钟然后再向我问一次. 它是一个 HTML 文本文件, 它有这些内容…</p></blockquote><p>…10 秒钟…</p><blockquote><p>浏览器: Hi, 我是 Mozilla, 能给我在 ‘<a href="http://www.expertsrt.com/newloc.html&#39;" target="_blank" rel="noopener">www.expertsrt.com/newloc.html&#39;</a> 这里的文件吗?</p></blockquote><blockquote><p>服务器: 我找到这个文件了. 查看它 10 秒钟然后再向我问一次. 它一个 HTML 文本文件, 它有这些内容…</p></blockquote><p>…诸如这般, 直到浏览器被用户重新定向…</p><p>正如你所看到的, 使用头信息可以控制许多事情. 使用 header() 函数, 你可以让服务器发送你所需的头信息, 这样你可以做除了发送 HTML 之外许多很酷的事情.</p><h2 id="看看整个对话过程"><a href="#看看整个对话过程" class="headerlink" title="看看整个对话过程"></a>看看整个对话过程</h2><p>在继续之前, 让我们先不使用浏览器来查看一个 web 页面, 这样我们可以看到整个对话, 更好的了解 HTTP 头的工作. 先打开命令行 (在 windows 中, 点击开始菜单-&gt;运行, 输入 <code>cmd</code>, 然后点击 “OK”…如果你正使用 linux, 你或许已经知道怎么打开了). 在命令行中输入:</p><pre><code>telnet expertsrt.com 80</code></pre><p>然后回车. 这会链接到 expersrt.com 的 80 端口. 然后, 复制并粘贴下面的文字:</p><pre><code>GET / HTTP/1.1Host: expertsrt.com</code></pre><p>如果你输入或粘贴这些文字的时候, 命令行除了光标的闪烁没看到任何动静的话, 不要担心 – 它们确实被发送到服务器了. 第一行说明你使用 GET 请求方法去获取资源 / (这里是目标主机上基目录里的文件), 并且你在使用 HTTP 1.1 版本. 第二行告诉服务器你想要连接到哪台主机. 当你输入 ‘expertsrt.com’ 后, 回车两次 (只需两次). 你应当立刻得到类似下面的响应:</p><pre><code>HTTP/1.1 301 Moved PermanentlyDate: Wed, 08 Feb 2006 07:44:07 GMTServer: Apache/2.0.54 (Debian GNU/Linux) mod_auth_pgsql/2.0.2b1 mod_ssl/2.0.54 OpenSSL/0.9.7eLocation: http://www.expertsrt.com/Content-Length: 233Content-Type: text/html; charset=iso-8859-1&lt;!DOCTYPE HTML PUBLIC &quot;-//IETF//DTD HTML 2.0//EN&quot;&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;301 Moved Permanently&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Moved Permanently&lt;/h1&gt;&lt;p&gt;The document has moved &lt;a href=&quot;http://www.expertsrt.com/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>哎呀! 看起来好像我们请求的文件已经不在那儿了; 它已经被移到新的地方了: <code>http://www.expertsrt.com</code>. 如果你使用浏览器, 你只会看到 HTML - 在第一个空白行之前的都是头信息. 实际上, 现代浏览器比这更智能 - 当他们看到第三行的新的 URL 时, 会自动转向那里, 这样你就不用手动再输入这个新的 URL 了. 让我们去这个新的 URL. 这时可能你已经断开连接了. 如果这样, 只需按向上键, telnet 命令会出现, 然后回车以重新连接. 如果你没有断开连接, 那直接输入下面的文字就行:</p><pre><code>GET / HTTP/1.1Host: www.expertsrt.com</code></pre><p>然后回车两次. 你会看到另一个类似的响应, 告诉你那个页面实际上在 <code>http://www.expertsrt.com/index.php</code>. 服务器真挑剔是不是? ;-) 重复上面的操作, 不过这次输入</p><pre><code>GET /index.php HTTP/1.1Host: www.expertsrt.com</code></pre><p>注意我们想要的文件名在第一行. 这一次我们屏幕被文字刷满了: 这就是来自 ERT 主页的 HTML. 这里的头信息看起来是这样的</p><pre><code>HTTP/1.1 200 OKDate: Wed, 08 Feb 2006 08:20:07 GMTServer: Apache/2.0.54 (Debian GNU/Linux) mod_auth_pgsql/2.0.2b1 mod_ssl/2.0.54 OpenSSL/0.9.7eX-Powered-By: PHP/4.4.0Transfer-Encoding: chunkedContent-Type: text/html</code></pre><p>很简单是不是? 我们来继续探讨这跟你编程有什么关系. 如果你不明白我们讲到的所有事情也没有关系. 重要的是对浏览器和服务器如何交互的有个大致印象, 以及意识到并没有什么魔法在里面. 最终就是这些</p><ol><li><p>浏览器和服务器通过使用头信息来进行交互</p></li><li><p>头信息在主要内容之前发送, 并且用两个 <a href="http://www.google.com/search?q=define%3ACRLF" target="_blank" rel="noopener">CRLF</a>/换行符 来和主要内容分割开</p></li><li><p>在头信息部分, 每一行就是一个头. 首先是头的名字, 然后是一个冒号一个空格, 然后是这个头的名/值</p><p> 头名: 头值</p></li><li><p>头信息可以包括许多类型的信息和指示, 以便浏览器和服务器用来告知对方接下来该做什么</p></li></ol><p><strong>提示</strong>: 如果你是那种刨根问底的人, 你可以看看 <a href="http://www.w3.org/Protocols/rfc2616/rfc2616.html" target="_blank" rel="noopener">RFC 2616</a>, 那是 HTTP/1.1 的完整规范. 尤其是 <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14" target="_blank" rel="noopener">14 章</a>, 包含每一个头的完整定义</p><h1 id="PHP-header-基础"><a href="#PHP-header-基础" class="headerlink" title="PHP header(): 基础"></a>PHP header(): 基础</h1><p>注意在我们最终得到的主页中的 X-Powered-By: PHP/4.4.0 和 Content-Type: text/html 这两个头信息. PHP 一开始就被设计成输出 HTML ( PHP 中的 H 即代表 ‘Hypertext’), 并且在 PHP 脚本第一次生成输出(比如, 使用 echo)时, 会自动为你包含这些头信息. 这非常方便, 但也造成许多 PHP 新手对头信息的困惑 - 在像 Perl 这样不是一开始就被设计成用于 web 开发的语言中, 不包含你自己的头而直接发送输出会产生 ‘500 Internal Server Error’ 错误, 所以 Perl 的 web 开发者不得不立即学习关于头信息的知识</p><p><a href="http://www.php.net/manual/function.header.php" target="_blank" rel="noopener"><code>header()</code></a> 函数发送 HTTP 响应头信息, 而且只做这件事</p><p>使用这个函数, 你可以让你的脚本发送你选择的头信息给浏览器, 创造一个非常有用的动态结果. 但是, 你需要知道关于 <code>header()</code> 函数的第一件事就是你必须在 PHP 发送任何输出(这会使 PHP 自动发送默认的头信息)<strong>之前</strong>使用它</p><p>我怀疑有哪个 PHP 程序员没有见到过如下的错误消息</p><pre><code>Warning: Cannot modify header information - headers already sent by.....</code></pre><p>如我们所说的, 响应头信息用一个空白行和主要内容分割. 这意味你仅可以发送头信息一次, 如果你的脚本有任何输出 (即使一个在 <code>&lt;?php</code> 标签之前的空白行或空格), PHP 就会自动发送头信息. 例如, 看一下下面这个脚本, 看起来逻辑上很正常:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Welcome to my website!&lt;br /&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span>($test)&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"You're in!"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    header(<span class="string">'Location: http://www.mysite.com/someotherpage.php'</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个脚本判断 <code>$test</code> 是否为 true, 如果不是则使用 <code>Location</code> 头重定向访问者. 看到问题所在了吗? ‘Welcome…’ 文字始终会发送出去, 所以默认的头信息会自动被发送. 在调用 <code>header()</code> 时已经太晚了: 用户只看到一条错误消息 (如果你把错误报告关掉了, 则只会看到 ‘Welcome…’ 文字), 而不是被重定向</p><p>基本上有两种解决方法. 第一个就是重写代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span>($test)&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">'Welcome to my website&lt;br /&gt;You'</span>re in!<span class="string">';</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  else&#123;</span></span><br><span class="line"><span class="string">    header('</span>Location: http:<span class="comment">//www.mysite.com/someotherpage.php');</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>第二个就是使用<a href="http://www.php.net/outcontrol" target="_blank" rel="noopener">输出缓冲</a>, 这个解决方法更为优雅易用. 在我们上面的例子中, 重写代码并不困难, 但是试想一下如果有很多 HTML 需要移动位置 - 这样做就会很麻烦, 也会让我们的代码更难追踪. 虽然我们第一个示例导致了错误, 但是逻辑上是没错的. 输出缓冲可以让你一直保留(‘缓冲’)输出(即使是 PHP 代码之外的 HTML)直到你明确指示了把输出发送给浏览器. 这样你就可以随意编写你的代码, 知道你指定了你需要指定的头信息, 然后明确指示发送这些输出. 两个相关的函数是 <a href="http://www.php.net/manual/function.ob-start.php" target="_blank" rel="noopener"><code>ob_start()</code></a> 和 <a href="http://www.php.net/manual/function.ob-flush.php" target="_blank" rel="noopener"><code>ob_flush()</code></a>, <code>ob_start()</code>用于打开输出缓冲, <code>ob_flush()</code> 会发送缓冲了的输出:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> ob_start();  <span class="comment">//开始输出缓冲</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">Welcome to my website!</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"You're in!"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    header(<span class="string">'Location: http://www.mysite.com/someotherpage.php'</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ob_flush(); <span class="comment">//输出缓冲中的数据</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我鼓励你读一下所有关于输出缓冲的函数, 非常有用. 你应当尽早的把输出缓冲发送出去, 尤其当你有许多东西想要发送的时候. 否则你的页面会看起来加载的很慢, 因为所有的内容只有被组装完毕后才发送, 而不是当可用的时候立即就被发送出去.</p><p><strong>提示: 第二个参数</strong> 如果你调用 header() 不止一次发送同一个头, 这个头的值将会是_最后_调用的 header() 中设置的值. 如,</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Some-Header: Value-1'</span>);</span><br><span class="line">header(<span class="string">'Some-Header: Value-2'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>会产生 <code>Some-Header: Value-2</code> 这个结果. 你可以通过设置第二个参数来发送同一个头两次. 这个参数默认是 true. 如果你设置其为 false, 那么第二个头值不会替换第一个, 而是两个都被发送. 所以下面的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Some-Header: Value-1'</span>);</span><br><span class="line">header(<span class="string">'Some-Header: Value-2'</span>, <span class="keyword">false</span>); <span class="comment">//不要替换第一个</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>将会产生 <code>Some-Header: Value-1, Value-2</code> 这个结果. 你很少会用到这个, 但是知道它也不错.</p><p>知道了 HTTP header 和 PHP 如何配合之后, 让我们来看一些更为具体的例子.</p><p>#PHP header(): 一些例子</p><p><strong>提示</strong>: 下面这个代码片断都是截取自完整的工作代码. 当你在自己的程序中包含他们的时候, 记得定义所有你自己的变量, 赋给他们默认值, 以及遵循其他最佳实践.</p><p>##使用 <code>Location</code> 头重定向</p><p>我们已经在上面看到过几次了: 它会重定向浏览器.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Location: http/www.mysite.com/new_location.html'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>虽然你给它一个相对 URL 没准也能工作, 但是根据 HTTP 规范, 你真的应该使用一个绝对 URL.</p><p>一个容易犯的错误就是在使用了 Location header 之后不立即使用 <a href="http://www.php.net/manual/function.exit.php" target="_blank" rel="noopener"><code>exit</code></a> 以结束执行 (你可能不是总是想要结束执行, 但是大部分时间是的). 之所以这是一个错误是因为 PHP 代码会继续执行, 即使用户已经被重定向到新的 URL. 在最好的情况下, 这会不必要的使用系统资源. 在最坏的情况下, 你可能会执行一些让自己后悔的操作. 看一下下面的代码:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//重定向访问级别低于 4 的用户</span></span><br><span class="line"><span class="keyword">if</span> (check_access_level($username) &lt; <span class="number">4</span>)&#123;</span><br><span class="line">  header(<span class="string">'Location: http://www.mysite.com/someotherpage.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//向高于访问级别 4 的用户发送秘密邮件</span></span><br><span class="line">mail_secret_code($username);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'The secret email is on its way!'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>未授权用户的确被重定向了, 但是因为代码会继续执行, 他们同样会收到邮件. 为了避免这种情况, 针对已授权用户的代码可以写到 <code>else{}</code> 声明中, 但是直接在 <code>header()</code> 后面使用 <code>exit</code> 来结束代码执行会更为干净容易一些.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//重定向访问级别低于 4 的用户</span></span><br><span class="line"><span class="keyword">if</span> (check_access_level($username) &lt; <span class="number">4</span>)&#123;</span><br><span class="line">  header(<span class="string">'Location: http://www.mysite.com/someotherpage.php'</span>);</span><br><span class="line">  <span class="keyword">exit</span>; <span class="comment">//停止代码执行</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//向高于访问级别 4 的用户发送秘密邮件</span></span><br><span class="line">mail_secret_code($username);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'The secret email is on its way!'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用-Refresh-头重定向"><a href="#使用-Refresh-头重定向" class="headerlink" title="使用 Refresh 头重定向"></a>使用 <code>Refresh</code> 头重定向</h2><p><code>Refresh</code> 和 <code>Location</code> 一样可以重定向用户, 但是你可以延迟重定向. 例如, 下面的代码会在显示当前页面 10 秒钟后重定向用户到新的页面:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Refresh: 10; url=http://www.mysite.com/otherpage.php'</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'You will be redirected in 10 seconds'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>另一个常见的用途就是通过重复的’重定向’一个页面到它自身来强制更新页面 (参见<a href="#secondConv">上面</a>的第二个 ‘对话’). 例如, 这里是一个简单的例子, 页面会从 10 开始向下数, 每个数字之间有 3 秒间隔:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'n'</span>]))&#123;</span><br><span class="line">    $_GET[<span class="string">'n'</span>] = <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'n'</span>] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">  header(<span class="string">'Refresh: 3; url='</span> . $_SERVER[<span class="string">'PHP_SELF'</span>].<span class="string">'?n='</span> . ($_GET[<span class="string">'n'</span>]<span class="number">-1</span>)  );</span><br><span class="line">  <span class="keyword">echo</span> $_GET[<span class="string">'n'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'BLAST OFF!'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>提示</strong>: 如果刷新时间设置成 0, 则 <code>Refresh</code> 头实际上和 <code>Location</code> 头完全一样</p><h2 id="使用-Content-Type-头来提供不同类型的文件以及生成动态内容"><a href="#使用-Content-Type-头来提供不同类型的文件以及生成动态内容" class="headerlink" title="使用 Content-Type 头来提供不同类型的文件以及生成动态内容"></a>使用 <code>Content-Type</code> 头来提供不同类型的文件以及生成动态内容</h2><p>服务器用 <code>Content-Type</code> 头告诉浏览器自己将要发送什么类型的数据. 使用这个头信息, 你可以让 PHP 脚本输出任何类型的文件, 从纯文本文件到图片文件到 zip 文件等等. 下面的表格列举了最常用的一个 <a href="http://en.wikipedia.org/wiki/Mime_type" target="_blank" rel="noopener">MIME 类型</a>:</p><p><strong>常用 MIME 类型:</strong></p><table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>text/html</td><td>HTML (PHP 默认)</td></tr><tr><td>text/plain</td><td>纯文本</td></tr><tr><td>image/gif</td><td>GIF 图片</td></tr><tr><td>image/jpeg</td><td>JPEG 图片</td></tr><tr><td>image/png</td><td>PNG 图片</td></tr><tr><td>video/mpeg</td><td>MPEG 视频</td></tr><tr><td>audio/wav</td><td>WAV 音频</td></tr><tr><td>audio/mpeg</td><td>MP3 音频</td></tr><tr><td>video/mov</td><td>mov 视频</td></tr><tr><td>video/quicktime</td><td>Quicktime 视频</td></tr><tr><td>video/x-ms-wmv</td><td>Windows WMV 视频</td></tr><tr><td>audio/x-ms-wma</td><td>Windows WMA 音频</td></tr><tr><td>audio/x-realaudio</td><td>RealPlayer 音频/视频 (.rm)</td></tr><tr><td>audio/x-pn-realaudio</td><td>RealPlayer 音频/视频 (.ram)</td></tr><tr><td>video/x-msvideo</td><td>ms 视频</td></tr><tr><td>video/avi</td><td>AVI 视频</td></tr><tr><td>application/pdf</td><td>PDF 文档</td></tr><tr><td>application/msword</td><td>MS Word .doc 文件</td></tr><tr><td>application/zip</td><td>Zip 文件</td></tr><tr><td>application/octet-stream</td><td>其他. 数据. 用于强制下载或使用应用打开.*</td></tr><tr><td>x-foo/x-bar</td><td>其他. 数据. 用于强制下载或使用应用打开.*</td></tr></tbody></table><p>你可以用此来做一些有趣的事情. 比如, 你可能想要向用户发用一个预先格式化过的文本文件, 而不是 HTML:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Content-Type: text/plain'</span>);</span><br><span class="line"><span class="keyword">echo</span> $plain_text_content;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>另或者你想要提示用户下载文件, 而不是在浏览器中查看它. 使用 <code>Content-Disposition</code> 头, 这很容易, 你甚至可以推荐一个文件名给用户:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Content-Type: application/octet-stream'</span>);</span><br><span class="line">header(<span class="string">'Content-Disposition: attachment; '</span></span><br><span class="line">       .<span class="string">'filename="plain_text_file.txt"'</span>);</span><br><span class="line"><span class="keyword">echo</span> $plain_text_content;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>另或者你需要提供文件文件, 但是又希望隐藏文件的真实路径和名字, 并且只让已登录的用户下载:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($b_is_logged_in)&#123;</span><br><span class="line">   header(<span class="string">'Content-Type: application/octet-stream'</span>);</span><br><span class="line">   header(<span class="string">'Content-Disposition: attachment; '</span></span><br><span class="line">           .<span class="string">'filename="'</span>.$different_filename.<span class="string">'"'</span>);</span><br><span class="line">   readfile(<span class="string">'/path/to/files/'</span> . $filename);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">'You are not authorized to view this file'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>又或者你已经使用 PHP 的<a href="http://www.php.net/manual/ref.image.php" target="_blank" rel="noopener">图片函数</a>动态生成了一个图片, 想要展示给用户. 你可以创建一个 <code>build_image.php</code> 文件, 像这样</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="comment">//生成图片, 然后</span></span><br><span class="line">   header(<span class="string">'Content-Type: image/jpeg'</span>);</span><br><span class="line">   imagejpeg($image_resouce);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>提示</strong>: 当心 <a href="http://www.php.net/magic_quotes" target="_blank" rel="noopener"><code>magic_quotes</code></a>! PHP 会自动使用反斜杠转移特殊字符, 这一开始看起来是个好主意, 但是大多数好的程序员认为 (a) 这会鼓励不去验证输入的粗心代码, 并且 (b) 在良好的代码中会产生本不该有 (如果 <code>magic_quote</code> 关闭) 的麻烦. 其中一个麻烦就是二进制数据被破坏. 在上面这个例子中, 如果 <a href="http://www.php.net/manual/en/ref.info.php#ini.magic-quotes-runtime" target="_blank" rel="noopener"><code>magic_quotes_runtime</code></a>被启用, 则 <code>readfile()</code> 输出的数据可能被添加反斜杠, 导致发送给用户的文件被破坏. 完美情况下, 你应该在 <code>php.ini</code> 文件中关闭 <code>magic_quotes_runtime</code> 选项, 但是如果你没有权限访问这个配置文件, 你可以使用 <a href="http://www.php.net/manual/en/function.set-magic-quotes-runtime.php" target="_blank" rel="noopener"><code>set_magic_quotes_runtime()</code></a> 函数 (给它传个数字 0) 关闭它.</p><p>令人高兴的是, 最近的一次 PHP <a href="http://www.php.net/~derick/meeting-notes.html#magic-quotes" target="_blank" rel="noopener">开发者会议</a>显示, 在未来版本(6+) 的 PHP 中 <code>magic quotes</code> 会被弃用. 但是在所有人升级到这个版本的 PHP 之前, 记住这个导致的问题会节省你很多麻烦和疑问.</p><p>你可以在 URL 中传递生成图片所需的参数, 然后使用 $_GET 获取它们. 然后在另一个页面, 你可以使用 img 标签来包含这个图片:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"build_image.php&lt;?php echo "</span>?$user_id&amp;amp;$caption<span class="string">"; ?&gt;"</span>&gt;</span><br></pre></td></tr></table></figure><p>可用的地方几乎讲不完. 你 PHP 变成越多, 越会发现 <code>Content-Type</code> 头真的是你的好朋友</p><p><strong>提示</strong>: 浏览器处理各式 <code>MIME类型</code> 的_预期_方式以及_实际_方式可能并不一致 (尤其是 Internet Explorer), 所以你最好是在你需要支持的浏览器中测试一下. PHP 参考中的<a href="http://www.php.net/manual/function.header.php#usernotes" target="_blank" rel="noopener">用户评论</a>有许多关于此的技巧.</p><p>##防止页面缓存</p><p>PHP 页面通常会生成非常动态的内容, 为了防止用户因为页面缓存而错过了更新过的页面, 告诉浏览器不要缓存特定的页面通常非常有用. 下面的代码在可能会访问你网站的浏览器中工作的很好:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Cache-Control: no-cache, no-store, must-revalidate'</span>); <span class="comment">//HTTP/1.1</span></span><br><span class="line">header(<span class="string">'Expires: Sun, 01 Jul 2005 00:00:00 GMT'</span>);</span><br><span class="line">header(<span class="string">'Pragma: no-cache'</span>); <span class="comment">//HTTP/1.0</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>Expires</code> 头可以是任何已经过去的日期. 对于 <code>MIME 类型</code>, 浏览器 (尤其是较老的) 可能不会总是正确的理解你的缓存指示 (虽然大部分现代浏览器会).</p><h2 id="其他应用"><a href="#其他应用" class="headerlink" title="其他应用"></a>其他应用</h2><p>还有另外一个可以使用头信息的地方, 比如设置 <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html" target="_blank" rel="noopener">HTTP 响应码</a>, 或者执行 <a href="http://www.php.net/manual/features.http-auth.php" target="_blank" rel="noopener">HTTP 认证</a> (如果你作为 <code>Apache</code> 模块来使用 PHP 的话). 现在, 你了解了 header() 如何工作及怎么使用它, 你可以用它做你之前想都没想到的许多事情了.</p><h1 id="PHP-中的请求头信息"><a href="#PHP-中的请求头信息" class="headerlink" title="PHP 中的请求头信息"></a>PHP 中的请求头信息</h1><p>我们讲了怎么使用响应头信息了. 我们还可以从浏览器发给服务器的请求头信息中获取很多信息. 有两种方法来获取. 第一, 许多 [<code>$_SERVER</code>数组][server]中的值都是由传来的请求头信息决定的. 第二, 如果 PHP 是作为 <code>Apache</code> 模块使用的, <a href="http://www.php.net/manual/function.apache-request-headers.php" target="_blank" rel="noopener"><code>apache_request_headers()</code></a> 会返回一个包含所有请求头信息的数组 (甚至那些不在 <code>$_SERVER</code> 中的).</p><h2 id="安全第一-不要信任请求头信息"><a href="#安全第一-不要信任请求头信息" class="headerlink" title="安全第一: 不要信任请求头信息"></a>安全第一: 不要信任请求头信息</h2><p>因为请求头信息发自浏览器, 浏览器又可以在客户端被控制, 所以你<strong>永远不要信任来自请求头, 又和你站点安全紧密相关的头信息</strong>. 一个很好的例子就是 <code>$_SERVER[&#39;HTTP_REFERER&#39;]</code>变量, 这个变量应该包含一个用户转自的源 URL. 一个新手的常见错误就是认为他们可以使用这个来确保用户只会通过特定路径来访问页面, 因此他们便无需关心服务器端的数据验证. 例如, 看看下面的代码, 它试着去确保数据是从一个特定的页面发送过来的, 而不是从另一个站点</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">if</span>($_SERVER[<span class="string">'HTTP_REFERER'</span>] != <span class="string">'http://www.mysite.com/myform.html'</span>)&#123;</span><br><span class="line">   header(<span class="string">'Refresh: 5; url=http://www.mysite.com/myform.html'</span>);</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">'You must use the form on my site...redirecting now.'</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span>&#123;</span><br><span class="line">   insert_data($_POST[<span class="string">'var1'</span>], $_POST[<span class="string">'var2'</span>]);</span><br><span class="line"> &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这或许会阻止那些不是很精通的黑客通过他的浏览器提交一个自定义的表单来提交数据, 但是任何一个稍微高深一些的黑客都可以通过使用 <code>telnet</code> 来提交数据, 包括请求头信息</p><pre><code>Referer: http://www.mysite.com/myform.html</code></pre><p>然后轻易的躲过这层保护机制. 这里所要讲的重点是: 使用 HTTP 请求头信息来统计一些数据以便提供更好的用户体验 - 大部分的请求头信息都是发自真实的浏览器而且可以被信任…但是<strong>不要</strong>在有关安全的问题上依赖任何请求 header</p><h2 id="使用-HTTP-请求头信息"><a href="#使用-HTTP-请求头信息" class="headerlink" title="使用 HTTP 请求头信息"></a>使用 HTTP 请求头信息</h2><p>你可以用它做几件事. 使用 <code>$_SERVER[&#39;HTTP_USER_AGENT&#39;]</code>你可以探测用户生成他使用的什么浏览器. 你可以检查 <code>$_SERVER[&#39;HTTP_ACCEPT_LANGUAGE&#39;]</code> (可能要配合 <code>$_SERVER[&#39;HTTP_ACCEPT_CHARSET&#39;]</code> 和一些 <a href="http://www.expertsrt.com/articles/Rod/city_country_IP.php" target="_blank" rel="noopener">IP 地理位置</a> ) 来决定向用户展示什么语言. 虽然 <code>$_SERVER[&#39;HTTP_REFERER&#39;]</code> 对于安全目的并不能被依赖, 但是可以用来统计你网站的流量, 或者根据用户的访问路径来定制显示内容. 如果因为某些原因你想要操作原始的请求字符串, 你可以使用 <code>$_SERVER[&#39;QUERY_STRING&#39;]</code>. 查看 <code>$_SERVER[&#39;REQUEST_METHOD&#39;]</code> 可以知道你的页面是通过 <code>GET</code> 还是 <code>POST</code> 方法访问的. 还有很多可以帮助你做许多有创意的事情的信息等着你去发现.</p><p>#HTML <code>meta</code> 标签中的 HTTP 头信息 equivalents(对应物)</p><p>很有可能在阅读本文之前, 你已经用过下面的 HTML meta 标签重定向用户了:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"0;http://www.mysite.com/somepage.html"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>看起来很熟悉? ‘http-equiv’ <code>meta</code> 标签即 HTTP 响应头的’对应物’, 引入它们是为了让没有服务器端编程能力的人在写 HTML 页面的时候也能使用强大的头信息功能. 使用这些 meta 标签很简单: 它们可以被放在文档 <code>&lt;head&gt;</code> 中的任何地方, <code>http-equiv</code> 属性包含头名, <code>content</code> 属性包含头值.</p><p>我发现这些 meta 标签最开始也会和 HTTP 头一样让人困惑, 但是现在它们在你看来应该很简单了. 虽然我更喜欢使用 PHP 的 <code>header()</code> 函数, 但是 <code>meta</code> 标签的 HTTP equivalents 对于像指定字符集这样的事情会更顺手一些. 比如, 我经常在 HTML 页面中使用 (有时候 PHP 页面中也会用到):</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><strong>提示</strong>: 使用 <code>meta</code> 标签来指定头信息并不被一致的支持, 所以通常来讲使用头信息本身会更加安全和快速. 另外很明显, 还有一些头的名值对并不能用 <code>meta equivalents</code> 来指定: 在真正的头信息被发送, 浏览器已经把文档读取为 HTML 之后, 你是不能再去设置 <code>Content-Type</code> 成 <code>image/png</code> 的 ;-)</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>现在我们讲完了, 你应该对 HTTP 的工作原理以及如何使用响应请求头信息以及如何把它们应用到自己的代码中有了很好的认识. 这些知识也会让你在 web 应用的效率和安全方面有更审慎的思考. 我希望在你继续编程的时候, 会发现你使用 HTTP 头信息更加顺手了, 也能通过使用它们让你的工作更加轻松, 你的页面更好了.</p><p>还有额外一点, 记住头信息就像是词语: 它们交流信息并请求某些操作被执行, 但是本身并不强制任何事情. 99.9% 的情况下, 浏览器和服务器和谐合作, 事情发展很顺利. 但记住在现实中, 是不是你会遇到一些混蛋 (黑客), 或者一些只想按照自己意愿做事的东西 (Internet Explorer). web 开发从很多角度讲是一个客服性质的工作, 所以你应该尽全力避免这些东西, 满足客户的 ‘特殊需要’ :-)</p><hr>]]></content>
    
    <summary type="html">
    
      许多初级到中级的的 PHP 程序员把 header() 函数当作某种神秘巫术. 他们可以照着代码示例把功能实现, 但是还是不知道到底它是如果运作的. 我最开始就是这样的.

实际上它非常简单. 在这篇文章中, 我会解释 HTTP 头(header) 是如何运作的, 它们与 PHP 的关系, 以及它们的 meta 标签 equivalents(对应物)
    
    </summary>
    
    
      <category term="translation" scheme="http://locahost:4000/categories/translation/"/>
    
    
      <category term="php" scheme="http://locahost:4000/tags/php/"/>
    
      <category term="http" scheme="http://locahost:4000/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>java 获取图片属性</title>
    <link href="http://locahost:4000/2020/03/11/2015-07-30-java-get-color-model/"/>
    <id>http://locahost:4000/2020/03/11/2015-07-30-java-get-color-model/</id>
    <published>2020-03-11T14:46:32.006Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在使用AE渲染视频时，由于AE不支持某种颜色模式导致不能导入使用这个颜色模式的图片(时间有点久了忘了是那种颜色模式了-_-|||)，所以需要获取到图片使用的颜色模式，并将图片进行转码</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">BufferdImage bfi = ImageIO.read( <span class="keyword">new</span> File(<span class="string">"d:/file/img.jpg"</span>) );</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取图片位深度</span></span><br><span class="line">Int imgBit = bfi.getColorModel().getPixelSize();</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取图片颜色模式 RGB CMYK等模式</span></span><br><span class="line">bfi.getColorModel().getColorSpace().getType();</span><br></pre></td></tr></table></figure><p><a href="http://kickjava.com/src/imageinfo/ImageInfo.java.htm" target="_blank" rel="noopener"><strong>详情请点击&gt;&gt;&gt;</strong></a></p>]]></content>
    
    <summary type="html">
    
      在使用AE渲染视频时，由于AE不支持某种颜色模式导致不能导入使用这个颜色模式的图片(时间有点久了忘了是那种颜色模式了-_-|||)，所以需要获取到图片使用的颜色模式，并将图片进行转码
    
    </summary>
    
    
      <category term="program" scheme="http://locahost:4000/categories/program/"/>
    
    
      <category term="java" scheme="http://locahost:4000/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>AE 使用</title>
    <link href="http://locahost:4000/2020/03/11/2015-07-28-AE-use-introduce/"/>
    <id>http://locahost:4000/2020/03/11/2015-07-28-AE-use-introduce/</id>
    <published>2020-03-11T14:46:32.003Z</published>
    <updated>2020-01-07T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AE-介绍"><a href="#AE-介绍" class="headerlink" title="AE 介绍"></a>AE 介绍</h1><p>AE全称After Effects，是由世界著名的图形设计、出版和成像软件设计公司Adobe Systems Inc.开发的专业非线性特效合成软件。是一个灵活的基于层的2D和3D后期合成软件，包含了上百种特效及预置动画效果，与同为Adobe公司出品的Premiere，Photoshop，Illustrator等软件可以无缝结合，创建无与伦比的效果</p><h1 id="AE简单使用"><a href="#AE简单使用" class="headerlink" title="AE简单使用"></a>AE简单使用</h1><h2 id="第一步-创建project"><a href="#第一步-创建project" class="headerlink" title="第一步: 创建project"></a>第一步: 创建project</h2><p> AE默认自动会创建一个 未命名的project<br> 手动创建: 点击 File -&gt; New -&gt; New Project(快捷键: Ctrl + Alt + N)</p><h2 id="第二步-创建Composition-合成"><a href="#第二步-创建Composition-合成" class="headerlink" title="第二步: 创建Composition(合成)"></a>第二步: 创建Composition(合成)</h2><p> 影片的所有的素材(视频, 图片, 文字…)都放在Composition中, 相当于一个容器<br> 点击 菜单栏上的 Composition -&gt; New Composition… (快捷键 Ctrl + N)</p><p> 出现如图窗口:</p><p> <img src="http://7xr0d3.com1.z0.glb.clouddn.com/blog-post-img/ae-introduce/comp-setting.jpeg" alt="Alt text" title="Optional title"></p><p> Composition Name代表合成的名字 : 自己顺便填<br> Preset 代表视频格式</p><h2 id="第三步添加素材"><a href="#第三步添加素材" class="headerlink" title="第三步添加素材"></a>第三步添加素材</h2><p>  在空白处单击右键 import -&gt; file 选择你需要导入的图片或者视频等素材</p><p>  <img src="http://7xr0d3.com1.z0.glb.clouddn.com/blog-post-img/ae-introduce/project-view.jpeg" alt="添加素材" title="添加素材"></p><h2 id="第四步将素材添加到Composition-合成-中"><a href="#第四步将素材添加到Composition-合成-中" class="headerlink" title="第四步将素材添加到Composition(合成)中"></a>第四步将素材添加到Composition(合成)中</h2><p> 方法1:将素材直接拖拽到Composition中<br> Eg: 如上图 将fodder文件中的素材直接拖拽到test上 即可添加成功<br> 方法很多不列举了…</p><h2 id="第五步制作特效"><a href="#第五步制作特效" class="headerlink" title="第五步制作特效"></a>第五步制作特效</h2><p>  略</p><h2 id="第六步导出影片"><a href="#第六步导出影片" class="headerlink" title="第六步导出影片"></a>第六步导出影片</h2><p> <img src="http://7xr0d3.com1.z0.glb.clouddn.com/blog-post-img/ae-introduce/timeline-panel.jpeg" alt="时间线" title="timeline"></p><p> 当素材添加到Composition成功后会出现如上图<br> 单击左键空白部分 这个区域会显示黄色的线框<br> 此时单击 File -&gt; Export -&gt; Add to Render Queue<br> 在Render Queue窗口会有一个对应的render </p><p> <img src="http://7xr0d3.com1.z0.glb.clouddn.com/blog-post-img/ae-introduce/render-queue.jpeg" alt="render queue" title="render queue"></p><p> 单击lossless可以修改 影片格式等参数<br> 单击output to 后的黄色文字可以就改保存路径和文件名<br> 点击 右边的Render即可渲染导出影片</p><p> <img src="http://7xr0d3.com1.z0.glb.clouddn.com/blog-post-img/ae-introduce/rending.jpeg" alt="rending" title="rending"></p>]]></content>
    
    <summary type="html">
    
      AE全称After Effects，是由世界著名的图形设计、出版和成像软件设计公司Adobe Systems Inc.开发的专业非线性特效合成软件。是一个灵活的基于层的2D和3D后期合成软件，包含了上百种特效及预置动画效果，与同为Adobe公司出品的Premiere，Photoshop，Illustrator等软件可以无缝结合，创建无与伦比的效果
    
    </summary>
    
    
      <category term="tool" scheme="http://locahost:4000/categories/tool/"/>
    
    
      <category term="AE" scheme="http://locahost:4000/tags/AE/"/>
    
  </entry>
  
</feed>
